@use "../variables";

// General styles
body {
  // Background fills entire screen
  background: linear-gradient(indigo, cyan) no-repeat center fixed;
  font-family: Verdana, Courier New, Arial, Sans-serif; // font that distinguishes 1ijlIJ5SoO0
}

header,
main,
footer {
  padding: 0.5%; // create space between words and white rectangles
}

.app {
  text-align: center;
  margin: 3%;
  margin-top: 1%;

  header,
  main,
  footer {
    color: variables.$dark-color;
    background-color: variables.$light-color;
    // Transition betweeen light and dark mode
    transition: color variables.$color-transition,
      background-color variables.$color-transition;
  }

  main {
    border-radius: 5%;
  }
}

.app.dark {
  // Dark themes
  header,
  main,
  footer {
    color: variables.$light-color;
    background-color: variables.$dark-color;
  }
}

.theme-container {
  display: flex;
  padding-left: 0; // remove default padding

  .theme-label {
    flex: 1;
    padding-right: 10px;
    text-align: right;
    cursor: pointer;
  }

  #theme-switch {
    margin-left: 0;
    cursor: pointer;
  }
}

.transition-group {
  > :nth-child(2) {
    position: fixed; // don't show the disappearing details card underneath the real card
  }
}

// Transition effects (active === to, nonactive === from)
// :global = don't turn into a unique class
:global(.slide-left) {
  :global(.transition-enter) {
    transform: translate(110%);
  }

  /* active classes need to appear AFTER nonactive classes,
   * otherwise the new transform will be discarded and the transition won't take place
   */
  :global(.transition-enter-active) {
    transform: translate(0%);
    transition: 600ms ease-in-out;
    position: fixed;
    width: 100%; // match contact's width with other components
  }

  :global(.transition-exit) {
    transform: translate(0%);
  }

  :global(.transition-exit-active) {
    transform: translate(-110%);
    transition: 600ms ease-in-out;
    position: relative;
  }
}

:global(.slide-right) {
  :global(.transition-enter) {
    transform: translate(-110%);
  }

  :global(.transition-enter-active) {
    transform: translate(0%);
    transition: 600ms ease-in-out;
    position: fixed;
    width: 100%; // match contact's width with other components
  }

  :global(.transition-exit) {
    transform: translate(0%);
  }

  :global(.transition-exit-active) {
    transform: translate(110%);
    transition: 600ms ease-in-out;
    position: relative;
  }
}

// Fade transition when selecting projects
:global(.my-fade) {
  :global(.transition-enter) {
    opacity: 0;
    transform: scale(0.9);
  }

  :global(.transition-enter-active) {
    opacity: 1;
    transform: scale(1);
    /* The timeout on CSSTransition remains at 600ms so that things don't disappear
     * before the slide transition finishes */
    transition: opacity 300ms, transform 300ms;
    width: 100%;
  }

  :global(.transition-exit) {
    opacity: 1;
    transform: scale(1);
  }

  :global(.transition-exit-active) {
    opacity: 0;
    transform: scale(0.9);
    transition: opacity 300ms, transform 300ms;
  }
}

// Heading
.heading {
  padding-bottom: 0;

  .name {
    font-size: 2em;
    font-weight: bold;
  }

  .headline {
    font-weight: normal; // remove bold
    font-size: 1.5em;
    padding-bottom: 0.5%;
  }
}

// Nav
.links {
  display: flex;
  justify-content: center;
  padding: 0;
  z-index: 10;

  a {
    text-decoration: none; // no underline normally
  }
}

.sticky {
  position: fixed; // keep navbar at the top of the page
  top: 0;
  left: 0;
}

// Style main if sticky
.sticky ~ main {
  padding-top: 20px; // transition smoothly between sticky and non-sticky
}

// Arrows
:global(.fa-arrow-left),
:global(.fa-arrow-right) {
  font-size: 2em;
}

:global(.arrow-left),
:global(.arrow-right) {
  // Center the arrows vertically and horizontally in the containers
  display: flex;
  justify-content: center;
  align-items: center;
  text-decoration: none;
  width: 2.5%;
  transition: background-color 0.15s ease-in-out;
}

:global(.arrow-left):hover,
:global(.arrow-right):hover {
  background-color: lightgray;
}

:global(.about),
:global(.projects),
:global(.contact) {
  // Place the arrows near the edges and the main content in the middle
  display: flex;
  justify-content: space-between;
}

:global(.about-wrapper),
:global(.contact-wrapper) {
  width: 90%;
  margin: auto;
}

// Home & Error
.home-info,
.error-message {
  font-size: 1.2em;
  margin: 0; // remove the default margins for paragraphs from Bootstrap
}

.error-message {
  color: variables.$red-700;
  transition: color variables.$color-transition;
}

// Footer
.foot {
  display: flex;
  flex-wrap: wrap;
  margin: 0 auto;
}

.foot-left,
.foot-right {
  width: 100%;
}

.react,
.mit,
:global(.projects-github-link) {
  color: var(--bs-indigo);
  transition: color variables.$color-transition;
}

.dark .react,
.dark .mit,
.dark :global(.projects-github-link) {
  color: var(--bs-cyan);
}

.dark .react:hover,
.dark .mit:hover,
.dark :global(.projects-github-link):hover {
  color: #0aa8bd; // slightly darker than cyan
}

.react-img {
  width: 1.7em;
}

@media screen and (min-width: 400px) {
  // Footer text on same line in big viewport
  .foot-left {
    width: 50%;
    text-align: left;
  }

  .foot-right {
    width: 50%;
    text-align: right;
  }
}
