var Po=Object.defineProperty;var Ro=(e,t,r)=>t in e?Po(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var q=(e,t,r)=>(Ro(e,typeof t!="symbol"?t+"":t,r),r),Ot=(e,t,r)=>{if(!t.has(e))throw TypeError("Cannot "+r)};var c=(e,t,r)=>(Ot(e,t,"read from private field"),r?r.call(e):t.get(e)),O=(e,t,r)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,r)},k=(e,t,r,s)=>(Ot(e,t,"write to private field"),s?s.call(e,r):t.set(e,r),r);var at=(e,t,r,s)=>({set _(o){k(e,t,o,r)},get _(){return c(e,t,s)}}),b=(e,t,r)=>(Ot(e,t,"access private method"),r);import{g as mt,c as Pt,a as pe}from"./index-DHxYZlry.js";function Ee(){return typeof navigator=="object"&&"userAgent"in navigator?navigator.userAgent:typeof process=="object"&&"version"in process?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}const Go=Object.freeze(Object.defineProperty({__proto__:null,getUserAgent:Ee},Symbol.toStringTag,{value:"Module"}));var ft={exports:{}},Fo=rs;function rs(e,t,r,s){if(typeof r!="function")throw new Error("method for before hook must be a function");return s||(s={}),Array.isArray(t)?t.reverse().reduce(function(o,n){return rs.bind(null,e,n,o,s)},r)():Promise.resolve().then(function(){return e.registry[t]?e.registry[t].reduce(function(o,n){return n.hook.bind(null,o,s)},r)():r(s)})}var Uo=Co;function Co(e,t,r,s){var o=s;e.registry[r]||(e.registry[r]=[]),t==="before"&&(s=function(n,a){return Promise.resolve().then(o.bind(null,a)).then(n.bind(null,a))}),t==="after"&&(s=function(n,a){var l;return Promise.resolve().then(n.bind(null,a)).then(function(u){return l=u,o(l,a)}).then(function(){return l})}),t==="error"&&(s=function(n,a){return Promise.resolve().then(n.bind(null,a)).catch(function(l){return o(l,a)})}),e.registry[r].push({hook:s,orig:o})}var Do=Io;function Io(e,t,r){if(e.registry[t]){var s=e.registry[t].map(function(o){return o.orig}).indexOf(r);s!==-1&&e.registry[t].splice(s,1)}}var ss=Fo,jo=Uo,$o=Do,Ar=Function.bind,Or=Ar.bind(Ar);function os(e,t,r){var s=Or($o,null).apply(null,r?[t,r]:[t]);e.api={remove:s},e.remove=s,["before","error","after","wrap"].forEach(function(o){var n=r?[t,o,r]:[t,o];e[o]=e.api[o]=Or(jo,null).apply(null,n)})}function Lo(){var e="h",t={registry:{}},r=ss.bind(null,t,e);return os(r,t,e),r}function ns(){var e={registry:{}},t=ss.bind(null,e);return os(t,e),t}var Pr=!1;function Me(){return Pr||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),Pr=!0),ns()}Me.Singular=Lo.bind();Me.Collection=ns.bind();ft.exports=Me;ft.exports.Hook=Me;ft.exports.Singular=Me.Singular;var qo=ft.exports.Collection=Me.Collection;/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */function Rr(e){return Object.prototype.toString.call(e)==="[object Object]"}function is(e){var t,r;return Rr(e)===!1?!1:(t=e.constructor,t===void 0?!0:(r=t.prototype,!(Rr(r)===!1||r.hasOwnProperty("isPrototypeOf")===!1)))}var xo="9.0.0",zo=`octokit-endpoint.js/${xo} ${Ee()}`,Wo={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":zo},mediaType:{format:""}};function Ho(e){return e?Object.keys(e).reduce((t,r)=>(t[r.toLowerCase()]=e[r],t),{}):{}}function as(e,t){const r=Object.assign({},e);return Object.keys(t).forEach(s=>{is(t[s])?s in e?r[s]=as(e[s],t[s]):Object.assign(r,{[s]:t[s]}):Object.assign(r,{[s]:t[s]})}),r}function Gr(e){for(const t in e)e[t]===void 0&&delete e[t];return e}function Ct(e,t,r){var o;if(typeof t=="string"){let[n,a]=t.split(" ");r=Object.assign(a?{method:n,url:a}:{url:n},r)}else r=Object.assign({},t);r.headers=Ho(r.headers),Gr(r),Gr(r.headers);const s=as(e||{},r);return r.url==="/graphql"&&(e&&((o=e.mediaType.previews)!=null&&o.length)&&(s.mediaType.previews=e.mediaType.previews.filter(n=>!s.mediaType.previews.includes(n)).concat(s.mediaType.previews)),s.mediaType.previews=(s.mediaType.previews||[]).map(n=>n.replace(/-preview/,""))),s}function Mo(e,t){const r=/\?/.test(e)?"&":"?",s=Object.keys(t);return s.length===0?e:e+r+s.map(o=>o==="q"?"q="+t.q.split("+").map(encodeURIComponent).join("+"):`${o}=${encodeURIComponent(t[o])}`).join("&")}var No=/\{[^}]+\}/g;function Bo(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function Vo(e){const t=e.match(No);return t?t.map(Bo).reduce((r,s)=>r.concat(s),[]):[]}function Fr(e,t){return Object.keys(e).filter(r=>!t.includes(r)).reduce((r,s)=>(r[s]=e[s],r),{})}function cs(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(t){return/%[0-9A-Fa-f]/.test(t)||(t=encodeURI(t).replace(/%5B/g,"[").replace(/%5D/g,"]")),t}).join("")}function De(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()})}function Ve(e,t,r){return t=e==="+"||e==="#"?cs(t):De(t),r?De(r)+"="+t:t}function Ce(e){return e!=null}function Rt(e){return e===";"||e==="&"||e==="?"}function Ko(e,t,r,s){var o=e[r],n=[];if(Ce(o)&&o!=="")if(typeof o=="string"||typeof o=="number"||typeof o=="boolean")o=o.toString(),s&&s!=="*"&&(o=o.substring(0,parseInt(s,10))),n.push(Ve(t,o,Rt(t)?r:""));else if(s==="*")Array.isArray(o)?o.filter(Ce).forEach(function(a){n.push(Ve(t,a,Rt(t)?r:""))}):Object.keys(o).forEach(function(a){Ce(o[a])&&n.push(Ve(t,o[a],a))});else{const a=[];Array.isArray(o)?o.filter(Ce).forEach(function(l){a.push(Ve(t,l))}):Object.keys(o).forEach(function(l){Ce(o[l])&&(a.push(De(l)),a.push(Ve(t,o[l].toString())))}),Rt(t)?n.push(De(r)+"="+a.join(",")):a.length!==0&&n.push(a.join(","))}else t===";"?Ce(o)&&n.push(De(r)):o===""&&(t==="&"||t==="?")?n.push(De(r)+"="):o===""&&n.push("");return n}function Jo(e){return{expand:Qo.bind(null,e)}}function Qo(e,t){var r=["+","#",".","/",";","?","&"];return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(s,o,n){if(o){let l="";const u=[];if(r.indexOf(o.charAt(0))!==-1&&(l=o.charAt(0),o=o.substr(1)),o.split(/,/g).forEach(function(f){var T=/([^:\*]*)(?::(\d+)|(\*))?/.exec(f);u.push(Ko(t,l,T[1],T[2]||T[3]))}),l&&l!=="+"){var a=",";return l==="?"?a="&":l!=="#"&&(a=l),(u.length!==0?l:"")+u.join(a)}else return u.join(",")}else return cs(n)})}function ls(e){var T;let t=e.method.toUpperCase(),r=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),s=Object.assign({},e.headers),o,n=Fr(e,["method","baseUrl","url","headers","request","mediaType"]);const a=Vo(r);r=Jo(r).expand(n),/^http/.test(r)||(r=e.baseUrl+r);const l=Object.keys(e).filter(_=>a.includes(_)).concat("baseUrl"),u=Fr(n,l);if(!/application\/octet-stream/i.test(s.accept)&&(e.mediaType.format&&(s.accept=s.accept.split(/,/).map(_=>_.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")),r.endsWith("/graphql")&&(T=e.mediaType.previews)!=null&&T.length)){const _=s.accept.match(/[\w-]+(?=-preview)/g)||[];s.accept=_.concat(e.mediaType.previews).map(A=>{const R=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${A}-preview${R}`}).join(",")}return["GET","HEAD"].includes(t)?r=Mo(r,u):"data"in u?o=u.data:Object.keys(u).length&&(o=u),!s["content-type"]&&typeof o<"u"&&(s["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(t)&&typeof o>"u"&&(o=""),Object.assign({method:t,url:r,headers:s},typeof o<"u"?{body:o}:null,e.request?{request:e.request}:null)}function Yo(e,t,r){return ls(Ct(e,t,r))}function us(e,t){const r=Ct(e,t),s=Yo.bind(null,r);return Object.assign(s,{DEFAULTS:r,defaults:us.bind(null,r),merge:Ct.bind(null,r),parse:ls})}var Xo=us(null,Wo);class Dt extends Error{constructor(t){super(t),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="Deprecation"}}const Zo=Object.freeze(Object.defineProperty({__proto__:null,Deprecation:Dt},Symbol.toStringTag,{value:"Module"}));var Nt={exports:{}},en=ps;function ps(e,t){if(e&&t)return ps(e)(t);if(typeof e!="function")throw new TypeError("need wrapper function");return Object.keys(e).forEach(function(s){r[s]=e[s]}),r;function r(){for(var s=new Array(arguments.length),o=0;o<s.length;o++)s[o]=arguments[o];var n=e.apply(this,s),a=s[s.length-1];return typeof n=="function"&&n!==a&&Object.keys(a).forEach(function(l){n[l]=a[l]}),n}}var ds=en;Nt.exports=ds(ct);Nt.exports.strict=ds(hs);ct.proto=ct(function(){Object.defineProperty(Function.prototype,"once",{value:function(){return ct(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return hs(this)},configurable:!0})});function ct(e){var t=function(){return t.called?t.value:(t.called=!0,t.value=e.apply(this,arguments))};return t.called=!1,t}function hs(e){var t=function(){if(t.called)throw new Error(t.onceError);return t.called=!0,t.value=e.apply(this,arguments)},r=e.name||"Function wrapped with `once`";return t.onceError=r+" shouldn't be called more than once",t.called=!1,t}var tn=Nt.exports;const gs=mt(tn);var rn=gs(e=>console.warn(e)),sn=gs(e=>console.warn(e)),ke=class extends Error{constructor(e,t,r){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="HttpError",this.status=t;let s;"headers"in r&&typeof r.headers<"u"&&(s=r.headers),"response"in r&&(this.response=r.response,s=r.response.headers);const o=Object.assign({},r.request);r.request.headers.authorization&&(o.headers=Object.assign({},r.request.headers,{authorization:r.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),o.url=o.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=o,Object.defineProperty(this,"code",{get(){return rn(new Dt("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),t}}),Object.defineProperty(this,"headers",{get(){return sn(new Dt("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.")),s||{}}})}},on="8.1.0";function nn(e){return e.arrayBuffer()}function Ur(e){var l,u,f;const t=e.request&&e.request.log?e.request.log:console,r=((l=e.request)==null?void 0:l.parseSuccessResponseBody)!==!1;(is(e.body)||Array.isArray(e.body))&&(e.body=JSON.stringify(e.body));let s={},o,n,{fetch:a}=globalThis;if((u=e.request)!=null&&u.fetch&&(a=e.request.fetch),!a)throw new Error('Global "fetch" not found. Please provide `options.request.fetch` to octokit or upgrade to node@18 or newer.');return a(e.url,{method:e.method,body:e.body,headers:e.headers,signal:(f=e.request)==null?void 0:f.signal,...e.body&&{duplex:"half"}}).then(async T=>{n=T.url,o=T.status;for(const _ of T.headers)s[_[0]]=_[1];if("deprecation"in s){const _=s.link&&s.link.match(/<([^>]+)>; rel="deprecation"/),A=_&&_.pop();t.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${s.sunset}${A?`. See ${A}`:""}`)}if(!(o===204||o===205)){if(e.method==="HEAD"){if(o<400)return;throw new ke(T.statusText,o,{response:{url:n,status:o,headers:s,data:void 0},request:e})}if(o===304)throw new ke("Not modified",o,{response:{url:n,status:o,headers:s,data:await Gt(T)},request:e});if(o>=400){const _=await Gt(T);throw new ke(an(_),o,{response:{url:n,status:o,headers:s,data:_},request:e})}return r?await Gt(T):T.body}}).then(T=>({status:o,url:n,headers:s,data:T})).catch(T=>{throw T instanceof ke||T.name==="AbortError"?T:new ke(T.message,500,{request:e})})}async function Gt(e){const t=e.headers.get("content-type");return/application\/json/.test(t)?e.json():!t||/^text\/|charset=utf-8$/.test(t)?e.text():nn(e)}function an(e){return typeof e=="string"?e:"message"in e?Array.isArray(e.errors)?`${e.message}: ${e.errors.map(JSON.stringify).join(", ")}`:e.message:`Unknown error: ${JSON.stringify(e)}`}function It(e,t){const r=e.defaults(t);return Object.assign(function(o,n){const a=r.merge(o,n);if(!a.request||!a.request.hook)return Ur(r.parse(a));const l=(u,f)=>Ur(r.parse(r.merge(u,f)));return Object.assign(l,{endpoint:r,defaults:It.bind(null,r)}),a.request.hook(l,a)},{endpoint:r,defaults:It.bind(null,r)})}var N=It(Xo,{headers:{"user-agent":`octokit-request.js/${on} ${Ee()}`}});const cn=Object.freeze(Object.defineProperty({__proto__:null,request:N},Symbol.toStringTag,{value:"Module"}));var ln="7.0.1";function un(e){return`Request failed due to following response errors:
`+e.errors.map(t=>` - ${t.message}`).join(`
`)}var pn=class extends Error{constructor(e,t,r){super(un(r)),this.request=e,this.headers=t,this.response=r,this.name="GraphqlResponseError",this.errors=r.errors,this.data=r.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},dn=["method","baseUrl","url","headers","request","query","mediaType"],hn=["query","method","url"],Cr=/\/api\/v3\/?$/;function gn(e,t,r){if(r){if(typeof t=="string"&&"query"in r)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(const a in r)if(hn.includes(a))return Promise.reject(new Error(`[@octokit/graphql] "${a}" cannot be used as variable name`))}const s=typeof t=="string"?Object.assign({query:t},r):t,o=Object.keys(s).reduce((a,l)=>dn.includes(l)?(a[l]=s[l],a):(a.variables||(a.variables={}),a.variables[l]=s[l],a),{}),n=s.baseUrl||e.endpoint.DEFAULTS.baseUrl;return Cr.test(n)&&(o.url=n.replace(Cr,"/api/graphql")),e(o).then(a=>{if(a.data.errors){const l={};for(const u of Object.keys(a.headers))l[u]=a.headers[u];throw new pn(o,l,a.data)}return a.data.data})}function Bt(e,t){const r=e.defaults(t);return Object.assign((o,n)=>gn(r,o,n),{defaults:Bt.bind(null,r),endpoint:r.endpoint})}Bt(N,{headers:{"user-agent":`octokit-graphql.js/${ln} ${Ee()}`},method:"POST",url:"/graphql"});function mn(e){return Bt(e,{method:"POST",url:"/graphql"})}var fn=/^v1\./,_n=/^ghs_/,Tn=/^ghu_/;async function wn(e){const t=e.split(/\./).length===3,r=fn.test(e)||_n.test(e),s=Tn.test(e);return{type:"token",token:e,tokenType:t?"app":r?"installation":s?"user-to-server":"oauth"}}function yn(e){return e.split(/\./).length===3?`bearer ${e}`:`token ${e}`}async function En(e,t,r,s){const o=t.endpoint.merge(r,s);return o.headers.authorization=yn(e),t(o)}var bn=function(t){if(!t)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if(typeof t!="string")throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return t=t.replace(/^(token|bearer) +/i,""),Object.assign(wn.bind(null,t),{hook:En.bind(null,t)})},Dr="5.0.0",He,Vt=(He=class{static defaults(t){return class extends this{constructor(...s){const o=s[0]||{};if(typeof t=="function"){super(t(o));return}super(Object.assign({},t,o,o.userAgent&&t.userAgent?{userAgent:`${o.userAgent} ${t.userAgent}`}:null))}}}static plugin(...t){var o;const r=this.plugins;return o=class extends this{},o.plugins=r.concat(t.filter(a=>!r.includes(a))),o}constructor(t={}){const r=new qo,s={baseUrl:N.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},t.request,{hook:r.bind(null,"request")}),mediaType:{previews:[],format:""}};if(s.headers["user-agent"]=[t.userAgent,`octokit-core.js/${Dr} ${Ee()}`].filter(Boolean).join(" "),t.baseUrl&&(s.baseUrl=t.baseUrl),t.previews&&(s.mediaType.previews=t.previews),t.timeZone&&(s.headers["time-zone"]=t.timeZone),this.request=N.defaults(s),this.graphql=mn(this.request).defaults(s),this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},t.log),this.hook=r,t.authStrategy){const{authStrategy:n,...a}=t,l=n(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:a},t.auth));r.wrap("request",l.hook),this.auth=l}else if(!t.auth)this.auth=async()=>({type:"unauthenticated"});else{const n=bn(t.auth);r.wrap("request",n.hook),this.auth=n}this.constructor.plugins.forEach(n=>{Object.assign(this,n(this,t))})}},He.VERSION=Dr,He.plugins=[],He);const vn=Object.freeze(Object.defineProperty({__proto__:null,Octokit:Vt},Symbol.toStringTag,{value:"Module"}));var kn="11.3.1";function Sn(e){if(!e.data)return{...e,data:[]};if(!("total_count"in e.data&&!("url"in e.data)))return e;const r=e.data.incomplete_results,s=e.data.repository_selection,o=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;const n=Object.keys(e.data)[0],a=e.data[n];return e.data=a,typeof r<"u"&&(e.data.incomplete_results=r),typeof s<"u"&&(e.data.repository_selection=s),e.data.total_count=o,e}function Kt(e,t,r){const s=typeof t=="function"?t.endpoint(r):e.request.endpoint(t,r),o=typeof t=="function"?t:e.request,n=s.method,a=s.headers;let l=s.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!l)return{done:!0};try{const u=await o({method:n,url:l,headers:a}),f=Sn(u);return l=((f.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:f}}catch(u){if(u.status!==409)throw u;return l="",{value:{status:200,headers:{},data:[]}}}}})}}function ms(e,t,r,s){return typeof r=="function"&&(s=r,r=void 0),fs(e,[],Kt(e,t,r)[Symbol.asyncIterator](),s)}function fs(e,t,r,s){return r.next().then(o=>{if(o.done)return t;let n=!1;function a(){n=!0}return t=t.concat(s?s(o.value,a):o.value.data),n?t:fs(e,t,r,s)})}Object.assign(ms,{iterator:Kt});function _s(e){return{paginate:Object.assign(ms.bind(null,e),{iterator:Kt.bind(null,e)})}}_s.VERSION=kn;var An=(e,t)=>`The cursor at "${e.join(",")}" did not change its value "${t}" after a page transition. Please make sure your that your query is set up correctly.`,On=class extends Error{constructor(e,t){super(An(e.pathInQuery,t)),this.pageInfo=e,this.cursorValue=t,this.name="MissingCursorChangeError",Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},Pn=class extends Error{constructor(e){super(`No pageInfo property found in response. Please make sure to specify the pageInfo in your query. Response-Data: ${JSON.stringify(e,null,2)}`),this.response=e,this.name="MissingPageInfo",Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},Rn=e=>Object.prototype.toString.call(e)==="[object Object]";function Ts(e){const t=ws(e,"pageInfo");if(t.length===0)throw new Pn(e);return t}var ws=(e,t,r=[])=>{for(const s of Object.keys(e)){const o=[...r,s],n=e[s];if(n.hasOwnProperty(t))return o;if(Rn(n)){const a=ws(n,t,o);if(a.length>0)return a}}return[]},Qe=(e,t)=>t.reduce((r,s)=>r[s],e),Ft=(e,t,r)=>{const s=t[t.length-1],o=[...t].slice(0,-1),n=Qe(e,o);typeof r=="function"?n[s]=r(n[s]):n[s]=r},Gn=e=>{const t=Ts(e);return{pathInQuery:t,pageInfo:Qe(e,[...t,"pageInfo"])}},ys=e=>e.hasOwnProperty("hasNextPage"),Fn=e=>ys(e)?e.endCursor:e.startCursor,Un=e=>ys(e)?e.hasNextPage:e.hasPreviousPage,Es=e=>(t,r={})=>{let s=!0,o={...r};return{[Symbol.asyncIterator]:()=>({async next(){if(!s)return{done:!0,value:{}};const n=await e.graphql(t,o),a=Gn(n),l=Fn(a.pageInfo);if(s=Un(a.pageInfo),s&&l===o.cursor)throw new On(a,l);return o={...o,cursor:l},{done:!1,value:n}}})}},Cn=(e,t)=>{if(Object.keys(e).length===0)return Object.assign(e,t);const r=Ts(e),s=[...r,"nodes"],o=Qe(t,s);o&&Ft(e,s,u=>[...u,...o]);const n=[...r,"edges"],a=Qe(t,n);a&&Ft(e,n,u=>[...u,...a]);const l=[...r,"pageInfo"];return Ft(e,l,Qe(t,l)),e},Dn=e=>{const t=Es(e);return async(r,s={})=>{let o={};for await(const n of t(r,s))o=Cn(o,n);return o}};function In(e){return e.graphql,{graphql:Object.assign(e.graphql,{paginate:Object.assign(Dn(e),{iterator:Es(e)})})}}var jn="13.2.2",$n={actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repos/{owner}/{repo}/environments/{environment_name}/variables"],createOrUpdateEnvironmentSecret:["PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],forceCancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],generateRunnerJitconfigForOrg:["POST /orgs/{org}/actions/runners/generate-jitconfig"],generateRunnerJitconfigForRepo:["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getCustomOidcSubClaimForRepo:["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],getEnvironmentPublicKey:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoOrganizationSecrets:["GET /repos/{owner}/{repo}/actions/organization-secrets"],listRepoOrganizationVariables:["GET /repos/{owner}/{repo}/actions/organization-variables"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],reviewCustomGatesForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setCustomOidcSubClaimForRepo:["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsDone:["DELETE /notifications/threads/{thread_id}"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallationRequestsForAuthenticatedApp:["GET /app/installation-requests"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getDefaultSetup:["GET /repos/{owner}/{repo}/code-scanning/default-setup"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],updateDefaultSetup:["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],checkPermissionsForDevcontainer:["GET /repos/{owner}/{repo}/codespaces/permissions_check"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},copilot:{addCopilotSeatsForTeams:["POST /orgs/{org}/copilot/billing/selected_teams"],addCopilotSeatsForUsers:["POST /orgs/{org}/copilot/billing/selected_users"],cancelCopilotSeatAssignmentForTeams:["DELETE /orgs/{org}/copilot/billing/selected_teams"],cancelCopilotSeatAssignmentForUsers:["DELETE /orgs/{org}/copilot/billing/selected_users"],getCopilotOrganizationDetails:["GET /orgs/{org}/copilot/billing"],getCopilotSeatDetailsForUser:["GET /orgs/{org}/members/{username}/copilot"],listCopilotSeats:["GET /orgs/{org}/copilot/billing/seats"],usageMetricsForEnterprise:["GET /enterprises/{enterprise}/copilot/usage"],usageMetricsForOrg:["GET /orgs/{org}/copilot/usage"],usageMetricsForTeam:["GET /orgs/{org}/team/{team_slug}/copilot/usage"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],exportSbom:["GET /repos/{owner}/{repo}/dependency-graph/sbom"]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"]},oidc:{getOidcCustomSubTemplateForOrg:["GET /orgs/{org}/actions/oidc/customization/sub"],updateOidcCustomSubTemplateForOrg:["PUT /orgs/{org}/actions/oidc/customization/sub"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}"],assignTeamToOrgRole:["PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],assignUserToOrgRole:["PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createCustomOrganizationRole:["POST /orgs/{org}/organization-roles"],createInvitation:["POST /orgs/{org}/invitations"],createOrUpdateCustomProperties:["PATCH /orgs/{org}/properties/schema"],createOrUpdateCustomPropertiesValuesForRepos:["PATCH /orgs/{org}/properties/values"],createOrUpdateCustomProperty:["PUT /orgs/{org}/properties/schema/{custom_property_name}"],createWebhook:["POST /orgs/{org}/hooks"],delete:["DELETE /orgs/{org}"],deleteCustomOrganizationRole:["DELETE /orgs/{org}/organization-roles/{role_id}"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}"],get:["GET /orgs/{org}"],getAllCustomProperties:["GET /orgs/{org}/properties/schema"],getCustomProperty:["GET /orgs/{org}/properties/schema/{custom_property_name}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getOrgRole:["GET /orgs/{org}/organization-roles/{role_id}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listCustomPropertiesValuesForRepos:["GET /orgs/{org}/properties/values"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOrgRoleTeams:["GET /orgs/{org}/organization-roles/{role_id}/teams"],listOrgRoleUsers:["GET /orgs/{org}/organization-roles/{role_id}/users"],listOrgRoles:["GET /orgs/{org}/organization-roles"],listOrganizationFineGrainedPermissions:["GET /orgs/{org}/organization-fine-grained-permissions"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPatGrantRepositories:["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],listPatGrantRequestRepositories:["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],listPatGrantRequests:["GET /orgs/{org}/personal-access-token-requests"],listPatGrants:["GET /orgs/{org}/personal-access-tokens"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers"],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],patchCustomOrganizationRole:["PATCH /orgs/{org}/organization-roles/{role_id}"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeCustomProperty:["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}"],reviewPatGrantRequest:["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],reviewPatGrantRequestsInBulk:["POST /orgs/{org}/personal-access-token-requests"],revokeAllOrgRolesTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}"],revokeAllOrgRolesUser:["DELETE /orgs/{org}/organization-roles/users/{username}"],revokeOrgRoleTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],revokeOrgRoleUser:["DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updatePatAccess:["POST /orgs/{org}/personal-access-tokens/{pat_id}"],updatePatAccesses:["POST /orgs/{org}/personal-access-tokens"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listDockerMigrationConflictingPackagesForAuthenticatedUser:["GET /user/docker/conflicts"],listDockerMigrationConflictingPackagesForOrganization:["GET /orgs/{org}/docker/conflicts"],listDockerMigrationConflictingPackagesForUser:["GET /users/{username}/docker/conflicts"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}"],createCard:["POST /projects/columns/{column_id}/cards"],createColumn:["POST /projects/{project_id}/columns"],createForAuthenticatedUser:["POST /user/projects"],createForOrg:["POST /orgs/{org}/projects"],createForRepo:["POST /repos/{owner}/{repo}/projects"],delete:["DELETE /projects/{project_id}"],deleteCard:["DELETE /projects/columns/cards/{card_id}"],deleteColumn:["DELETE /projects/columns/{column_id}"],get:["GET /projects/{project_id}"],getCard:["GET /projects/columns/cards/{card_id}"],getColumn:["GET /projects/columns/{column_id}"],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission"],listCards:["GET /projects/columns/{column_id}/cards"],listCollaborators:["GET /projects/{project_id}/collaborators"],listColumns:["GET /projects/{project_id}/columns"],listForOrg:["GET /orgs/{org}/projects"],listForRepo:["GET /repos/{owner}/{repo}/projects"],listForUser:["GET /users/{username}/projects"],moveCard:["POST /projects/columns/cards/{card_id}/moves"],moveColumn:["POST /projects/columns/{column_id}/moves"],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}"],update:["PATCH /projects/{project_id}"],updateCard:["PATCH /projects/columns/cards/{card_id}"],updateColumn:["PATCH /projects/columns/{column_id}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],cancelPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"],checkAutomatedSecurityFixes:["GET /repos/{owner}/{repo}/automated-security-fixes"],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkPrivateVulnerabilityReporting:["GET /repos/{owner}/{repo}/private-vulnerability-reporting"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentProtectionRule:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateCustomPropertiesValues:["PATCH /repos/{owner}/{repo}/properties/values"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createOrgRuleset:["POST /orgs/{org}/rulesets"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createRepoRuleset:["POST /repos/{owner}/{repo}/rulesets"],createTagProtection:["POST /repos/{owner}/{repo}/tags/protection"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteOrgRuleset:["DELETE /orgs/{org}/rulesets/{ruleset_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteRepoRuleset:["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],deleteTagProtection:["DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableDeploymentProtectionRule:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],disablePrivateVulnerabilityReporting:["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enablePrivateVulnerabilityReporting:["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllDeploymentProtectionRules:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getBranchRules:["GET /repos/{owner}/{repo}/rules/branches/{branch}"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getCustomDeploymentProtectionRule:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],getCustomPropertiesValues:["GET /repos/{owner}/{repo}/properties/values"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getOrgRuleSuite:["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],getOrgRuleSuites:["GET /orgs/{org}/rulesets/rule-suites"],getOrgRuleset:["GET /orgs/{org}/rulesets/{ruleset_id}"],getOrgRulesets:["GET /orgs/{org}/rulesets"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesDeployment:["GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getRepoRuleSuite:["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],getRepoRuleSuites:["GET /repos/{owner}/{repo}/rulesets/rule-suites"],getRepoRuleset:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],getRepoRulesets:["GET /repos/{owner}/{repo}/rulesets"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listActivities:["GET /repos/{owner}/{repo}/activity"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listCustomDeploymentRuleIntegrations:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTagProtection:["GET /repos/{owner}/{repo}/tags/protection"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateOrgRuleset:["PUT /orgs/{org}/rulesets/{ruleset_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateRepoRuleset:["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},securityAdvisories:{createFork:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"],createPrivateVulnerabilityReport:["POST /repos/{owner}/{repo}/security-advisories/reports"],createRepositoryAdvisory:["POST /repos/{owner}/{repo}/security-advisories"],createRepositoryAdvisoryCveRequest:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],getGlobalAdvisory:["GET /advisories/{ghsa_id}"],getRepositoryAdvisory:["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],listGlobalAdvisories:["GET /advisories"],listOrgRepositoryAdvisories:["GET /orgs/{org}/security-advisories"],listRepositoryAdvisories:["GET /repos/{owner}/{repo}/security-advisories"],updateRepositoryAdvisory:["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],addSocialAccountForAuthenticatedUser:["POST /user/social_accounts"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSocialAccountForAuthenticatedUser:["DELETE /user/social_accounts"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSocialAccountsForAuthenticatedUser:["GET /user/social_accounts"],listSocialAccountsForUser:["GET /users/{username}/social_accounts"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}},Ln=$n,Re=new Map;for(const[e,t]of Object.entries(Ln))for(const[r,s]of Object.entries(t)){const[o,n,a]=s,[l,u]=o.split(/ /),f=Object.assign({method:l,url:u},n);Re.has(e)||Re.set(e,new Map),Re.get(e).set(r,{scope:e,methodName:r,endpointDefaults:f,decorations:a})}var qn={has({scope:e},t){return Re.get(e).has(t)},getOwnPropertyDescriptor(e,t){return{value:this.get(e,t),configurable:!0,writable:!0,enumerable:!0}},defineProperty(e,t,r){return Object.defineProperty(e.cache,t,r),!0},deleteProperty(e,t){return delete e.cache[t],!0},ownKeys({scope:e}){return[...Re.get(e).keys()]},set(e,t,r){return e.cache[t]=r},get({octokit:e,scope:t,cache:r},s){if(r[s])return r[s];const o=Re.get(t).get(s);if(!o)return;const{endpointDefaults:n,decorations:a}=o;return a?r[s]=zn(e,t,s,n,a):r[s]=e.request.defaults(n),r[s]}};function xn(e){const t={};for(const r of Re.keys())t[r]=new Proxy({octokit:e,scope:r,cache:{}},qn);return t}function zn(e,t,r,s,o){const n=e.request.defaults(s);function a(...l){let u=n.endpoint.merge(...l);if(o.mapToData)return u=Object.assign({},u,{data:u[o.mapToData],[o.mapToData]:void 0}),n(u);if(o.renamed){const[f,T]=o.renamed;e.log.warn(`octokit.${t}.${r}() has been renamed to octokit.${f}.${T}()`)}if(o.deprecated&&e.log.warn(o.deprecated),o.renamedParameters){const f=n.endpoint.merge(...l);for(const[T,_]of Object.entries(o.renamedParameters))T in f&&(e.log.warn(`"${T}" parameter is deprecated for "octokit.${t}.${r}()". Use "${_}" instead`),_ in f||(f[_]=f[T]),delete f[T]);return n(f)}return n(...l)}return Object.assign(a,n)}function bs(e){return{rest:xn(e)}}bs.VERSION=jn;var vs={exports:{}};(function(e,t){(function(r,s){e.exports=s()})(Pt,function(){var r=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof Pt<"u"?Pt:typeof self<"u"?self:{};function s(E){return E&&E.default||E}var o=function(E,p,i={}){var d,h,g;for(d in p)g=p[d],i[d]=(h=E[d])!=null?h:g;return i},n=function(E,p,i={}){var d,h;for(d in E)h=E[d],p[d]!==void 0&&(i[d]=h);return i},a={load:o,overwrite:n},l;l=class{constructor(p,i){this.incr=p,this.decr=i,this._first=null,this._last=null,this.length=0}push(p){var i;this.length++,typeof this.incr=="function"&&this.incr(),i={value:p,prev:this._last,next:null},this._last!=null?(this._last.next=i,this._last=i):this._first=this._last=i}shift(){var p;if(this._first!=null)return this.length--,typeof this.decr=="function"&&this.decr(),p=this._first.value,(this._first=this._first.next)!=null?this._first.prev=null:this._last=null,p}first(){if(this._first!=null)return this._first.value}getArray(){var p,i,d;for(p=this._first,d=[];p!=null;)d.push((i=p,p=p.next,i.value));return d}forEachShift(p){var i;for(i=this.shift();i!=null;)p(i),i=this.shift()}debug(){var p,i,d,h,g;for(p=this._first,g=[];p!=null;)g.push((i=p,p=p.next,{value:i.value,prev:(d=i.prev)!=null?d.value:void 0,next:(h=i.next)!=null?h.value:void 0}));return g}};var u=l,f;f=class{constructor(p){if(this.instance=p,this._events={},this.instance.on!=null||this.instance.once!=null||this.instance.removeAllListeners!=null)throw new Error("An Emitter already exists for this object");this.instance.on=(i,d)=>this._addListener(i,"many",d),this.instance.once=(i,d)=>this._addListener(i,"once",d),this.instance.removeAllListeners=(i=null)=>i!=null?delete this._events[i]:this._events={}}_addListener(p,i,d){var h;return(h=this._events)[p]==null&&(h[p]=[]),this._events[p].push({cb:d,status:i}),this.instance}listenerCount(p){return this._events[p]!=null?this._events[p].length:0}async trigger(p,...i){var d,h;try{return p!=="debug"&&this.trigger("debug",`Event triggered: ${p}`,i),this._events[p]==null?void 0:(this._events[p]=this._events[p].filter(function(g){return g.status!=="none"}),h=this._events[p].map(async g=>{var m,y;if(g.status!=="none"){g.status==="once"&&(g.status="none");try{return y=typeof g.cb=="function"?g.cb(...i):void 0,typeof(y!=null?y.then:void 0)=="function"?await y:y}catch(U){return m=U,this.trigger("error",m),null}}}),(await Promise.all(h)).find(function(g){return g!=null}))}catch(g){return d=g,this.trigger("error",d),null}}};var T=f,_,A,R;_=u,A=T,R=class{constructor(p){this.Events=new A(this),this._length=0,this._lists=(function(){var i,d,h;for(h=[],i=1,d=p;1<=d?i<=d:i>=d;1<=d?++i:--i)h.push(new _(()=>this.incr(),()=>this.decr()));return h}).call(this)}incr(){if(this._length++===0)return this.Events.trigger("leftzero")}decr(){if(--this._length===0)return this.Events.trigger("zero")}push(p){return this._lists[p.options.priority].push(p)}queued(p){return p!=null?this._lists[p].length:this._length}shiftAll(p){return this._lists.forEach(function(i){return i.forEachShift(p)})}getFirst(p=this._lists){var i,d,h;for(i=0,d=p.length;i<d;i++)if(h=p[i],h.length>0)return h;return[]}shiftLastFrom(p){return this.getFirst(this._lists.slice(p).reverse()).shift()}};var C=R,P;P=class extends Error{};var G=P,w,v,F,D,$;D=10,v=5,$=a,w=G,F=class{constructor(p,i,d,h,g,m,y,U){this.task=p,this.args=i,this.rejectOnDrop=g,this.Events=m,this._states=y,this.Promise=U,this.options=$.load(d,h),this.options.priority=this._sanitizePriority(this.options.priority),this.options.id===h.id&&(this.options.id=`${this.options.id}-${this._randomIndex()}`),this.promise=new this.Promise((M,B)=>{this._resolve=M,this._reject=B}),this.retryCount=0}_sanitizePriority(p){var i;return i=~~p!==p?v:p,i<0?0:i>D-1?D-1:i}_randomIndex(){return Math.random().toString(36).slice(2)}doDrop({error:p,message:i="This job has been dropped by Bottleneck"}={}){return this._states.remove(this.options.id)?(this.rejectOnDrop&&this._reject(p??new w(i)),this.Events.trigger("dropped",{args:this.args,options:this.options,task:this.task,promise:this.promise}),!0):!1}_assertStatus(p){var i;if(i=this._states.jobStatus(this.options.id),!(i===p||p==="DONE"&&i===null))throw new w(`Invalid job status ${i}, expected ${p}. Please open an issue at https://github.com/SGrondin/bottleneck/issues`)}doReceive(){return this._states.start(this.options.id),this.Events.trigger("received",{args:this.args,options:this.options})}doQueue(p,i){return this._assertStatus("RECEIVED"),this._states.next(this.options.id),this.Events.trigger("queued",{args:this.args,options:this.options,reachedHWM:p,blocked:i})}doRun(){return this.retryCount===0?(this._assertStatus("QUEUED"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),this.Events.trigger("scheduled",{args:this.args,options:this.options})}async doExecute(p,i,d,h){var g,m,y;this.retryCount===0?(this._assertStatus("RUNNING"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),m={args:this.args,options:this.options,retryCount:this.retryCount},this.Events.trigger("executing",m);try{if(y=await(p!=null?p.schedule(this.options,this.task,...this.args):this.task(...this.args)),i())return this.doDone(m),await h(this.options,m),this._assertStatus("DONE"),this._resolve(y)}catch(U){return g=U,this._onFailure(g,m,i,d,h)}}doExpire(p,i,d){var h,g;return this._states.jobStatus(this.options.id==="RUNNING")&&this._states.next(this.options.id),this._assertStatus("EXECUTING"),g={args:this.args,options:this.options,retryCount:this.retryCount},h=new w(`This job timed out after ${this.options.expiration} ms.`),this._onFailure(h,g,p,i,d)}async _onFailure(p,i,d,h,g){var m,y;if(d())return m=await this.Events.trigger("failed",p,i),m!=null?(y=~~m,this.Events.trigger("retry",`Retrying ${this.options.id} after ${y} ms`,i),this.retryCount++,h(y)):(this.doDone(i),await g(this.options,i),this._assertStatus("DONE"),this._reject(p))}doDone(p){return this._assertStatus("EXECUTING"),this._states.next(this.options.id),this.Events.trigger("done",p)}};var K=F,Y,Fe,fe;fe=a,Y=G,Fe=class{constructor(p,i,d){this.instance=p,this.storeOptions=i,this.clientId=this.instance._randomIndex(),fe.load(d,d,this),this._nextRequest=this._lastReservoirRefresh=this._lastReservoirIncrease=Date.now(),this._running=0,this._done=0,this._unblockTime=0,this.ready=this.Promise.resolve(),this.clients={},this._startHeartbeat()}_startHeartbeat(){var p;return this.heartbeat==null&&(this.storeOptions.reservoirRefreshInterval!=null&&this.storeOptions.reservoirRefreshAmount!=null||this.storeOptions.reservoirIncreaseInterval!=null&&this.storeOptions.reservoirIncreaseAmount!=null)?typeof(p=this.heartbeat=setInterval(()=>{var i,d,h,g,m;if(g=Date.now(),this.storeOptions.reservoirRefreshInterval!=null&&g>=this._lastReservoirRefresh+this.storeOptions.reservoirRefreshInterval&&(this._lastReservoirRefresh=g,this.storeOptions.reservoir=this.storeOptions.reservoirRefreshAmount,this.instance._drainAll(this.computeCapacity())),this.storeOptions.reservoirIncreaseInterval!=null&&g>=this._lastReservoirIncrease+this.storeOptions.reservoirIncreaseInterval&&({reservoirIncreaseAmount:i,reservoirIncreaseMaximum:h,reservoir:m}=this.storeOptions,this._lastReservoirIncrease=g,d=h!=null?Math.min(i,h-m):i,d>0))return this.storeOptions.reservoir+=d,this.instance._drainAll(this.computeCapacity())},this.heartbeatInterval)).unref=="function"?p.unref():void 0:clearInterval(this.heartbeat)}async __publish__(p){return await this.yieldLoop(),this.instance.Events.trigger("message",p.toString())}async __disconnect__(p){return await this.yieldLoop(),clearInterval(this.heartbeat),this.Promise.resolve()}yieldLoop(p=0){return new this.Promise(function(i,d){return setTimeout(i,p)})}computePenalty(){var p;return(p=this.storeOptions.penalty)!=null?p:15*this.storeOptions.minTime||5e3}async __updateSettings__(p){return await this.yieldLoop(),fe.overwrite(p,p,this.storeOptions),this._startHeartbeat(),this.instance._drainAll(this.computeCapacity()),!0}async __running__(){return await this.yieldLoop(),this._running}async __queued__(){return await this.yieldLoop(),this.instance.queued()}async __done__(){return await this.yieldLoop(),this._done}async __groupCheck__(p){return await this.yieldLoop(),this._nextRequest+this.timeout<p}computeCapacity(){var p,i;return{maxConcurrent:p,reservoir:i}=this.storeOptions,p!=null&&i!=null?Math.min(p-this._running,i):p!=null?p-this._running:i??null}conditionsCheck(p){var i;return i=this.computeCapacity(),i==null||p<=i}async __incrementReservoir__(p){var i;return await this.yieldLoop(),i=this.storeOptions.reservoir+=p,this.instance._drainAll(this.computeCapacity()),i}async __currentReservoir__(){return await this.yieldLoop(),this.storeOptions.reservoir}isBlocked(p){return this._unblockTime>=p}check(p,i){return this.conditionsCheck(p)&&this._nextRequest-i<=0}async __check__(p){var i;return await this.yieldLoop(),i=Date.now(),this.check(p,i)}async __register__(p,i,d){var h,g;return await this.yieldLoop(),h=Date.now(),this.conditionsCheck(i)?(this._running+=i,this.storeOptions.reservoir!=null&&(this.storeOptions.reservoir-=i),g=Math.max(this._nextRequest-h,0),this._nextRequest=h+g+this.storeOptions.minTime,{success:!0,wait:g,reservoir:this.storeOptions.reservoir}):{success:!1}}strategyIsBlock(){return this.storeOptions.strategy===3}async __submit__(p,i){var d,h,g;if(await this.yieldLoop(),this.storeOptions.maxConcurrent!=null&&i>this.storeOptions.maxConcurrent)throw new Y(`Impossible to add a job having a weight of ${i} to a limiter having a maxConcurrent setting of ${this.storeOptions.maxConcurrent}`);return h=Date.now(),g=this.storeOptions.highWater!=null&&p===this.storeOptions.highWater&&!this.check(i,h),d=this.strategyIsBlock()&&(g||this.isBlocked(h)),d&&(this._unblockTime=h+this.computePenalty(),this._nextRequest=this._unblockTime+this.storeOptions.minTime,this.instance._dropAllQueued()),{reachedHWM:g,blocked:d,strategy:this.storeOptions.strategy}}async __free__(p,i){return await this.yieldLoop(),this._running-=i,this._done+=i,this.instance._drainAll(this.computeCapacity()),{running:this._running}}};var Ue=Fe,rr,sr;rr=G,sr=class{constructor(p){this.status=p,this._jobs={},this.counts=this.status.map(function(){return 0})}next(p){var i,d;if(i=this._jobs[p],d=i+1,i!=null&&d<this.status.length)return this.counts[i]--,this.counts[d]++,this._jobs[p]++;if(i!=null)return this.counts[i]--,delete this._jobs[p]}start(p){var i;return i=0,this._jobs[p]=i,this.counts[i]++}remove(p){var i;return i=this._jobs[p],i!=null&&(this.counts[i]--,delete this._jobs[p]),i!=null}jobStatus(p){var i;return(i=this.status[this._jobs[p]])!=null?i:null}statusJobs(p){var i,d,h,g,m;if(p!=null){if(d=this.status.indexOf(p),d<0)throw new rr(`status must be one of ${this.status.join(", ")}`);h=this._jobs,g=[];for(i in h)m=h[i],m===d&&g.push(i);return g}else return Object.keys(this._jobs)}statusCounts(){return this.counts.reduce((p,i,d)=>(p[this.status[d]]=i,p),{})}};var _o=sr,or,nr;or=u,nr=class{constructor(p,i){this.schedule=this.schedule.bind(this),this.name=p,this.Promise=i,this._running=0,this._queue=new or}isEmpty(){return this._queue.length===0}async _tryToRun(){var p,i,d,h,g,m,y;if(this._running<1&&this._queue.length>0)return this._running++,{task:y,args:p,resolve:g,reject:h}=this._queue.shift(),i=await async function(){try{return m=await y(...p),function(){return g(m)}}catch(U){return d=U,function(){return h(d)}}}(),this._running--,this._tryToRun(),i()}schedule(p,...i){var d,h,g;return g=h=null,d=new this.Promise(function(m,y){return g=m,h=y}),this._queue.push({task:p,args:i,resolve:g,reject:h}),this._tryToRun(),d}};var To=nr,ir="2.19.5",wo={version:ir},yo=Object.freeze({version:ir,default:wo}),ar=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),cr=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Eo=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),lr,ur,pr,dr,hr,it;it=a,lr=T,dr=ar,pr=cr,hr=Eo,ur=(function(){class E{constructor(i={}){this.deleteKey=this.deleteKey.bind(this),this.limiterOptions=i,it.load(this.limiterOptions,this.defaults,this),this.Events=new lr(this),this.instances={},this.Bottleneck=kr,this._startAutoCleanup(),this.sharedConnection=this.connection!=null,this.connection==null&&(this.limiterOptions.datastore==="redis"?this.connection=new dr(Object.assign({},this.limiterOptions,{Events:this.Events})):this.limiterOptions.datastore==="ioredis"&&(this.connection=new pr(Object.assign({},this.limiterOptions,{Events:this.Events}))))}key(i=""){var d;return(d=this.instances[i])!=null?d:(()=>{var h;return h=this.instances[i]=new this.Bottleneck(Object.assign(this.limiterOptions,{id:`${this.id}-${i}`,timeout:this.timeout,connection:this.connection})),this.Events.trigger("created",h,i),h})()}async deleteKey(i=""){var d,h;return h=this.instances[i],this.connection&&(d=await this.connection.__runCommand__(["del",...hr.allKeys(`${this.id}-${i}`)])),h!=null&&(delete this.instances[i],await h.disconnect()),h!=null||d>0}limiters(){var i,d,h,g;d=this.instances,h=[];for(i in d)g=d[i],h.push({key:i,limiter:g});return h}keys(){return Object.keys(this.instances)}async clusterKeys(){var i,d,h,g,m,y,U,M,B;if(this.connection==null)return this.Promise.resolve(this.keys());for(y=[],i=null,B=`b_${this.id}-`.length,d=9;i!==0;)for([M,h]=await this.connection.__runCommand__(["scan",i??0,"match",`b_${this.id}-*_settings`,"count",1e4]),i=~~M,g=0,U=h.length;g<U;g++)m=h[g],y.push(m.slice(B,-d));return y}_startAutoCleanup(){var i;return clearInterval(this.interval),typeof(i=this.interval=setInterval(async()=>{var d,h,g,m,y,U;y=Date.now(),g=this.instances,m=[];for(h in g){U=g[h];try{await U._store.__groupCheck__(y)?m.push(this.deleteKey(h)):m.push(void 0)}catch(M){d=M,m.push(U.Events.trigger("error",d))}}return m},this.timeout/2)).unref=="function"?i.unref():void 0}updateSettings(i={}){if(it.overwrite(i,this.defaults,this),it.overwrite(i,i,this.limiterOptions),i.timeout!=null)return this._startAutoCleanup()}disconnect(i=!0){var d;if(!this.sharedConnection)return(d=this.connection)!=null?d.disconnect(i):void 0}}return E.prototype.defaults={timeout:1e3*60*5,connection:null,Promise,id:"group-key"},E}).call(r);var bo=ur,gr,mr,fr;fr=a,mr=T,gr=(function(){class E{constructor(i={}){this.options=i,fr.load(this.options,this.defaults,this),this.Events=new mr(this),this._arr=[],this._resetPromise(),this._lastFlush=Date.now()}_resetPromise(){return this._promise=new this.Promise((i,d)=>this._resolve=i)}_flush(){return clearTimeout(this._timeout),this._lastFlush=Date.now(),this._resolve(),this.Events.trigger("batch",this._arr),this._arr=[],this._resetPromise()}add(i){var d;return this._arr.push(i),d=this._promise,this._arr.length===this.maxSize?this._flush():this.maxTime!=null&&this._arr.length===1&&(this._timeout=setTimeout(()=>this._flush(),this.maxTime)),d}}return E.prototype.defaults={maxTime:null,maxSize:null,Promise},E}).call(r);var vo=gr,ko=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),So=s(yo),_r,Tr,vt,kt,wr,St,yr,Er,br,At,ce,vr=[].splice;St=10,Tr=5,ce=a,yr=C,kt=K,wr=Ue,Er=ko,vt=T,br=_o,At=To,_r=(function(){class E{constructor(i={},...d){var h,g;this._addToQueue=this._addToQueue.bind(this),this._validateOptions(i,d),ce.load(i,this.instanceDefaults,this),this._queues=new yr(St),this._scheduled={},this._states=new br(["RECEIVED","QUEUED","RUNNING","EXECUTING"].concat(this.trackDoneStatus?["DONE"]:[])),this._limiter=null,this.Events=new vt(this),this._submitLock=new At("submit",this.Promise),this._registerLock=new At("register",this.Promise),g=ce.load(i,this.storeDefaults,{}),this._store=(function(){if(this.datastore==="redis"||this.datastore==="ioredis"||this.connection!=null)return h=ce.load(i,this.redisStoreDefaults,{}),new Er(this,g,h);if(this.datastore==="local")return h=ce.load(i,this.localStoreDefaults,{}),new wr(this,g,h);throw new E.prototype.BottleneckError(`Invalid datastore type: ${this.datastore}`)}).call(this),this._queues.on("leftzero",()=>{var m;return(m=this._store.heartbeat)!=null&&typeof m.ref=="function"?m.ref():void 0}),this._queues.on("zero",()=>{var m;return(m=this._store.heartbeat)!=null&&typeof m.unref=="function"?m.unref():void 0})}_validateOptions(i,d){if(!(i!=null&&typeof i=="object"&&d.length===0))throw new E.prototype.BottleneckError("Bottleneck v2 takes a single object argument. Refer to https://github.com/SGrondin/bottleneck#upgrading-to-v2 if you're upgrading from Bottleneck v1.")}ready(){return this._store.ready}clients(){return this._store.clients}channel(){return`b_${this.id}`}channel_client(){return`b_${this.id}_${this._store.clientId}`}publish(i){return this._store.__publish__(i)}disconnect(i=!0){return this._store.__disconnect__(i)}chain(i){return this._limiter=i,this}queued(i){return this._queues.queued(i)}clusterQueued(){return this._store.__queued__()}empty(){return this.queued()===0&&this._submitLock.isEmpty()}running(){return this._store.__running__()}done(){return this._store.__done__()}jobStatus(i){return this._states.jobStatus(i)}jobs(i){return this._states.statusJobs(i)}counts(){return this._states.statusCounts()}_randomIndex(){return Math.random().toString(36).slice(2)}check(i=1){return this._store.__check__(i)}_clearGlobalState(i){return this._scheduled[i]!=null?(clearTimeout(this._scheduled[i].expiration),delete this._scheduled[i],!0):!1}async _free(i,d,h,g){var m,y;try{if({running:y}=await this._store.__free__(i,h.weight),this.Events.trigger("debug",`Freed ${h.id}`,g),y===0&&this.empty())return this.Events.trigger("idle")}catch(U){return m=U,this.Events.trigger("error",m)}}_run(i,d,h){var g,m,y;return d.doRun(),g=this._clearGlobalState.bind(this,i),y=this._run.bind(this,i,d),m=this._free.bind(this,i,d),this._scheduled[i]={timeout:setTimeout(()=>d.doExecute(this._limiter,g,y,m),h),expiration:d.options.expiration!=null?setTimeout(function(){return d.doExpire(g,y,m)},h+d.options.expiration):void 0,job:d}}_drainOne(i){return this._registerLock.schedule(()=>{var d,h,g,m,y;return this.queued()===0?this.Promise.resolve(null):(y=this._queues.getFirst(),{options:m,args:d}=g=y.first(),i!=null&&m.weight>i?this.Promise.resolve(null):(this.Events.trigger("debug",`Draining ${m.id}`,{args:d,options:m}),h=this._randomIndex(),this._store.__register__(h,m.weight,m.expiration).then(({success:U,wait:M,reservoir:B})=>{var Be;return this.Events.trigger("debug",`Drained ${m.id}`,{success:U,args:d,options:m}),U?(y.shift(),Be=this.empty(),Be&&this.Events.trigger("empty"),B===0&&this.Events.trigger("depleted",Be),this._run(h,g,M),this.Promise.resolve(m.weight)):this.Promise.resolve(null)})))})}_drainAll(i,d=0){return this._drainOne(i).then(h=>{var g;return h!=null?(g=i!=null?i-h:i,this._drainAll(g,d+h)):this.Promise.resolve(d)}).catch(h=>this.Events.trigger("error",h))}_dropAllQueued(i){return this._queues.shiftAll(function(d){return d.doDrop({message:i})})}stop(i={}){var d,h;return i=ce.load(i,this.stopDefaults),h=g=>{var m;return m=()=>{var y;return y=this._states.counts,y[0]+y[1]+y[2]+y[3]===g},new this.Promise((y,U)=>m()?y():this.on("done",()=>{if(m())return this.removeAllListeners("done"),y()}))},d=i.dropWaitingJobs?(this._run=function(g,m){return m.doDrop({message:i.dropErrorMessage})},this._drainOne=()=>this.Promise.resolve(null),this._registerLock.schedule(()=>this._submitLock.schedule(()=>{var g,m,y;m=this._scheduled;for(g in m)y=m[g],this.jobStatus(y.job.options.id)==="RUNNING"&&(clearTimeout(y.timeout),clearTimeout(y.expiration),y.job.doDrop({message:i.dropErrorMessage}));return this._dropAllQueued(i.dropErrorMessage),h(0)}))):this.schedule({priority:St-1,weight:0},()=>h(1)),this._receive=function(g){return g._reject(new E.prototype.BottleneckError(i.enqueueErrorMessage))},this.stop=()=>this.Promise.reject(new E.prototype.BottleneckError("stop() has already been called")),d}async _addToQueue(i){var d,h,g,m,y,U,M;({args:d,options:m}=i);try{({reachedHWM:y,blocked:h,strategy:M}=await this._store.__submit__(this.queued(),m.weight))}catch(B){return g=B,this.Events.trigger("debug",`Could not queue ${m.id}`,{args:d,options:m,error:g}),i.doDrop({error:g}),!1}return h?(i.doDrop(),!0):y&&(U=M===E.prototype.strategy.LEAK?this._queues.shiftLastFrom(m.priority):M===E.prototype.strategy.OVERFLOW_PRIORITY?this._queues.shiftLastFrom(m.priority+1):M===E.prototype.strategy.OVERFLOW?i:void 0,U!=null&&U.doDrop(),U==null||M===E.prototype.strategy.OVERFLOW)?(U==null&&i.doDrop(),y):(i.doQueue(y,h),this._queues.push(i),await this._drainAll(),y)}_receive(i){return this._states.jobStatus(i.options.id)!=null?(i._reject(new E.prototype.BottleneckError(`A job with the same id already exists (id=${i.options.id})`)),!1):(i.doReceive(),this._submitLock.schedule(this._addToQueue,i))}submit(...i){var d,h,g,m,y,U,M;return typeof i[0]=="function"?(y=i,[h,...i]=y,[d]=vr.call(i,-1),m=ce.load({},this.jobDefaults)):(U=i,[m,h,...i]=U,[d]=vr.call(i,-1),m=ce.load(m,this.jobDefaults)),M=(...B)=>new this.Promise(function(Be,Oo){return h(...B,function(...Sr){return(Sr[0]!=null?Oo:Be)(Sr)})}),g=new kt(M,i,m,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),g.promise.then(function(B){return typeof d=="function"?d(...B):void 0}).catch(function(B){return Array.isArray(B)?typeof d=="function"?d(...B):void 0:typeof d=="function"?d(B):void 0}),this._receive(g)}schedule(...i){var d,h,g;return typeof i[0]=="function"?([g,...i]=i,h={}):[h,g,...i]=i,d=new kt(g,i,h,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),this._receive(d),d.promise}wrap(i){var d,h;return d=this.schedule.bind(this),h=function(...g){return d(i.bind(this),...g)},h.withOptions=function(g,...m){return d(g,i,...m)},h}async updateSettings(i={}){return await this._store.__updateSettings__(ce.overwrite(i,this.storeDefaults)),ce.overwrite(i,this.instanceDefaults,this),this}currentReservoir(){return this._store.__currentReservoir__()}incrementReservoir(i=0){return this._store.__incrementReservoir__(i)}}return E.default=E,E.Events=vt,E.version=E.prototype.version=So.version,E.strategy=E.prototype.strategy={LEAK:1,OVERFLOW:2,OVERFLOW_PRIORITY:4,BLOCK:3},E.BottleneckError=E.prototype.BottleneckError=G,E.Group=E.prototype.Group=bo,E.RedisConnection=E.prototype.RedisConnection=ar,E.IORedisConnection=E.prototype.IORedisConnection=cr,E.Batcher=E.prototype.Batcher=vo,E.prototype.jobDefaults={priority:Tr,weight:1,expiration:null,id:"<no-id>"},E.prototype.storeDefaults={maxConcurrent:null,minTime:0,highWater:null,strategy:E.prototype.strategy.LEAK,penalty:null,reservoir:null,reservoirRefreshInterval:null,reservoirRefreshAmount:null,reservoirIncreaseInterval:null,reservoirIncreaseAmount:null,reservoirIncreaseMaximum:null},E.prototype.localStoreDefaults={Promise,timeout:null,heartbeatInterval:250},E.prototype.redisStoreDefaults={Promise,timeout:null,heartbeatInterval:5e3,clientTimeout:1e4,Redis:null,clientOptions:{},clusterNodes:null,clearDatastore:!1,connection:null},E.prototype.instanceDefaults={datastore:"local",connection:null,id:"<no-id>",rejectOnDrop:!0,trackDoneStatus:!1,Promise},E.prototype.stopDefaults={enqueueErrorMessage:"This limiter has been stopped and cannot accept new jobs.",dropWaitingJobs:!0,dropErrorMessage:"This limiter has been stopped."},E}).call(r);var kr=_r,Ao=kr;return Ao})})(vs);var Wn=vs.exports;const ks=mt(Wn);async function Ss(e,t,r,s){if(!r.request||!r.request.request)throw r;if(r.status>=400&&!e.doNotRetry.includes(r.status)){const o=s.request.retries!=null?s.request.retries:e.retries,n=Math.pow((s.request.retryCount||0)+1,2);throw t.retry.retryRequest(r,o,n)}throw r}async function Hn(e,t,r,s){const o=new ks;return o.on("failed",function(n,a){const l=~~n.request.request.retries,u=~~n.request.request.retryAfter;if(s.request.retryCount=a.retryCount+1,l>a.retryCount)return u*e.retryAfterBaseValue}),o.schedule(Mn.bind(null,e,t,r),s)}async function Mn(e,t,r,s){const o=await r(r,s);if(o.data&&o.data.errors&&/Something went wrong while executing your query/.test(o.data.errors[0].message)){const n=new ke(o.data.errors[0].message,500,{request:s,response:o});return Ss(e,t,n,s)}return o}var Nn="6.0.0";function As(e,t){const r=Object.assign({enabled:!0,retryAfterBaseValue:1e3,doNotRetry:[400,401,403,404,422,451],retries:3},t.retry);return r.enabled&&(e.hook.error("request",Ss.bind(null,r,e)),e.hook.wrap("request",Hn.bind(null,r,e))),{retry:{retryRequest:(s,o,n)=>(s.request.request=Object.assign({},s.request.request,{retries:o,retryAfter:n}),s)}}}As.VERSION=Nn;var Bn="8.0.0",Ut=()=>Promise.resolve();function Vn(e,t,r){return e.retryLimiter.schedule(Kn,e,t,r)}async function Kn(e,t,r){const s=r.method!=="GET"&&r.method!=="HEAD",{pathname:o}=new URL(r.url,"http://github.test"),n=r.method==="GET"&&o.startsWith("/search/"),a=o.startsWith("/graphql"),u=~~t.retryCount>0?{priority:0,weight:0}:{};e.clustering&&(u.expiration=1e3*60),(s||a)&&await e.write.key(e.id).schedule(u,Ut),s&&e.triggersNotification(o)&&await e.notifications.key(e.id).schedule(u,Ut),n&&await e.search.key(e.id).schedule(u,Ut);const f=e.global.key(e.id).schedule(u,t,r);if(a){const T=await f;if(T.data.errors!=null&&T.data.errors.some(_=>_.type==="RATE_LIMITED"))throw Object.assign(new Error("GraphQL Rate Limit Exceeded"),{response:T,data:T.data})}return f}var Jn=["/orgs/{org}/invitations","/orgs/{org}/invitations/{invitation_id}","/orgs/{org}/teams/{team_slug}/discussions","/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments","/repos/{owner}/{repo}/collaborators/{username}","/repos/{owner}/{repo}/commits/{commit_sha}/comments","/repos/{owner}/{repo}/issues","/repos/{owner}/{repo}/issues/{issue_number}/comments","/repos/{owner}/{repo}/pulls","/repos/{owner}/{repo}/pulls/{pull_number}/comments","/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies","/repos/{owner}/{repo}/pulls/{pull_number}/merge","/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers","/repos/{owner}/{repo}/pulls/{pull_number}/reviews","/repos/{owner}/{repo}/releases","/teams/{team_id}/discussions","/teams/{team_id}/discussions/{discussion_number}/comments"];function Qn(e){const r=`^(?:${e.map(s=>s.split("/").map(o=>o.startsWith("{")?"(?:.+?)":o).join("/")).map(s=>`(?:${s})`).join("|")})[^/]*$`;return new RegExp(r,"i")}var Ir=Qn(Jn),Os=Ir.test.bind(Ir),Ie={},Yn=function(e,t){Ie.global=new e.Group({id:"octokit-global",maxConcurrent:10,...t}),Ie.search=new e.Group({id:"octokit-search",maxConcurrent:1,minTime:2e3,...t}),Ie.write=new e.Group({id:"octokit-write",maxConcurrent:1,minTime:1e3,...t}),Ie.notifications=new e.Group({id:"octokit-notifications",maxConcurrent:1,minTime:3e3,...t})};function Jt(e,t){const{enabled:r=!0,Bottleneck:s=ks,id:o="no-id",timeout:n=1e3*60*2,connection:a}=t.throttle||{};if(!r)return{};const l={connection:a,timeout:n};Ie.global==null&&Yn(s,l);const u=Object.assign({clustering:a!=null,triggersNotification:Os,fallbackSecondaryRateRetryAfter:60,retryAfterBaseValue:1e3,retryLimiter:new s,id:o,...Ie},t.throttle);if(typeof u.onSecondaryRateLimit!="function"||typeof u.onRateLimit!="function")throw new Error(`octokit/plugin-throttling error:
        You must pass the onSecondaryRateLimit and onRateLimit error handlers.
        See https://octokit.github.io/rest.js/#throttling

        const octokit = new Octokit({
          throttle: {
            onSecondaryRateLimit: (retryAfter, options) => {/* ... */},
            onRateLimit: (retryAfter, options) => {/* ... */}
          }
        })
    `);const f={},T=new s.Events(f);return f.on("secondary-limit",u.onSecondaryRateLimit),f.on("rate-limit",u.onRateLimit),f.on("error",_=>e.log.warn("Error in throttling-plugin limit handler",_)),u.retryLimiter.on("failed",async function(_,A){const[R,C,P]=A.args,{pathname:G}=new URL(P.url,"http://github.test");if(!(G.startsWith("/graphql")&&_.status!==401||_.status===403))return;const v=~~C.retryCount;C.retryCount=v,P.request.retryCount=v;const{wantRetry:F,retryAfter:D=0}=await async function(){if(/\bsecondary rate\b/i.test(_.message)){const $=Number(_.response.headers["retry-after"])||R.fallbackSecondaryRateRetryAfter;return{wantRetry:await T.trigger("secondary-limit",$,P,e,v),retryAfter:$}}if(_.response.headers!=null&&_.response.headers["x-ratelimit-remaining"]==="0"){const $=new Date(~~_.response.headers["x-ratelimit-reset"]*1e3).getTime(),K=Math.max(Math.ceil(($-Date.now())/1e3),0);return{wantRetry:await T.trigger("rate-limit",K,P,e,v),retryAfter:K}}return{}}();if(F)return C.retryCount++,D*R.retryAfterBaseValue}),e.hook.wrap("request",Vn.bind(null,u)),{}}Jt.VERSION=Bn;Jt.triggersNotification=Os;const Ps=pe(Go),Xn=pe(cn);var Zn=function(t){return btoa(t)};const be=mt(Zn),ei="4.0.1";function ti(e){const t=e.clientType||"oauth-app",r=e.baseUrl||"https://github.com",s={clientType:t,allowSignup:e.allowSignup!==!1,clientId:e.clientId,login:e.login||null,redirectUrl:e.redirectUrl||null,state:e.state||Math.random().toString(36).substr(2),url:""};if(t==="oauth-app"){const o="scopes"in e?e.scopes:[];s.scopes=typeof o=="string"?o.split(/[,\s]+/).filter(Boolean):o}return s.url=ri(`${r}/login/oauth/authorize`,s),s}function ri(e,t){const r={allowSignup:"allow_signup",clientId:"client_id",login:"login",redirectUrl:"redirect_uri",scopes:"scope",state:"state"};let s=e;return Object.keys(r).filter(o=>t[o]!==null).filter(o=>o!=="scopes"?!0:t.clientType==="github-app"?!1:!Array.isArray(t[o])||t[o].length>0).map(o=>[r[o],`${t[o]}`]).forEach(([o,n],a)=>{s+=a===0?"?":"&",s+=`${o}=${encodeURIComponent(n)}`}),s}function Rs(e){const t=e.endpoint.DEFAULTS;return/^https:\/\/(api\.)?github\.com$/.test(t.baseUrl)?"https://github.com":t.baseUrl.replace("/api/v3","")}async function _t(e,t,r){const s={baseUrl:Rs(e),headers:{accept:"application/json"},...r},o=await e(t,s);if("error"in o.data){const n=new ke(`${o.data.error_description} (${o.data.error}, ${o.data.error_uri})`,400,{request:e.endpoint.merge(t,s),headers:o.headers});throw n.response=o,n}return o}function si({request:e=N,...t}){const r=Rs(e);return ti({...t,baseUrl:r})}async function Gs(e){const t=e.request||N,r=await _t(t,"POST /login/oauth/access_token",{client_id:e.clientId,client_secret:e.clientSecret,code:e.code,redirect_uri:e.redirectUrl}),s={clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:r.data.access_token,scopes:r.data.scope.split(/\s+/).filter(Boolean)};if(e.clientType==="github-app"){if("refresh_token"in r.data){const o=new Date(r.headers.date).getTime();s.refreshToken=r.data.refresh_token,s.expiresAt=jr(o,r.data.expires_in),s.refreshTokenExpiresAt=jr(o,r.data.refresh_token_expires_in)}delete s.scopes}return{...r,authentication:s}}function jr(e,t){return new Date(e+t*1e3).toISOString()}async function Fs(e){const t=e.request||N,r={client_id:e.clientId};return"scopes"in e&&Array.isArray(e.scopes)&&(r.scope=e.scopes.join(" ")),_t(t,"POST /login/device/code",r)}async function jt(e){const t=e.request||N,r=await _t(t,"POST /login/oauth/access_token",{client_id:e.clientId,device_code:e.code,grant_type:"urn:ietf:params:oauth:grant-type:device_code"}),s={clientType:e.clientType,clientId:e.clientId,token:r.data.access_token,scopes:r.data.scope.split(/\s+/).filter(Boolean)};if("clientSecret"in e&&(s.clientSecret=e.clientSecret),e.clientType==="github-app"){if("refresh_token"in r.data){const o=new Date(r.headers.date).getTime();s.refreshToken=r.data.refresh_token,s.expiresAt=$r(o,r.data.expires_in),s.refreshTokenExpiresAt=$r(o,r.data.refresh_token_expires_in)}delete s.scopes}return{...r,authentication:s}}function $r(e,t){return new Date(e+t*1e3).toISOString()}async function Us(e){const r=await(e.request||N)("POST /applications/{client_id}/token",{headers:{authorization:`basic ${be(`${e.clientId}:${e.clientSecret}`)}`},client_id:e.clientId,access_token:e.token}),s={clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:e.token,scopes:r.data.scopes};return r.data.expires_at&&(s.expiresAt=r.data.expires_at),e.clientType==="github-app"&&delete s.scopes,{...r,authentication:s}}async function Cs(e){const t=e.request||N,r=await _t(t,"POST /login/oauth/access_token",{client_id:e.clientId,client_secret:e.clientSecret,grant_type:"refresh_token",refresh_token:e.refreshToken}),s=new Date(r.headers.date).getTime(),o={clientType:"github-app",clientId:e.clientId,clientSecret:e.clientSecret,token:r.data.access_token,refreshToken:r.data.refresh_token,expiresAt:Lr(s,r.data.expires_in),refreshTokenExpiresAt:Lr(s,r.data.refresh_token_expires_in)};return{...r,authentication:o}}function Lr(e,t){return new Date(e+t*1e3).toISOString()}async function oi(e){const{request:t,clientType:r,clientId:s,clientSecret:o,token:n,...a}=e,u=await(t||N)("POST /applications/{client_id}/token/scoped",{headers:{authorization:`basic ${be(`${s}:${o}`)}`},client_id:s,access_token:n,...a}),f=Object.assign({clientType:r,clientId:s,clientSecret:o,token:u.data.token},u.data.expires_at?{expiresAt:u.data.expires_at}:{});return{...u,authentication:f}}async function Ds(e){const t=e.request||N,r=be(`${e.clientId}:${e.clientSecret}`),s=await t("PATCH /applications/{client_id}/token",{headers:{authorization:`basic ${r}`},client_id:e.clientId,access_token:e.token}),o={clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:s.data.token,scopes:s.data.scopes};return s.data.expires_at&&(o.expiresAt=s.data.expires_at),e.clientType==="github-app"&&delete o.scopes,{...s,authentication:o}}async function Is(e){const t=e.request||N,r=be(`${e.clientId}:${e.clientSecret}`);return t("DELETE /applications/{client_id}/token",{headers:{authorization:`basic ${r}`},client_id:e.clientId,access_token:e.token})}async function js(e){const t=e.request||N,r=be(`${e.clientId}:${e.clientSecret}`);return t("DELETE /applications/{client_id}/grant",{headers:{authorization:`basic ${r}`},client_id:e.clientId,access_token:e.token})}const ni=Object.freeze(Object.defineProperty({__proto__:null,VERSION:ei,checkToken:Us,createDeviceCode:Fs,deleteAuthorization:js,deleteToken:Is,exchangeDeviceCode:jt,exchangeWebFlowCode:Gs,getWebFlowAuthorizationUrl:si,refreshToken:Cs,resetToken:Ds,scopeToken:oi},Symbol.toStringTag,{value:"Module"}));async function $s(e,t){const r=ii(e,t.auth);if(r)return r;const{data:s}=await Fs({clientType:e.clientType,clientId:e.clientId,request:t.request||e.request,scopes:t.auth.scopes||e.scopes});await e.onVerification(s);const o=await $t(t.request||e.request,e.clientId,e.clientType,s);return e.authentication=o,o}function ii(e,t){if(t.refresh===!0||!e.authentication)return!1;if(e.clientType==="github-app")return e.authentication;const r=e.authentication,s=("scopes"in t&&t.scopes||e.scopes).join(" "),o=r.scopes.join(" ");return s===o?r:!1}async function qr(e){await new Promise(t=>setTimeout(t,e*1e3))}async function $t(e,t,r,s){try{const o={clientId:t,request:e,code:s.device_code},{authentication:n}=r==="oauth-app"?await jt({...o,clientType:"oauth-app"}):await jt({...o,clientType:"github-app"});return{type:"token",tokenType:"oauth",...n}}catch(o){if(!o.response)throw o;const n=o.response.data.error;if(n==="authorization_pending")return await qr(s.interval),$t(e,t,r,s);if(n==="slow_down")return await qr(s.interval+5),$t(e,t,r,s);throw o}}async function ai(e,t){return $s(e,{auth:t})}async function ci(e,t,r,s){let o=t.endpoint.merge(r,s);if(/\/login\/(oauth\/access_token|device\/code)$/.test(o.url))return t(o);const{token:n}=await $s(e,{request:t,auth:{type:"oauth"}});return o.headers.authorization=`token ${n}`,t(o)}var li="6.0.1";function ui(e){const t=e.request||N.defaults({headers:{"user-agent":`octokit-auth-oauth-device.js/${li} ${Ee()}`}}),{request:r=t,...s}=e,o=e.clientType==="github-app"?{...s,clientType:"github-app",request:r}:{...s,clientType:"oauth-app",request:r,scopes:e.scopes||[]};if(!e.clientId)throw new Error('[@octokit/auth-oauth-device] "clientId" option must be set (https://github.com/octokit/auth-oauth-device.js#usage)');if(!e.onVerification)throw new Error('[@octokit/auth-oauth-device] "onVerification" option must be a function (https://github.com/octokit/auth-oauth-device.js#usage)');return Object.assign(ai.bind(null,o),{hook:ci.bind(null,o)})}var Ls="4.0.1";async function xr(e){if("code"in e.strategyOptions){const{authentication:t}=await Gs({clientId:e.clientId,clientSecret:e.clientSecret,clientType:e.clientType,onTokenCreated:e.onTokenCreated,...e.strategyOptions,request:e.request});return{type:"token",tokenType:"oauth",...t}}if("onVerification"in e.strategyOptions){const r=await ui({clientType:e.clientType,clientId:e.clientId,onTokenCreated:e.onTokenCreated,...e.strategyOptions,request:e.request})({type:"oauth"});return{clientSecret:e.clientSecret,...r}}if("token"in e.strategyOptions)return{type:"token",tokenType:"oauth",clientId:e.clientId,clientSecret:e.clientSecret,clientType:e.clientType,onTokenCreated:e.onTokenCreated,...e.strategyOptions};throw new Error("[@octokit/auth-oauth-user] Invalid strategy options")}async function Lt(e,t={}){var s,o;if(e.authentication||(e.authentication=e.clientType==="oauth-app"?await xr(e):await xr(e)),e.authentication.invalid)throw new Error("[@octokit/auth-oauth-user] Token is invalid");const r=e.authentication;if("expiresAt"in r&&(t.type==="refresh"||new Date(r.expiresAt)<new Date)){const{authentication:n}=await Cs({clientType:"github-app",clientId:e.clientId,clientSecret:e.clientSecret,refreshToken:r.refreshToken,request:e.request});e.authentication={tokenType:"oauth",type:"token",...n}}if(t.type==="refresh"){if(e.clientType==="oauth-app")throw new Error("[@octokit/auth-oauth-user] OAuth Apps do not support expiring tokens");if(!r.hasOwnProperty("expiresAt"))throw new Error("[@octokit/auth-oauth-user] Refresh token missing");await((s=e.onTokenCreated)==null?void 0:s.call(e,e.authentication,{type:t.type}))}if(t.type==="check"||t.type==="reset"){const n=t.type==="check"?Us:Ds;try{const{authentication:a}=await n({clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:e.authentication.token,request:e.request});return e.authentication={tokenType:"oauth",type:"token",...a},t.type==="reset"&&await((o=e.onTokenCreated)==null?void 0:o.call(e,e.authentication,{type:t.type})),e.authentication}catch(a){throw a.status===404&&(a.message="[@octokit/auth-oauth-user] Token is invalid",e.authentication.invalid=!0),a}}if(t.type==="delete"||t.type==="deleteAuthorization"){const n=t.type==="delete"?Is:js;try{await n({clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:e.authentication.token,request:e.request})}catch(a){if(a.status!==404)throw a}return e.authentication.invalid=!0,e.authentication}return e.authentication}var pi=/\/applications\/[^/]+\/(token|grant)s?/;function Qt(e){return e&&pi.test(e)}async function di(e,t,r,s={}){const o=t.endpoint.merge(r,s);if(/\/login\/(oauth\/access_token|device\/code)$/.test(o.url))return t(o);if(Qt(o.url)){const a=be(`${e.clientId}:${e.clientSecret}`);return o.headers.authorization=`basic ${a}`,t(o)}const{token:n}=e.clientType==="oauth-app"?await Lt({...e,request:t}):await Lt({...e,request:t});return o.headers.authorization="token "+n,t(o)}function Ye({clientId:e,clientSecret:t,clientType:r="oauth-app",request:s=N.defaults({headers:{"user-agent":`octokit-auth-oauth-app.js/${Ls} ${Ee()}`}}),onTokenCreated:o,...n}){const a=Object.assign({clientType:r,clientId:e,clientSecret:t,onTokenCreated:o,strategyOptions:n,request:s});return Object.assign(Lt.bind(null,a),{hook:di.bind(null,a)})}Ye.VERSION=Ls;const hi=Object.freeze(Object.defineProperty({__proto__:null,createOAuthUserAuth:Ye,requiresBasicAuth:Qt},Symbol.toStringTag,{value:"Module"}));async function gi(e,t){if(t.type==="oauth-app")return{type:"oauth-app",clientId:e.clientId,clientSecret:e.clientSecret,clientType:e.clientType,headers:{authorization:`basic ${be(`${e.clientId}:${e.clientSecret}`)}`}};if("factory"in t){const{type:o,...n}={...t,...e};return t.factory(n)}const r={clientId:e.clientId,clientSecret:e.clientSecret,request:e.request,...t};return(e.clientType==="oauth-app"?await Ye({...r,clientType:e.clientType}):await Ye({...r,clientType:e.clientType}))()}async function mi(e,t,r,s){let o=t.endpoint.merge(r,s);if(/\/login\/(oauth\/access_token|device\/code)$/.test(o.url))return t(o);if(e.clientType==="github-app"&&!Qt(o.url))throw new Error(`[@octokit/auth-oauth-app] GitHub Apps cannot use their client ID/secret for basic authentication for endpoints other than "/applications/{client_id}/**". "${o.method} ${o.url}" is not supported.`);const n=be(`${e.clientId}:${e.clientSecret}`);o.headers.authorization=`basic ${n}`;try{return await t(o)}catch(a){throw a.status!==401||(a.message=`[@octokit/auth-oauth-app] "${o.method} ${o.url}" does not support clientId/clientSecret basic authentication.`),a}}var fi="7.0.1";function _i(e){const t=Object.assign({request:N.defaults({headers:{"user-agent":`octokit-auth-oauth-app.js/${fi} ${Ee()}`}}),clientType:"oauth-app"},e);return Object.assign(gi.bind(null,t),{hook:mi.bind(null,t)})}const Ti=Object.freeze(Object.defineProperty({__proto__:null,createOAuthAppAuth:_i,createOAuthUserAuth:Ye},Symbol.toStringTag,{value:"Module"})),Tt=pe(Ti),wi=pe(Zo);function zr(e,t,r,s,o,n,a){try{var l=e[n](a),u=l.value}catch(f){return void r(f)}l.done?t(u):Promise.resolve(u).then(s,o)}function qs(e){return function(){var t=this,r=arguments;return new Promise(function(s,o){var n=e.apply(t,r);function a(u){zr(n,s,o,a,l,"next",u)}function l(u){zr(n,s,o,a,l,"throw",u)}a(void 0)})}}function Wr(e){for(var t=new ArrayBuffer(e.length),r=new Uint8Array(t),s=0,o=e.length;s<o;s++)r[s]=e.charCodeAt(s);return t}function xs(e){return e.replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function Hr(e){return xs(btoa(JSON.stringify(e)))}var yi=function(){var e=qs(function*(t){var{privateKey:r,payload:s}=t;if(/BEGIN RSA PRIVATE KEY/.test(r))throw new Error("[universal-github-app-jwt] Private Key is in PKCS#1 format, but only PKCS#8 is supported. See https://github.com/gr2m/universal-github-app-jwt#readme");var o,n={name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},a=(o=r.trim().split(`
`).slice(1,-1).join(""),Wr(atob(o))),l=yield crypto.subtle.importKey("pkcs8",a,n,!1,["sign"]),u=function(_,A){return"".concat(Hr(_),".").concat(Hr(A))}({alg:"RS256",typ:"JWT"},s),f=Wr(u),T=function(_){for(var A="",R=new Uint8Array(_),C=R.byteLength,P=0;P<C;P++)A+=String.fromCharCode(R[P]);return xs(btoa(A))}(yield crypto.subtle.sign(n.name,l,f));return"".concat(u,".").concat(T)});return function(t){return e.apply(this,arguments)}}();function Ei(e){return zs.apply(this,arguments)}function zs(){return(zs=qs(function*(e){var{id:t,privateKey:r,now:s=Math.floor(Date.now()/1e3)}=e,o=s-30,n=o+600,a={iat:o,exp:n,iss:t};return{appId:t,expiration:n,token:yield yi({privateKey:r,payload:a})}})).apply(this,arguments)}const bi=Object.freeze(Object.defineProperty({__proto__:null,githubAppJwt:Ei},Symbol.toStringTag,{value:"Module"})),vi=pe(bi);var wt={};Object.defineProperty(wt,"__esModule",{value:!0});wt.LRUCache=void 0;const Ke=typeof performance=="object"&&performance&&typeof performance.now=="function"?performance:Date,Ws=new Set,qt=typeof process=="object"&&process?process:{},Hs=(e,t,r,s)=>{typeof qt.emitWarning=="function"?qt.emitWarning(e,t,r,s):console.error(`[${r}] ${t}: ${e}`)};let dt=globalThis.AbortController,Mr=globalThis.AbortSignal;var ts;if(typeof dt>"u"){Mr=class{constructor(){q(this,"onabort");q(this,"_onabort",[]);q(this,"reason");q(this,"aborted",!1)}addEventListener(s,o){this._onabort.push(o)}},dt=class{constructor(){q(this,"signal",new Mr);t()}abort(s){var o,n;if(!this.signal.aborted){this.signal.reason=s,this.signal.aborted=!0;for(const a of this.signal._onabort)a(s);(n=(o=this.signal).onabort)==null||n.call(o,s)}}};let e=((ts=qt.env)==null?void 0:ts.LRU_CACHE_IGNORE_AC_WARNING)!=="1";const t=()=>{e&&(e=!1,Hs("AbortController is not defined. If using lru-cache in node 14, load an AbortController polyfill from the `node-abort-controller` package. A minimal polyfill is provided for use by LRUCache.fetch(), but it should not be relied upon in other contexts (eg, passing it to other APIs that use AbortController/AbortSignal might have undesirable effects). You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.","NO_ABORT_CONTROLLER","ENOTSUP",t))}}const ki=e=>!Ws.has(e),_e=e=>e&&e===Math.floor(e)&&e>0&&isFinite(e),Ms=e=>_e(e)?e<=Math.pow(2,8)?Uint8Array:e<=Math.pow(2,16)?Uint16Array:e<=Math.pow(2,32)?Uint32Array:e<=Number.MAX_SAFE_INTEGER?lt:null:null;class lt extends Array{constructor(t){super(t),this.fill(0)}}var Le;const Se=class Se{constructor(t,r){q(this,"heap");q(this,"length");if(!c(Se,Le))throw new TypeError("instantiate Stack using Stack.create(n)");this.heap=new r(t),this.length=0}static create(t){const r=Ms(t);if(!r)return[];k(Se,Le,!0);const s=new Se(t,r);return k(Se,Le,!1),s}push(t){this.heap[this.length++]=t}pop(){return this.heap[--this.length]}};Le=new WeakMap,O(Se,Le,!1);let xt=Se;var te,X,re,se,qe,x,oe,z,j,S,J,Z,V,W,ne,H,de,he,ie,ae,ye,Q,Ze,Wt,Ae,ge,et,ee,gt,Ns,Oe,xe,tt,le,Te,ue,we,rt,Ht,ze,ut,We,pt,I,L,st,Mt,Pe,Je;const tr=class tr{constructor(t){O(this,Ze);O(this,gt);O(this,le);O(this,ue);O(this,rt);O(this,ze);O(this,We);O(this,I);O(this,st);O(this,Pe);O(this,te,void 0);O(this,X,void 0);O(this,re,void 0);O(this,se,void 0);O(this,qe,void 0);q(this,"ttl");q(this,"ttlResolution");q(this,"ttlAutopurge");q(this,"updateAgeOnGet");q(this,"updateAgeOnHas");q(this,"allowStale");q(this,"noDisposeOnSet");q(this,"noUpdateTTL");q(this,"maxEntrySize");q(this,"sizeCalculation");q(this,"noDeleteOnFetchRejection");q(this,"noDeleteOnStaleGet");q(this,"allowStaleOnFetchAbort");q(this,"allowStaleOnFetchRejection");q(this,"ignoreFetchAbort");O(this,x,void 0);O(this,oe,void 0);O(this,z,void 0);O(this,j,void 0);O(this,S,void 0);O(this,J,void 0);O(this,Z,void 0);O(this,V,void 0);O(this,W,void 0);O(this,ne,void 0);O(this,H,void 0);O(this,de,void 0);O(this,he,void 0);O(this,ie,void 0);O(this,ae,void 0);O(this,ye,void 0);O(this,Q,void 0);O(this,Ae,()=>{});O(this,ge,()=>{});O(this,et,()=>{});O(this,ee,()=>!1);O(this,Oe,t=>{});O(this,xe,(t,r,s)=>{});O(this,tt,(t,r,s,o)=>{if(s||o)throw new TypeError("cannot set size without setting maxSize or maxEntrySize on cache");return 0});const{max:r=0,ttl:s,ttlResolution:o=1,ttlAutopurge:n,updateAgeOnGet:a,updateAgeOnHas:l,allowStale:u,dispose:f,disposeAfter:T,noDisposeOnSet:_,noUpdateTTL:A,maxSize:R=0,maxEntrySize:C=0,sizeCalculation:P,fetchMethod:G,noDeleteOnFetchRejection:w,noDeleteOnStaleGet:v,allowStaleOnFetchRejection:F,allowStaleOnFetchAbort:D,ignoreFetchAbort:$}=t;if(r!==0&&!_e(r))throw new TypeError("max option must be a nonnegative integer");const K=r?Ms(r):Array;if(!K)throw new Error("invalid max value: "+r);if(k(this,te,r),k(this,X,R),this.maxEntrySize=C||c(this,X),this.sizeCalculation=P,this.sizeCalculation){if(!c(this,X)&&!this.maxEntrySize)throw new TypeError("cannot set sizeCalculation without setting maxSize or maxEntrySize");if(typeof this.sizeCalculation!="function")throw new TypeError("sizeCalculation set to non-function")}if(G!==void 0&&typeof G!="function")throw new TypeError("fetchMethod must be a function if specified");if(k(this,qe,G),k(this,ye,!!G),k(this,z,new Map),k(this,j,new Array(r).fill(void 0)),k(this,S,new Array(r).fill(void 0)),k(this,J,new K(r)),k(this,Z,new K(r)),k(this,V,0),k(this,W,0),k(this,ne,xt.create(r)),k(this,x,0),k(this,oe,0),typeof f=="function"&&k(this,re,f),typeof T=="function"?(k(this,se,T),k(this,H,[])):(k(this,se,void 0),k(this,H,void 0)),k(this,ae,!!c(this,re)),k(this,Q,!!c(this,se)),this.noDisposeOnSet=!!_,this.noUpdateTTL=!!A,this.noDeleteOnFetchRejection=!!w,this.allowStaleOnFetchRejection=!!F,this.allowStaleOnFetchAbort=!!D,this.ignoreFetchAbort=!!$,this.maxEntrySize!==0){if(c(this,X)!==0&&!_e(c(this,X)))throw new TypeError("maxSize must be a positive integer if specified");if(!_e(this.maxEntrySize))throw new TypeError("maxEntrySize must be a positive integer if specified");b(this,gt,Ns).call(this)}if(this.allowStale=!!u,this.noDeleteOnStaleGet=!!v,this.updateAgeOnGet=!!a,this.updateAgeOnHas=!!l,this.ttlResolution=_e(o)||o===0?o:1,this.ttlAutopurge=!!n,this.ttl=s||0,this.ttl){if(!_e(this.ttl))throw new TypeError("ttl must be a positive integer if specified");b(this,Ze,Wt).call(this)}if(c(this,te)===0&&this.ttl===0&&c(this,X)===0)throw new TypeError("At least one of max, maxSize, or ttl is required");if(!this.ttlAutopurge&&!c(this,te)&&!c(this,X)){const Y="LRU_CACHE_UNBOUNDED";ki(Y)&&(Ws.add(Y),Hs("TTL caching without ttlAutopurge, max, or maxSize can result in unbounded memory consumption.","UnboundedCacheWarning",Y,tr))}}static unsafeExposeInternals(t){return{starts:c(t,he),ttls:c(t,ie),sizes:c(t,de),keyMap:c(t,z),keyList:c(t,j),valList:c(t,S),next:c(t,J),prev:c(t,Z),get head(){return c(t,V)},get tail(){return c(t,W)},free:c(t,ne),isBackgroundFetch:r=>{var s;return b(s=t,I,L).call(s,r)},backgroundFetch:(r,s,o,n)=>{var a;return b(a=t,We,pt).call(a,r,s,o,n)},moveToTail:r=>{var s;return b(s=t,Pe,Je).call(s,r)},indexes:r=>{var s;return b(s=t,le,Te).call(s,r)},rindexes:r=>{var s;return b(s=t,ue,we).call(s,r)},isStale:r=>{var s;return c(s=t,ee).call(s,r)}}}get max(){return c(this,te)}get maxSize(){return c(this,X)}get calculatedSize(){return c(this,oe)}get size(){return c(this,x)}get fetchMethod(){return c(this,qe)}get dispose(){return c(this,re)}get disposeAfter(){return c(this,se)}getRemainingTTL(t){return c(this,z).has(t)?1/0:0}*entries(){for(const t of b(this,le,Te).call(this))c(this,S)[t]!==void 0&&c(this,j)[t]!==void 0&&!b(this,I,L).call(this,c(this,S)[t])&&(yield[c(this,j)[t],c(this,S)[t]])}*rentries(){for(const t of b(this,ue,we).call(this))c(this,S)[t]!==void 0&&c(this,j)[t]!==void 0&&!b(this,I,L).call(this,c(this,S)[t])&&(yield[c(this,j)[t],c(this,S)[t]])}*keys(){for(const t of b(this,le,Te).call(this)){const r=c(this,j)[t];r!==void 0&&!b(this,I,L).call(this,c(this,S)[t])&&(yield r)}}*rkeys(){for(const t of b(this,ue,we).call(this)){const r=c(this,j)[t];r!==void 0&&!b(this,I,L).call(this,c(this,S)[t])&&(yield r)}}*values(){for(const t of b(this,le,Te).call(this))c(this,S)[t]!==void 0&&!b(this,I,L).call(this,c(this,S)[t])&&(yield c(this,S)[t])}*rvalues(){for(const t of b(this,ue,we).call(this))c(this,S)[t]!==void 0&&!b(this,I,L).call(this,c(this,S)[t])&&(yield c(this,S)[t])}[Symbol.iterator](){return this.entries()}find(t,r={}){for(const s of b(this,le,Te).call(this)){const o=c(this,S)[s],n=b(this,I,L).call(this,o)?o.__staleWhileFetching:o;if(n!==void 0&&t(n,c(this,j)[s],this))return this.get(c(this,j)[s],r)}}forEach(t,r=this){for(const s of b(this,le,Te).call(this)){const o=c(this,S)[s],n=b(this,I,L).call(this,o)?o.__staleWhileFetching:o;n!==void 0&&t.call(r,n,c(this,j)[s],this)}}rforEach(t,r=this){for(const s of b(this,ue,we).call(this)){const o=c(this,S)[s],n=b(this,I,L).call(this,o)?o.__staleWhileFetching:o;n!==void 0&&t.call(r,n,c(this,j)[s],this)}}purgeStale(){let t=!1;for(const r of b(this,ue,we).call(this,{allowStale:!0}))c(this,ee).call(this,r)&&(this.delete(c(this,j)[r]),t=!0);return t}dump(){const t=[];for(const r of b(this,le,Te).call(this,{allowStale:!0})){const s=c(this,j)[r],o=c(this,S)[r],n=b(this,I,L).call(this,o)?o.__staleWhileFetching:o;if(n===void 0||s===void 0)continue;const a={value:n};if(c(this,ie)&&c(this,he)){a.ttl=c(this,ie)[r];const l=Ke.now()-c(this,he)[r];a.start=Math.floor(Date.now()-l)}c(this,de)&&(a.size=c(this,de)[r]),t.unshift([s,a])}return t}load(t){this.clear();for(const[r,s]of t){if(s.start){const o=Date.now()-s.start;s.start=Ke.now()-o}this.set(r,s.value,s)}}set(t,r,s={}){var A,R,C,P,G;if(r===void 0)return this.delete(t),this;const{ttl:o=this.ttl,start:n,noDisposeOnSet:a=this.noDisposeOnSet,sizeCalculation:l=this.sizeCalculation,status:u}=s;let{noUpdateTTL:f=this.noUpdateTTL}=s;const T=c(this,tt).call(this,t,r,s.size||0,l);if(this.maxEntrySize&&T>this.maxEntrySize)return u&&(u.set="miss",u.maxEntrySizeExceeded=!0),this.delete(t),this;let _=c(this,x)===0?void 0:c(this,z).get(t);if(_===void 0)_=c(this,x)===0?c(this,W):c(this,ne).length!==0?c(this,ne).pop():c(this,x)===c(this,te)?b(this,ze,ut).call(this,!1):c(this,x),c(this,j)[_]=t,c(this,S)[_]=r,c(this,z).set(t,_),c(this,J)[c(this,W)]=_,c(this,Z)[_]=c(this,W),k(this,W,_),at(this,x)._++,c(this,xe).call(this,_,T,u),u&&(u.set="add"),f=!1;else{b(this,Pe,Je).call(this,_);const w=c(this,S)[_];if(r!==w){if(c(this,ye)&&b(this,I,L).call(this,w)){w.__abortController.abort(new Error("replaced"));const{__staleWhileFetching:v}=w;v!==void 0&&!a&&(c(this,ae)&&((A=c(this,re))==null||A.call(this,v,t,"set")),c(this,Q)&&((R=c(this,H))==null||R.push([v,t,"set"])))}else a||(c(this,ae)&&((C=c(this,re))==null||C.call(this,w,t,"set")),c(this,Q)&&((P=c(this,H))==null||P.push([w,t,"set"])));if(c(this,Oe).call(this,_),c(this,xe).call(this,_,T,u),c(this,S)[_]=r,u){u.set="replace";const v=w&&b(this,I,L).call(this,w)?w.__staleWhileFetching:w;v!==void 0&&(u.oldValue=v)}}else u&&(u.set="update")}if(o!==0&&!c(this,ie)&&b(this,Ze,Wt).call(this),c(this,ie)&&(f||c(this,et).call(this,_,o,n),u&&c(this,ge).call(this,u,_)),!a&&c(this,Q)&&c(this,H)){const w=c(this,H);let v;for(;v=w==null?void 0:w.shift();)(G=c(this,se))==null||G.call(this,...v)}return this}pop(){var t;try{for(;c(this,x);){const r=c(this,S)[c(this,V)];if(b(this,ze,ut).call(this,!0),b(this,I,L).call(this,r)){if(r.__staleWhileFetching)return r.__staleWhileFetching}else if(r!==void 0)return r}}finally{if(c(this,Q)&&c(this,H)){const r=c(this,H);let s;for(;s=r==null?void 0:r.shift();)(t=c(this,se))==null||t.call(this,...s)}}}has(t,r={}){const{updateAgeOnHas:s=this.updateAgeOnHas,status:o}=r,n=c(this,z).get(t);if(n!==void 0){const a=c(this,S)[n];if(b(this,I,L).call(this,a)&&a.__staleWhileFetching===void 0)return!1;if(c(this,ee).call(this,n))o&&(o.has="stale",c(this,ge).call(this,o,n));else return s&&c(this,Ae).call(this,n),o&&(o.has="hit",c(this,ge).call(this,o,n)),!0}else o&&(o.has="miss");return!1}peek(t,r={}){const{allowStale:s=this.allowStale}=r,o=c(this,z).get(t);if(o===void 0||!s&&c(this,ee).call(this,o))return;const n=c(this,S)[o];return b(this,I,L).call(this,n)?n.__staleWhileFetching:n}async fetch(t,r={}){const{allowStale:s=this.allowStale,updateAgeOnGet:o=this.updateAgeOnGet,noDeleteOnStaleGet:n=this.noDeleteOnStaleGet,ttl:a=this.ttl,noDisposeOnSet:l=this.noDisposeOnSet,size:u=0,sizeCalculation:f=this.sizeCalculation,noUpdateTTL:T=this.noUpdateTTL,noDeleteOnFetchRejection:_=this.noDeleteOnFetchRejection,allowStaleOnFetchRejection:A=this.allowStaleOnFetchRejection,ignoreFetchAbort:R=this.ignoreFetchAbort,allowStaleOnFetchAbort:C=this.allowStaleOnFetchAbort,context:P,forceRefresh:G=!1,status:w,signal:v}=r;if(!c(this,ye))return w&&(w.fetch="get"),this.get(t,{allowStale:s,updateAgeOnGet:o,noDeleteOnStaleGet:n,status:w});const F={allowStale:s,updateAgeOnGet:o,noDeleteOnStaleGet:n,ttl:a,noDisposeOnSet:l,size:u,sizeCalculation:f,noUpdateTTL:T,noDeleteOnFetchRejection:_,allowStaleOnFetchRejection:A,allowStaleOnFetchAbort:C,ignoreFetchAbort:R,status:w,signal:v};let D=c(this,z).get(t);if(D===void 0){w&&(w.fetch="miss");const $=b(this,We,pt).call(this,t,D,F,P);return $.__returned=$}else{const $=c(this,S)[D];if(b(this,I,L).call(this,$)){const Ue=s&&$.__staleWhileFetching!==void 0;return w&&(w.fetch="inflight",Ue&&(w.returnedStale=!0)),Ue?$.__staleWhileFetching:$.__returned=$}const K=c(this,ee).call(this,D);if(!G&&!K)return w&&(w.fetch="hit"),b(this,Pe,Je).call(this,D),o&&c(this,Ae).call(this,D),w&&c(this,ge).call(this,w,D),$;const Y=b(this,We,pt).call(this,t,D,F,P),fe=Y.__staleWhileFetching!==void 0&&s;return w&&(w.fetch=K?"stale":"refresh",fe&&K&&(w.returnedStale=!0)),fe?Y.__staleWhileFetching:Y.__returned=Y}}get(t,r={}){const{allowStale:s=this.allowStale,updateAgeOnGet:o=this.updateAgeOnGet,noDeleteOnStaleGet:n=this.noDeleteOnStaleGet,status:a}=r,l=c(this,z).get(t);if(l!==void 0){const u=c(this,S)[l],f=b(this,I,L).call(this,u);return a&&c(this,ge).call(this,a,l),c(this,ee).call(this,l)?(a&&(a.get="stale"),f?(a&&s&&u.__staleWhileFetching!==void 0&&(a.returnedStale=!0),s?u.__staleWhileFetching:void 0):(n||this.delete(t),a&&s&&(a.returnedStale=!0),s?u:void 0)):(a&&(a.get="hit"),f?u.__staleWhileFetching:(b(this,Pe,Je).call(this,l),o&&c(this,Ae).call(this,l),u))}else a&&(a.get="miss")}delete(t){var s,o,n,a;let r=!1;if(c(this,x)!==0){const l=c(this,z).get(t);if(l!==void 0)if(r=!0,c(this,x)===1)this.clear();else{c(this,Oe).call(this,l);const u=c(this,S)[l];if(b(this,I,L).call(this,u)?u.__abortController.abort(new Error("deleted")):(c(this,ae)||c(this,Q))&&(c(this,ae)&&((s=c(this,re))==null||s.call(this,u,t,"delete")),c(this,Q)&&((o=c(this,H))==null||o.push([u,t,"delete"]))),c(this,z).delete(t),c(this,j)[l]=void 0,c(this,S)[l]=void 0,l===c(this,W))k(this,W,c(this,Z)[l]);else if(l===c(this,V))k(this,V,c(this,J)[l]);else{const f=c(this,Z)[l];c(this,J)[f]=c(this,J)[l];const T=c(this,J)[l];c(this,Z)[T]=c(this,Z)[l]}at(this,x)._--,c(this,ne).push(l)}}if(c(this,Q)&&((n=c(this,H))!=null&&n.length)){const l=c(this,H);let u;for(;u=l==null?void 0:l.shift();)(a=c(this,se))==null||a.call(this,...u)}return r}clear(){var t,r,s;for(const o of b(this,ue,we).call(this,{allowStale:!0})){const n=c(this,S)[o];if(b(this,I,L).call(this,n))n.__abortController.abort(new Error("deleted"));else{const a=c(this,j)[o];c(this,ae)&&((t=c(this,re))==null||t.call(this,n,a,"delete")),c(this,Q)&&((r=c(this,H))==null||r.push([n,a,"delete"]))}}if(c(this,z).clear(),c(this,S).fill(void 0),c(this,j).fill(void 0),c(this,ie)&&c(this,he)&&(c(this,ie).fill(0),c(this,he).fill(0)),c(this,de)&&c(this,de).fill(0),k(this,V,0),k(this,W,0),c(this,ne).length=0,k(this,oe,0),k(this,x,0),c(this,Q)&&c(this,H)){const o=c(this,H);let n;for(;n=o==null?void 0:o.shift();)(s=c(this,se))==null||s.call(this,...n)}}};te=new WeakMap,X=new WeakMap,re=new WeakMap,se=new WeakMap,qe=new WeakMap,x=new WeakMap,oe=new WeakMap,z=new WeakMap,j=new WeakMap,S=new WeakMap,J=new WeakMap,Z=new WeakMap,V=new WeakMap,W=new WeakMap,ne=new WeakMap,H=new WeakMap,de=new WeakMap,he=new WeakMap,ie=new WeakMap,ae=new WeakMap,ye=new WeakMap,Q=new WeakMap,Ze=new WeakSet,Wt=function(){const t=new lt(c(this,te)),r=new lt(c(this,te));k(this,ie,t),k(this,he,r),k(this,et,(n,a,l=Ke.now())=>{if(r[n]=a!==0?l:0,t[n]=a,a!==0&&this.ttlAutopurge){const u=setTimeout(()=>{c(this,ee).call(this,n)&&this.delete(c(this,j)[n])},a+1);u.unref&&u.unref()}}),k(this,Ae,n=>{r[n]=t[n]!==0?Ke.now():0}),k(this,ge,(n,a)=>{if(t[a]){const l=t[a],u=r[a];if(!l||!u)return;n.ttl=l,n.start=u,n.now=s||o();const f=n.now-u;n.remainingTTL=l-f}});let s=0;const o=()=>{const n=Ke.now();if(this.ttlResolution>0){s=n;const a=setTimeout(()=>s=0,this.ttlResolution);a.unref&&a.unref()}return n};this.getRemainingTTL=n=>{const a=c(this,z).get(n);if(a===void 0)return 0;const l=t[a],u=r[a];if(!l||!u)return 1/0;const f=(s||o())-u;return l-f},k(this,ee,n=>{const a=r[n],l=t[n];return!!l&&!!a&&(s||o())-a>l})},Ae=new WeakMap,ge=new WeakMap,et=new WeakMap,ee=new WeakMap,gt=new WeakSet,Ns=function(){const t=new lt(c(this,te));k(this,oe,0),k(this,de,t),k(this,Oe,r=>{k(this,oe,c(this,oe)-t[r]),t[r]=0}),k(this,tt,(r,s,o,n)=>{if(b(this,I,L).call(this,s))return 0;if(!_e(o))if(n){if(typeof n!="function")throw new TypeError("sizeCalculation must be a function");if(o=n(s,r),!_e(o))throw new TypeError("sizeCalculation return invalid (expect positive integer)")}else throw new TypeError("invalid size value (must be positive integer). When maxSize or maxEntrySize is used, sizeCalculation or size must be set.");return o}),k(this,xe,(r,s,o)=>{if(t[r]=s,c(this,X)){const n=c(this,X)-t[r];for(;c(this,oe)>n;)b(this,ze,ut).call(this,!0)}k(this,oe,c(this,oe)+t[r]),o&&(o.entrySize=s,o.totalCalculatedSize=c(this,oe))})},Oe=new WeakMap,xe=new WeakMap,tt=new WeakMap,le=new WeakSet,Te=function*({allowStale:t=this.allowStale}={}){if(c(this,x))for(let r=c(this,W);!(!b(this,rt,Ht).call(this,r)||((t||!c(this,ee).call(this,r))&&(yield r),r===c(this,V)));)r=c(this,Z)[r]},ue=new WeakSet,we=function*({allowStale:t=this.allowStale}={}){if(c(this,x))for(let r=c(this,V);!(!b(this,rt,Ht).call(this,r)||((t||!c(this,ee).call(this,r))&&(yield r),r===c(this,W)));)r=c(this,J)[r]},rt=new WeakSet,Ht=function(t){return t!==void 0&&c(this,z).get(c(this,j)[t])===t},ze=new WeakSet,ut=function(t){var n,a;const r=c(this,V),s=c(this,j)[r],o=c(this,S)[r];return c(this,ye)&&b(this,I,L).call(this,o)?o.__abortController.abort(new Error("evicted")):(c(this,ae)||c(this,Q))&&(c(this,ae)&&((n=c(this,re))==null||n.call(this,o,s,"evict")),c(this,Q)&&((a=c(this,H))==null||a.push([o,s,"evict"]))),c(this,Oe).call(this,r),t&&(c(this,j)[r]=void 0,c(this,S)[r]=void 0,c(this,ne).push(r)),c(this,x)===1?(k(this,V,k(this,W,0)),c(this,ne).length=0):k(this,V,c(this,J)[r]),c(this,z).delete(s),at(this,x)._--,r},We=new WeakSet,pt=function(t,r,s,o){const n=r===void 0?void 0:c(this,S)[r];if(b(this,I,L).call(this,n))return n;const a=new dt,{signal:l}=s;l==null||l.addEventListener("abort",()=>a.abort(l.reason),{signal:a.signal});const u={signal:a.signal,options:s,context:o},f=(P,G=!1)=>{const{aborted:w}=a.signal,v=s.ignoreFetchAbort&&P!==void 0;if(s.status&&(w&&!G?(s.status.fetchAborted=!0,s.status.fetchError=a.signal.reason,v&&(s.status.fetchAbortIgnored=!0)):s.status.fetchResolved=!0),w&&!v&&!G)return _(a.signal.reason);const F=R;return c(this,S)[r]===R&&(P===void 0?F.__staleWhileFetching?c(this,S)[r]=F.__staleWhileFetching:this.delete(t):(s.status&&(s.status.fetchUpdated=!0),this.set(t,P,u.options))),P},T=P=>(s.status&&(s.status.fetchRejected=!0,s.status.fetchError=P),_(P)),_=P=>{const{aborted:G}=a.signal,w=G&&s.allowStaleOnFetchAbort,v=w||s.allowStaleOnFetchRejection,F=v||s.noDeleteOnFetchRejection,D=R;if(c(this,S)[r]===R&&(!F||D.__staleWhileFetching===void 0?this.delete(t):w||(c(this,S)[r]=D.__staleWhileFetching)),v)return s.status&&D.__staleWhileFetching!==void 0&&(s.status.returnedStale=!0),D.__staleWhileFetching;if(D.__returned===D)throw P},A=(P,G)=>{var v;const w=(v=c(this,qe))==null?void 0:v.call(this,t,n,u);w&&w instanceof Promise&&w.then(F=>P(F===void 0?void 0:F),G),a.signal.addEventListener("abort",()=>{(!s.ignoreFetchAbort||s.allowStaleOnFetchAbort)&&(P(void 0),s.allowStaleOnFetchAbort&&(P=F=>f(F,!0)))})};s.status&&(s.status.fetchDispatched=!0);const R=new Promise(A).then(f,T),C=Object.assign(R,{__abortController:a,__staleWhileFetching:n,__returned:void 0});return r===void 0?(this.set(t,C,{...u.options,status:void 0}),r=c(this,z).get(t)):c(this,S)[r]=C,C},I=new WeakSet,L=function(t){if(!c(this,ye))return!1;const r=t;return!!r&&r instanceof Promise&&r.hasOwnProperty("__staleWhileFetching")&&r.__abortController instanceof dt},st=new WeakSet,Mt=function(t,r){c(this,Z)[r]=t,c(this,J)[t]=r},Pe=new WeakSet,Je=function(t){t!==c(this,W)&&(t===c(this,V)?k(this,V,c(this,J)[t]):b(this,st,Mt).call(this,c(this,Z)[t],c(this,J)[t]),b(this,st,Mt).call(this,c(this,W),t),k(this,W,t))};let zt=tr;wt.LRUCache=zt;const Ne=pe(hi);var Si=Object.create,yt=Object.defineProperty,Ai=Object.getOwnPropertyDescriptor,Oi=Object.getOwnPropertyNames,Pi=Object.getPrototypeOf,Ri=Object.prototype.hasOwnProperty,Gi=(e,t)=>{for(var r in t)yt(e,r,{get:t[r],enumerable:!0})},Bs=(e,t,r,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of Oi(t))!Ri.call(e,o)&&o!==r&&yt(e,o,{get:()=>t[o],enumerable:!(s=Ai(t,o))||s.enumerable});return e},Fi=(e,t,r)=>(r=e!=null?Si(Pi(e)):{},Bs(t||!e||!e.__esModule?yt(r,"default",{value:e,enumerable:!0}):r,e)),Ui=e=>Bs(yt({},"__esModule",{value:!0}),e),Vs={};Gi(Vs,{createAppAuth:()=>Zi,createOAuthUserAuth:()=>Xi.createOAuthUserAuth});var Yt=Ui(Vs),Ci=Ps,Di=Xn,Ii=Tt,ji=wi;Fi(Tt);var $i=vi;async function ht({appId:e,privateKey:t,timeDifference:r}){try{const s=await(0,$i.githubAppJwt)({id:+e,privateKey:t,now:r&&Math.floor(Date.now()/1e3)+r});return{type:"app",token:s.token,appId:s.appId,expiresAt:new Date(s.expiration*1e3).toISOString()}}catch(s){throw t==="-----BEGIN RSA PRIVATE KEY-----"?new Error("The 'privateKey` option contains only the first line '-----BEGIN RSA PRIVATE KEY-----'. If you are setting it using a `.env` file, make sure it is set on a single line with newlines replaced by '\n'"):s}}var Li=wt;function qi(){return new Li.LRUCache({max:15e3,ttl:1e3*60*59})}async function xi(e,t){const r=Ks(t),s=await e.get(r);if(!s)return;const[o,n,a,l,u,f]=s.split("|"),T=t.permissions||u.split(/,/).reduce((_,A)=>(/!$/.test(A)?_[A.slice(0,-1)]="write":_[A]="read",_),{});return{token:o,createdAt:n,expiresAt:a,permissions:T,repositoryIds:t.repositoryIds,repositoryNames:t.repositoryNames,singleFileName:f,repositorySelection:l}}async function zi(e,t,r){const s=Ks(t),o=t.permissions?"":Object.keys(r.permissions).map(a=>`${a}${r.permissions[a]==="write"?"!":""}`).join(","),n=[r.token,r.createdAt,r.expiresAt,r.repositorySelection,o,r.singleFileName].join("|");await e.set(s,n)}function Ks({installationId:e,permissions:t={},repositoryIds:r=[],repositoryNames:s=[]}){const o=Object.keys(t).sort().map(l=>t[l]==="read"?l:`${l}!`).join(","),n=r.sort().join(","),a=s.join(",");return[e,n,a,o].filter(Boolean).join("|")}function Nr({installationId:e,token:t,createdAt:r,expiresAt:s,repositorySelection:o,permissions:n,repositoryIds:a,repositoryNames:l,singleFileName:u}){return Object.assign({type:"token",tokenType:"installation",token:t,installationId:e,permissions:n,createdAt:r,expiresAt:s,repositorySelection:o},a?{repositoryIds:a}:null,l?{repositoryNames:l}:null,u?{singleFileName:u}:null)}async function Js(e,t,r){const s=Number(t.installationId||e.installationId);if(!s)throw new Error("[@octokit/auth-app] installationId option is required for installation authentication.");if(t.factory){const{type:v,factory:F,oauthApp:D,...$}={...e,...t};return F($)}const o=Object.assign({installationId:s},t);if(!t.refresh){const v=await xi(e.cache,o);if(v){const{token:F,createdAt:D,expiresAt:$,permissions:K,repositoryIds:Y,repositoryNames:Fe,singleFileName:fe,repositorySelection:Ue}=v;return Nr({installationId:s,token:F,createdAt:D,expiresAt:$,permissions:K,repositorySelection:Ue,repositoryIds:Y,repositoryNames:Fe,singleFileName:fe})}}const n=await ht(e),a=r||e.request,{data:{token:l,expires_at:u,repositories:f,permissions:T,repository_selection:_,single_file:A}}=await a("POST /app/installations/{installation_id}/access_tokens",{installation_id:s,repository_ids:t.repositoryIds,repositories:t.repositoryNames,permissions:t.permissions,mediaType:{previews:["machine-man"]},headers:{authorization:`bearer ${n.token}`}}),R=T||{},C=_||"all",P=f?f.map(v=>v.id):void 0,G=f?f.map(v=>v.name):void 0,w=new Date().toISOString();return await zi(e.cache,o,{token:l,createdAt:w,expiresAt:u,repositorySelection:C,permissions:R,repositoryIds:P,repositoryNames:G,singleFileName:A}),Nr({installationId:s,token:l,createdAt:w,expiresAt:u,repositorySelection:C,permissions:R,repositoryIds:P,repositoryNames:G,singleFileName:A})}async function Wi(e,t){switch(t.type){case"app":return ht(e);case"oauth":e.log.warn(new ji.Deprecation('[@octokit/auth-app] {type: "oauth"} is deprecated. Use {type: "oauth-app"} instead'));case"oauth-app":return e.oauthApp({type:"oauth-app"});case"installation":return Js(e,{...t,type:"installation"});case"oauth-user":return e.oauthApp(t);default:throw new Error(`Invalid auth type: ${t.type}`)}}var Hi=Ne,Mi=["/app","/app/hook/config","/app/hook/deliveries","/app/hook/deliveries/{delivery_id}","/app/hook/deliveries/{delivery_id}/attempts","/app/installations","/app/installations/{installation_id}","/app/installations/{installation_id}/access_tokens","/app/installations/{installation_id}/suspended","/marketplace_listing/accounts/{account_id}","/marketplace_listing/plan","/marketplace_listing/plans","/marketplace_listing/plans/{plan_id}/accounts","/marketplace_listing/stubbed/accounts/{account_id}","/marketplace_listing/stubbed/plan","/marketplace_listing/stubbed/plans","/marketplace_listing/stubbed/plans/{plan_id}/accounts","/orgs/{org}/installation","/repos/{owner}/{repo}/installation","/users/{username}/installation"];function Ni(e){const r=`^(?:${e.map(s=>s.split("/").map(o=>o.startsWith("{")?"(?:.+?)":o).join("/")).map(s=>`(?:${s})`).join("|")})$`;return new RegExp(r,"i")}var Bi=Ni(Mi);function Vi(e){return!!e&&Bi.test(e.split("?")[0])}var Ki=5*1e3;function Ji(e){return!(e.message.match(/'Expiration time' claim \('exp'\) must be a numeric value representing the future time at which the assertion expires/)||e.message.match(/'Issued at' claim \('iat'\) must be an Integer representing the time that the assertion was issued/))}async function Qi(e,t,r,s){const o=t.endpoint.merge(r,s),n=o.url;if(/\/login\/oauth\/access_token$/.test(n))return t(o);if(Vi(n.replace(t.endpoint.DEFAULTS.baseUrl,""))){const{token:u}=await ht(e);o.headers.authorization=`bearer ${u}`;let f;try{f=await t(o)}catch(T){if(Ji(T)||typeof T.response.headers.date>"u")throw T;const _=Math.floor((Date.parse(T.response.headers.date)-Date.parse(new Date().toString()))/1e3);e.log.warn(T.message),e.log.warn(`[@octokit/auth-app] GitHub API time and system time are different by ${_} seconds. Retrying request with the difference accounted for.`);const{token:A}=await ht({...e,timeDifference:_});return o.headers.authorization=`bearer ${A}`,t(o)}return f}if((0,Hi.requiresBasicAuth)(n)){const u=await e.oauthApp({type:"oauth-app"});return o.headers.authorization=u.headers.authorization,t(o)}const{token:a,createdAt:l}=await Js(e,{},t);return o.headers.authorization=`token ${a}`,Qs(e,t,o,l)}async function Qs(e,t,r,s,o=0){const n=+new Date-+new Date(s);try{return await t(r)}catch(a){if(a.status!==401)throw a;if(n>=Ki)throw o>0&&(a.message=`After ${o} retries within ${n/1e3}s of creating the installation access token, the response remains 401. At this point, the cause may be an authentication problem or a system outage. Please check https://www.githubstatus.com for status information`),a;++o;const l=o*1e3;return e.log.warn(`[@octokit/auth-app] Retrying after 401 response to account for token replication delay (retry: ${o}, wait: ${l/1e3}s)`),await new Promise(u=>setTimeout(u,l)),Qs(e,t,r,s,o)}}var Yi="6.0.1",Xi=Ne;function Zi(e){if(!e.appId)throw new Error("[@octokit/auth-app] appId option is required");if(!Number.isFinite(+e.appId))throw new Error("[@octokit/auth-app] appId option must be a number or numeric string");if(!e.privateKey)throw new Error("[@octokit/auth-app] privateKey option is required");if("installationId"in e&&!e.installationId)throw new Error("[@octokit/auth-app] installationId is set to a falsy value");const t=Object.assign({warn:console.warn.bind(console)},e.log),r=e.request||Di.request.defaults({headers:{"user-agent":`octokit-auth-app.js/${Yi} ${(0,Ci.getUserAgent)()}`}}),s=Object.assign({request:r,cache:qi()},e,e.installationId?{installationId:Number(e.installationId)}:{},{log:t,oauthApp:(0,Ii.createOAuthAppAuth)({clientType:"github-app",clientId:e.clientId||"",clientSecret:e.clientSecret||"",request:r})});return Object.assign(Wi.bind(null,s),{hook:Qi.bind(null,s)})}const ea=pe(vn),Ge=pe(ni);async function ta(e){return{type:"unauthenticated",reason:e}}function ra(e){return e.status!==403||!e.response?!1:e.response.headers["x-ratelimit-remaining"]==="0"}var sa=/\babuse\b/i;function oa(e){return e.status!==403?!1:sa.test(e.message)}async function na(e,t,r,s){const o=t.endpoint.merge(r,s);return t(o).catch(n=>{throw n.status===404?(n.message=`Not found. May be due to lack of authentication. Reason: ${e}`,n):ra(n)?(n.message=`API rate limit exceeded. This maybe caused by the lack of authentication. Reason: ${e}`,n):oa(n)?(n.message=`You have triggered an abuse detection mechanism. This maybe caused by the lack of authentication. Reason: ${e}`,n):n.status===401?(n.message=`Unauthorized. "${o.method} ${o.url}" failed most likely due to lack of authentication. Reason: ${e}`,n):(n.status>=400&&n.status<500&&(n.message=n.message.replace(/\.?$/,`. May be caused by lack of authentication (${e}).`)),n)})}var Ys=function(t){if(!t||!t.reason)throw new Error("[@octokit/auth-unauthenticated] No reason passed to createUnauthenticatedAuth");return Object.assign(ta.bind(null,t.reason),{hook:na.bind(null,t.reason)})};const ia=Object.freeze(Object.defineProperty({__proto__:null,createUnauthenticatedAuth:Ys},Symbol.toStringTag,{value:"Module"})),Xs=pe(ia);var aa=Object.create,Et=Object.defineProperty,ca=Object.getOwnPropertyDescriptor,la=Object.getOwnPropertyNames,ua=Object.getPrototypeOf,pa=Object.prototype.hasOwnProperty,da=(e,t)=>{for(var r in t)Et(e,r,{get:t[r],enumerable:!0})},Zs=(e,t,r,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of la(t))!pa.call(e,o)&&o!==r&&Et(e,o,{get:()=>t[o],enumerable:!(s=ca(t,o))||s.enumerable});return e},ve=(e,t,r)=>(r=e!=null?aa(ua(e)):{},Zs(t||!e||!e.__esModule?Et(r,"default",{value:e,enumerable:!0}):r,e)),ha=e=>Zs(Et({},"__esModule",{value:!0}),e),eo={};da(eo,{OAuthApp:()=>Ma,createAWSLambdaAPIGatewayV2Handler:()=>Ha,createNodeMiddleware:()=>$a,createWebWorkerHandler:()=>xa,handleRequest:()=>bt,sendNodeResponse:()=>oo,unknownRouteResponse:()=>so});var Xe=ha(eo),ga=Tt,to="6.0.0";function ro(e,t,r){if(Array.isArray(t)){for(const s of t)ro(e,s,r);return}e.eventHandlers[t]||(e.eventHandlers[t]=[]),e.eventHandlers[t].push(r)}var ma=ea,fa=Ps,_a=ma.Octokit.defaults({userAgent:`octokit-oauth-app.js/${to} ${(0,fa.getUserAgent)()}`}),Ta=Ne;async function me(e,t){const{name:r,action:s}=t;if(e.eventHandlers[`${r}.${s}`])for(const o of e.eventHandlers[`${r}.${s}`])await o(t);if(e.eventHandlers[r])for(const o of e.eventHandlers[r])await o(t)}async function wa(e,t){return e.octokit.auth({type:"oauth-user",...t,async factory(r){const s=new e.Octokit({authStrategy:Ta.createOAuthUserAuth,auth:r}),o=await s.auth({type:"get"});return await me(e,{name:"token",action:"created",token:o.token,scopes:o.scopes,authentication:o,octokit:s}),s}})}var ya=ve(Ge);function Ea(e,t){const r={clientId:e.clientId,request:e.octokit.request,...t,allowSignup:e.allowSignup??t.allowSignup,redirectUrl:t.redirectUrl??e.redirectUrl,scopes:t.scopes??e.defaultScopes};return ya.getWebFlowAuthorizationUrl({clientType:e.clientType,...r})}var ba=ve(Tt);async function va(e,t){const r=await e.octokit.auth({type:"oauth-user",...t});return await me(e,{name:"token",action:"created",token:r.token,scopes:r.scopes,authentication:r,octokit:new e.Octokit({authStrategy:ba.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:r.token,scopes:r.scopes,refreshToken:r.refreshToken,expiresAt:r.expiresAt,refreshTokenExpiresAt:r.refreshTokenExpiresAt}})}),{authentication:r}}var ka=ve(Ge);async function Sa(e,t){const r=await ka.checkToken({clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t});return Object.assign(r.authentication,{type:"token",tokenType:"oauth"}),r}var Br=ve(Ge),Vr=Ne;async function Aa(e,t){const r={clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t};if(e.clientType==="oauth-app"){const n=await Br.resetToken({clientType:"oauth-app",...r}),a=Object.assign(n.authentication,{type:"token",tokenType:"oauth"});return await me(e,{name:"token",action:"reset",token:n.authentication.token,scopes:n.authentication.scopes||void 0,authentication:a,octokit:new e.Octokit({authStrategy:Vr.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:n.authentication.token,scopes:n.authentication.scopes}})}),{...n,authentication:a}}const s=await Br.resetToken({clientType:"github-app",...r}),o=Object.assign(s.authentication,{type:"token",tokenType:"oauth"});return await me(e,{name:"token",action:"reset",token:s.authentication.token,authentication:o,octokit:new e.Octokit({authStrategy:Vr.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:s.authentication.token}})}),{...s,authentication:o}}var Oa=ve(Ge),Pa=Ne;async function Ra(e,t){if(e.clientType==="oauth-app")throw new Error("[@octokit/oauth-app] app.refreshToken() is not supported for OAuth Apps");const r=await Oa.refreshToken({clientType:"github-app",clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,refreshToken:t.refreshToken}),s=Object.assign(r.authentication,{type:"token",tokenType:"oauth"});return await me(e,{name:"token",action:"refreshed",token:r.authentication.token,authentication:s,octokit:new e.Octokit({authStrategy:Pa.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:r.authentication.token}})}),{...r,authentication:s}}var Ga=ve(Ge),Fa=Ne;async function Ua(e,t){if(e.clientType==="oauth-app")throw new Error("[@octokit/oauth-app] app.scopeToken() is not supported for OAuth Apps");const r=await Ga.scopeToken({clientType:"github-app",clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t}),s=Object.assign(r.authentication,{type:"token",tokenType:"oauth"});return await me(e,{name:"token",action:"scoped",token:r.authentication.token,authentication:s,octokit:new e.Octokit({authStrategy:Fa.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:r.authentication.token}})}),{...r,authentication:s}}var Kr=ve(Ge),Ca=Xs;async function Da(e,t){const r={clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t},s=e.clientType==="oauth-app"?await Kr.deleteToken({clientType:"oauth-app",...r}):await Kr.deleteToken({clientType:"github-app",...r});return await me(e,{name:"token",action:"deleted",token:t.token,octokit:new e.Octokit({authStrategy:Ca.createUnauthenticatedAuth,auth:{reason:'Handling "token.deleted" event. The access for the token has been revoked.'}})}),s}var Jr=ve(Ge),Qr=Xs;async function Ia(e,t){const r={clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t},s=e.clientType==="oauth-app"?await Jr.deleteAuthorization({clientType:"oauth-app",...r}):await Jr.deleteAuthorization({clientType:"github-app",...r});return await me(e,{name:"token",action:"deleted",token:t.token,octokit:new e.Octokit({authStrategy:Qr.createUnauthenticatedAuth,auth:{reason:'Handling "token.deleted" event. The access for the token has been revoked.'}})}),await me(e,{name:"authorization",action:"deleted",token:t.token,octokit:new e.Octokit({authStrategy:Qr.createUnauthenticatedAuth,auth:{reason:'Handling "authorization.deleted" event. The access for the app has been revoked.'}})}),s}function so(e){return{status:404,headers:{"content-type":"application/json"},text:JSON.stringify({error:`Unknown route: ${e.method} ${e.url}`})}}async function bt(e,{pathPrefix:t="/api/github/oauth"},r){var T,_,A,R,C,P;if(r.method==="OPTIONS")return{status:200,headers:{"access-control-allow-origin":"*","access-control-allow-methods":"*","access-control-allow-headers":"Content-Type, User-Agent, Authorization"}};let{pathname:s}=new URL(r.url,"http://localhost");if(!s.startsWith(`${t}/`))return;s=s.slice(t.length+1);const o=[r.method,s].join(" "),n={getLogin:"GET login",getCallback:"GET callback",createToken:"POST token",getToken:"GET token",patchToken:"PATCH token",patchRefreshToken:"PATCH refresh-token",scopeToken:"POST token/scoped",deleteToken:"DELETE token",deleteGrant:"DELETE grant"};if(!Object.values(n).includes(o))return so(r);let a;try{const G=await r.text();a=G?JSON.parse(G):{}}catch{return{status:400,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify({error:"[@octokit/oauth-app] request error"})}}const{searchParams:l}=new URL(r.url,"http://localhost"),u=Object.fromEntries(l),f=r.headers;try{if(o===n.getLogin){const{url:w}=e.getWebFlowAuthorizationUrl({state:u.state,scopes:u.scopes?u.scopes.split(","):void 0,allowSignup:u.allowSignup?u.allowSignup==="true":void 0,redirectUrl:u.redirectUrl});return{status:302,headers:{location:w}}}if(o===n.getCallback){if(u.error)throw new Error(`[@octokit/oauth-app] ${u.error} ${u.error_description}`);if(!u.code)throw new Error('[@octokit/oauth-app] "code" parameter is required');const{authentication:{token:w}}=await e.createToken({code:u.code});return{status:200,headers:{"content-type":"text/html"},text:`<h1>Token created successfully</h1>

<p>Your token is: <strong>${w}</strong>. Copy it now as it cannot be shown again.</p>`}}if(o===n.createToken){const{code:w,redirectUrl:v}=a;if(!w)throw new Error('[@octokit/oauth-app] "code" parameter is required');const F=await e.createToken({code:w,redirectUrl:v});return delete F.authentication.clientSecret,{status:201,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(F)}}if(o===n.getToken){const w=(T=f.authorization)==null?void 0:T.substr(6);if(!w)throw new Error('[@octokit/oauth-app] "Authorization" header is required');const v=await e.checkToken({token:w});return delete v.authentication.clientSecret,{status:200,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(v)}}if(o===n.patchToken){const w=(_=f.authorization)==null?void 0:_.substr(6);if(!w)throw new Error('[@octokit/oauth-app] "Authorization" header is required');const v=await e.resetToken({token:w});return delete v.authentication.clientSecret,{status:200,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(v)}}if(o===n.patchRefreshToken){if(!((A=f.authorization)==null?void 0:A.substr(6)))throw new Error('[@octokit/oauth-app] "Authorization" header is required');const{refreshToken:v}=a;if(!v)throw new Error("[@octokit/oauth-app] refreshToken must be sent in request body");const F=await e.refreshToken({refreshToken:v});return delete F.authentication.clientSecret,{status:200,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(F)}}if(o===n.scopeToken){const w=(R=f.authorization)==null?void 0:R.substr(6);if(!w)throw new Error('[@octokit/oauth-app] "Authorization" header is required');const v=await e.scopeToken({token:w,...a});return delete v.authentication.clientSecret,{status:200,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(v)}}if(o===n.deleteToken){const w=(C=f.authorization)==null?void 0:C.substr(6);if(!w)throw new Error('[@octokit/oauth-app] "Authorization" header is required');return await e.deleteToken({token:w}),{status:204,headers:{"access-control-allow-origin":"*"}}}const G=(P=f.authorization)==null?void 0:P.substr(6);if(!G)throw new Error('[@octokit/oauth-app] "Authorization" header is required');return await e.deleteAuthorization({token:G}),{status:204,headers:{"access-control-allow-origin":"*"}}}catch(G){return{status:400,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify({error:G.message})}}}function ja(e){const{method:t,url:r,headers:s}=e;async function o(){return await new Promise((a,l)=>{let u=[];e.on("error",l).on("data",f=>u.push(f)).on("end",()=>a(Buffer.concat(u).toString()))})}return{method:t,url:r,headers:s,text:o}}function oo(e,t){t.writeHead(e.status,e.headers),t.end(e.text)}function $a(e,t={}){return async function(r,s,o){const n=await ja(r),a=await bt(e,t,n);return a?(oo(a,s),!0):(o==null||o(),!1)}}function La(e){const t=Object.fromEntries(e.headers.entries());return{method:e.method,url:e.url,headers:t,text:()=>e.text()}}function qa(e){return new Response(e.text,{status:e.status,headers:e.headers})}function xa(e,t={}){return async function(r){const s=await La(r),o=await bt(e,t,s);return o?qa(o):void 0}}function za(e){const{method:t}=e.requestContext.http;let r=e.rawPath;const{stage:s}=e.requestContext;r.startsWith("/"+s)&&(r=r.substring(s.length+1)),e.rawQueryString&&(r+="?"+e.rawQueryString);const o=e.headers;return{method:t,url:r,headers:o,text:async()=>e.body||""}}function Wa(e){return{statusCode:e.status,headers:e.headers,body:e.text}}function Ha(e,t={}){return async function(r){const s=za(r),o=await bt(e,t,s);return o?Wa(o):void 0}}var ot,Ma=(ot=class{static defaults(t){return class extends this{constructor(...s){super({...t,...s[0]})}}}constructor(t){const r=t.Octokit||_a;this.type=t.clientType||"oauth-app";const s=new r({authStrategy:ga.createOAuthAppAuth,auth:{clientType:this.type,clientId:t.clientId,clientSecret:t.clientSecret}}),o={clientType:this.type,clientId:t.clientId,clientSecret:t.clientSecret,defaultScopes:t.defaultScopes||[],allowSignup:t.allowSignup,baseUrl:t.baseUrl,redirectUrl:t.redirectUrl,log:t.log,Octokit:r,octokit:s,eventHandlers:{}};this.on=ro.bind(null,o),this.octokit=s,this.getUserOctokit=wa.bind(null,o),this.getWebFlowAuthorizationUrl=Ea.bind(null,o),this.createToken=va.bind(null,o),this.checkToken=Sa.bind(null,o),this.resetToken=Aa.bind(null,o),this.refreshToken=Ra.bind(null,o),this.scopeToken=Ua.bind(null,o),this.deleteToken=Da.bind(null,o),this.deleteAuthorization=Ia.bind(null,o)}},ot.VERSION=to,ot),Na=(e,t=1,r)=>{if(r={indent:" ",includeEmptyLines:!1,...r},typeof e!="string")throw new TypeError(`Expected \`input\` to be a \`string\`, got \`${typeof e}\``);if(typeof t!="number")throw new TypeError(`Expected \`count\` to be a \`number\`, got \`${typeof t}\``);if(typeof r.indent!="string")throw new TypeError(`Expected \`options.indent\` to be a \`string\`, got \`${typeof r.indent}\``);if(t===0)return e;const s=r.includeEmptyLines?/^/gm:/^(?!\s*$)/gm;return e.replace(s,r.indent.repeat(t))};const Ba={},Va=Object.freeze(Object.defineProperty({__proto__:null,default:Ba},Symbol.toStringTag,{value:"Module"})),Ka=pe(Va),Yr=Ka,Xr=/\s+at.*(?:\(|\s)(.*)\)?/,Ja=/^(?:(?:(?:node|(?:internal\/[\w/]*|.*node_modules\/(?:babel-polyfill|pirates)\/.*)?\w+)\.js:\d+:\d+)|native)/,Qa=typeof Yr.homedir>"u"?"":Yr.homedir();var Ya=(e,t)=>(t=Object.assign({pretty:!1},t),e.replace(/\\/g,"/").split(`
`).filter(r=>{const s=r.match(Xr);if(s===null||!s[1])return!0;const o=s[1];return o.includes(".app/Contents/Resources/electron.asar")||o.includes(".app/Contents/Resources/default_app.asar")?!1:!Ja.test(o)}).filter(r=>r.trim()!=="").map(r=>t.pretty?r.replace(Xr,(s,o)=>s.replace(o,o.replace(Qa,"~"))):r).join(`
`));const Xa=Na,Za=Ya,ec=e=>e.replace(/\s+at .*aggregate-error\/index.js:\d+:\d+\)?/g,"");class tc extends Error{constructor(t){if(!Array.isArray(t))throw new TypeError(`Expected input to be an Array, got ${typeof t}`);t=[...t].map(s=>s instanceof Error?s:s!==null&&typeof s=="object"?Object.assign(new Error(s.message),s):new Error(s));let r=t.map(s=>typeof s.stack=="string"?ec(Za(s.stack)):String(s)).join(`
`);r=`
`+Xa(r,4),super(r),this.name="AggregateError",Object.defineProperty(this,"_errors",{value:t})}*[Symbol.iterator](){for(const t of this._errors)yield t}}var rc=tc;const je=mt(rc);var $e=(e=>(e.SHA1="sha1",e.SHA256="sha256",e))($e||{}),sc=e=>e.startsWith("sha256=")?"sha256":"sha1",Xt=new TextEncoder;function oc(e){const r=e.match(/[\dA-F]{2}/gi).map(function(s){return parseInt(s,16)});return new Uint8Array(r)}function nc(e){return Array.prototype.map.call(new Uint8Array(e),t=>t.toString(16).padStart(2,"0")).join("")}function ic(e){return{[$e.SHA1]:"SHA-1",[$e.SHA256]:"SHA-256"}[e]}async function no(e,t){return crypto.subtle.importKey("raw",Xt.encode(e),{name:"HMAC",hash:{name:ic(t)}},!1,["sign","verify"])}async function ac(e,t){const{secret:r,algorithm:s}=typeof e=="object"?{secret:e.secret,algorithm:e.algorithm||$e.SHA256}:{secret:e,algorithm:$e.SHA256};if(!r||!t)throw new TypeError("[@octokit/webhooks-methods] secret & payload required for sign()");if(!Object.values($e).includes(s))throw new TypeError(`[@octokit/webhooks] Algorithm ${s} is not supported. Must be  'sha1' or 'sha256'`);const o=await crypto.subtle.sign("HMAC",await no(r,s),Xt.encode(t));return`${s}=${nc(o)}`}async function io(e,t,r){if(!e||!t||!r)throw new TypeError("[@octokit/webhooks-methods] secret, eventPayload & signature required");const s=sc(r);return await crypto.subtle.verify("HMAC",await no(e,s),oc(r.replace(`${s}=`,"")),Xt.encode(t))}var Zt=e=>({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console),...e}),cc=["branch_protection_rule","branch_protection_rule.created","branch_protection_rule.deleted","branch_protection_rule.edited","check_run","check_run.completed","check_run.created","check_run.requested_action","check_run.rerequested","check_suite","check_suite.completed","check_suite.requested","check_suite.rerequested","code_scanning_alert","code_scanning_alert.appeared_in_branch","code_scanning_alert.closed_by_user","code_scanning_alert.created","code_scanning_alert.fixed","code_scanning_alert.reopened","code_scanning_alert.reopened_by_user","commit_comment","commit_comment.created","create","delete","dependabot_alert","dependabot_alert.created","dependabot_alert.dismissed","dependabot_alert.fixed","dependabot_alert.reintroduced","dependabot_alert.reopened","deploy_key","deploy_key.created","deploy_key.deleted","deployment","deployment.created","deployment_protection_rule","deployment_protection_rule.requested","deployment_status","deployment_status.created","discussion","discussion.answered","discussion.category_changed","discussion.created","discussion.deleted","discussion.edited","discussion.labeled","discussion.locked","discussion.pinned","discussion.transferred","discussion.unanswered","discussion.unlabeled","discussion.unlocked","discussion.unpinned","discussion_comment","discussion_comment.created","discussion_comment.deleted","discussion_comment.edited","fork","github_app_authorization","github_app_authorization.revoked","gollum","installation","installation.created","installation.deleted","installation.new_permissions_accepted","installation.suspend","installation.unsuspend","installation_repositories","installation_repositories.added","installation_repositories.removed","installation_target","installation_target.renamed","issue_comment","issue_comment.created","issue_comment.deleted","issue_comment.edited","issues","issues.assigned","issues.closed","issues.deleted","issues.demilestoned","issues.edited","issues.labeled","issues.locked","issues.milestoned","issues.opened","issues.pinned","issues.reopened","issues.transferred","issues.unassigned","issues.unlabeled","issues.unlocked","issues.unpinned","label","label.created","label.deleted","label.edited","marketplace_purchase","marketplace_purchase.cancelled","marketplace_purchase.changed","marketplace_purchase.pending_change","marketplace_purchase.pending_change_cancelled","marketplace_purchase.purchased","member","member.added","member.edited","member.removed","membership","membership.added","membership.removed","merge_group","merge_group.checks_requested","meta","meta.deleted","milestone","milestone.closed","milestone.created","milestone.deleted","milestone.edited","milestone.opened","org_block","org_block.blocked","org_block.unblocked","organization","organization.deleted","organization.member_added","organization.member_invited","organization.member_removed","organization.renamed","package","package.published","package.updated","page_build","ping","project","project.closed","project.created","project.deleted","project.edited","project.reopened","project_card","project_card.converted","project_card.created","project_card.deleted","project_card.edited","project_card.moved","project_column","project_column.created","project_column.deleted","project_column.edited","project_column.moved","projects_v2_item","projects_v2_item.archived","projects_v2_item.converted","projects_v2_item.created","projects_v2_item.deleted","projects_v2_item.edited","projects_v2_item.reordered","projects_v2_item.restored","public","pull_request","pull_request.assigned","pull_request.auto_merge_disabled","pull_request.auto_merge_enabled","pull_request.closed","pull_request.converted_to_draft","pull_request.demilestoned","pull_request.dequeued","pull_request.edited","pull_request.enqueued","pull_request.labeled","pull_request.locked","pull_request.milestoned","pull_request.opened","pull_request.ready_for_review","pull_request.reopened","pull_request.review_request_removed","pull_request.review_requested","pull_request.synchronize","pull_request.unassigned","pull_request.unlabeled","pull_request.unlocked","pull_request_review","pull_request_review.dismissed","pull_request_review.edited","pull_request_review.submitted","pull_request_review_comment","pull_request_review_comment.created","pull_request_review_comment.deleted","pull_request_review_comment.edited","pull_request_review_thread","pull_request_review_thread.resolved","pull_request_review_thread.unresolved","push","registry_package","registry_package.published","registry_package.updated","release","release.created","release.deleted","release.edited","release.prereleased","release.published","release.released","release.unpublished","repository","repository.archived","repository.created","repository.deleted","repository.edited","repository.privatized","repository.publicized","repository.renamed","repository.transferred","repository.unarchived","repository_dispatch","repository_import","repository_vulnerability_alert","repository_vulnerability_alert.create","repository_vulnerability_alert.dismiss","repository_vulnerability_alert.reopen","repository_vulnerability_alert.resolve","secret_scanning_alert","secret_scanning_alert.created","secret_scanning_alert.reopened","secret_scanning_alert.resolved","secret_scanning_alert.revoked","secret_scanning_alert_location","secret_scanning_alert_location.created","security_advisory","security_advisory.performed","security_advisory.published","security_advisory.updated","security_advisory.withdrawn","sponsorship","sponsorship.cancelled","sponsorship.created","sponsorship.edited","sponsorship.pending_cancellation","sponsorship.pending_tier_change","sponsorship.tier_changed","star","star.created","star.deleted","status","team","team.added_to_repository","team.created","team.deleted","team.edited","team.removed_from_repository","team_add","watch","watch.started","workflow_dispatch","workflow_job","workflow_job.completed","workflow_job.in_progress","workflow_job.queued","workflow_job.waiting","workflow_run","workflow_run.completed","workflow_run.in_progress","workflow_run.requested"];function er(e,t,r){e.hooks[t]||(e.hooks[t]=[]),e.hooks[t].push(r)}function ao(e,t,r){if(Array.isArray(t)){t.forEach(s=>ao(e,s,r));return}if(["*","error"].includes(t)){const s=t==="*"?"any":t,o=`Using the "${t}" event with the regular Webhooks.on() function is not supported. Please use the Webhooks.on${s.charAt(0).toUpperCase()+s.slice(1)}() method instead`;throw new Error(o)}cc.includes(t)||e.log.warn(`"${t}" is not a known webhook name (https://developer.github.com/v3/activity/events/types/)`),er(e,t,r)}function lc(e,t){er(e,"*",t)}function uc(e,t){er(e,"error",t)}function Zr(e,t){let r;try{r=e(t)}catch(s){console.log('FATAL: Error occurred in "error" event handler'),console.log(s)}r&&r.catch&&r.catch(s=>{console.log('FATAL: Error occurred in "error" event handler'),console.log(s)})}function pc(e,t,r){const s=[e.hooks[r],e.hooks["*"]];return t&&s.unshift(e.hooks[`${r}.${t}`]),[].concat(...s.filter(Boolean))}function dc(e,t){const r=e.hooks.error||[];if(t instanceof Error){const a=Object.assign(new je([t]),{event:t,errors:[t]});return r.forEach(l=>Zr(l,a)),Promise.reject(a)}if(!t||!t.name)throw new je(["Event name not passed"]);if(!t.payload)throw new je(["Event payload not passed"]);const s=pc(e,"action"in t.payload?t.payload.action:null,t.name);if(s.length===0)return Promise.resolve();const o=[],n=s.map(a=>{let l=Promise.resolve(t);return e.transform&&(l=l.then(e.transform)),l.then(u=>a(u)).catch(u=>o.push(Object.assign(u,{event:t})))});return Promise.all(n).then(()=>{if(o.length===0)return;const a=new je(o);throw Object.assign(a,{event:t,errors:o}),r.forEach(l=>Zr(l,a)),a})}function co(e,t,r){if(Array.isArray(t)){t.forEach(s=>co(e,s,r));return}if(e.hooks[t]){for(let s=e.hooks[t].length-1;s>=0;s--)if(e.hooks[t][s]===r){e.hooks[t].splice(s,1);return}}}function hc(e){const t={hooks:{},log:Zt(e&&e.log)};return e&&e.transform&&(t.transform=e.transform),{on:ao.bind(null,t),onAny:lc.bind(null,t),onError:uc.bind(null,t),removeListener:co.bind(null,t),receive:dc.bind(null,t)}}async function gc(e,t){if(!await io(e.secret,t.payload,t.signature).catch(()=>!1)){const o=new Error("[@octokit/webhooks] signature does not match event payload and secret");return e.eventHandler.receive(Object.assign(o,{event:t,status:400}))}let s;try{s=JSON.parse(t.payload)}catch(o){throw o.message="Invalid JSON",o.status=400,new je([o])}return e.eventHandler.receive({id:t.id,name:t.name,payload:s})}var mc=["x-github-event","x-hub-signature-256","x-github-delivery"];function fc(e){return mc.filter(t=>!(t in e.headers))}function _c(e){return e.body?Promise.resolve(e.body):new Promise((t,r)=>{let s="";e.setEncoding("utf8"),e.on("error",o=>r(new je([o]))),e.on("data",o=>s+=o),e.on("end",()=>t(s))})}function Tc(e,t){t.writeHead(404,{"content-type":"application/json"}),t.end(JSON.stringify({error:`Unknown route: ${e.method} ${e.url}`}))}async function wc(e,t,r,s,o){let n;try{n=new URL(r.url,"http://localhost").pathname}catch{return s.writeHead(422,{"content-type":"application/json"}),s.end(JSON.stringify({error:`Request URL could not be parsed: ${r.url}`})),!0}if(n!==t.path)return o==null||o(),!1;if(r.method!=="POST")return Tc(r,s),!0;if(!r.headers["content-type"]||!r.headers["content-type"].startsWith("application/json"))return s.writeHead(415,{"content-type":"application/json",accept:"application/json"}),s.end(JSON.stringify({error:'Unsupported "Content-Type" header value. Must be "application/json"'})),!0;const a=fc(r).join(", ");if(a)return s.writeHead(400,{"content-type":"application/json"}),s.end(JSON.stringify({error:`Required headers missing: ${a}`})),!0;const l=r.headers["x-github-event"],u=r.headers["x-hub-signature-256"],f=r.headers["x-github-delivery"];t.log.debug(`${l} event received (id: ${f})`);let T=!1;const _=setTimeout(()=>{T=!0,s.statusCode=202,s.end(`still processing
`)},9e3).unref();try{const A=await _c(r);return await e.verifyAndReceive({id:f,name:l,payload:A,signature:u}),clearTimeout(_),T||s.end(`ok
`),!0}catch(A){if(clearTimeout(_),T)return!0;const R=Array.from(A)[0],C=R.message?`${R.name}: ${R.message}`:"Error: An Unspecified error occurred";return s.statusCode=typeof R.status<"u"?R.status:500,t.log.error(A),s.end(JSON.stringify({error:C})),!0}}function yc(e,{path:t="/api/github/webhooks",log:r=Zt()}={}){return wc.bind(null,e,{path:t,log:r})}var Ec=class{constructor(e){if(!e||!e.secret)throw new Error("[@octokit/webhooks] options.secret required");const t={eventHandler:hc(e),secret:e.secret,hooks:{},log:Zt(e.log)};this.sign=ac.bind(null,e.secret),this.verify=io.bind(null,e.secret),this.on=t.eventHandler.on,this.onAny=t.eventHandler.onAny,this.onError=t.eventHandler.onError,this.removeListener=t.eventHandler.removeListener,this.receive=t.eventHandler.receive,this.verifyAndReceive=gc.bind(null,t)}};function bc(e){if(!e.data)return{...e,data:[]};if(!("total_count"in e.data&&!("url"in e.data)))return e;const r=e.data.incomplete_results,s=e.data.repository_selection,o=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;const n=Object.keys(e.data)[0],a=e.data[n];return e.data=a,typeof r<"u"&&(e.data.incomplete_results=r),typeof s<"u"&&(e.data.repository_selection=s),e.data.total_count=o,e}function lo(e,t,r){const s=typeof t=="function"?t.endpoint(r):e.request.endpoint(t,r),o=typeof t=="function"?t:e.request,n=s.method,a=s.headers;let l=s.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!l)return{done:!0};try{const u=await o({method:n,url:l,headers:a}),f=bc(u);return l=((f.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:f}}catch(u){if(u.status!==409)throw u;return l="",{value:{status:200,headers:{},data:[]}}}}})}}function vc(e,t,r,s){return typeof r=="function"&&(s=r,r=void 0),uo(e,[],lo(e,t,r)[Symbol.asyncIterator](),s)}function uo(e,t,r,s){return r.next().then(o=>{if(o.done)return t;let n=!1;function a(){n=!0}return t=t.concat(s?s(o.value,a):o.value.data),n?t:uo(e,t,r,s)})}var po=Object.assign(vc,{iterator:lo}),kc="14.0.2";function Sc(e,t){return new Ec({secret:t.secret,transform:async r=>{if(!("installation"in r.payload)||typeof r.payload.installation!="object"){const n=new e.constructor({authStrategy:Ys,auth:{reason:'"installation" key missing in webhook event payload'}});return{...r,octokit:n}}const s=r.payload.installation.id,o=await e.auth({type:"installation",installationId:s,factory(n){return new n.octokit.constructor({...n.octokitOptions,authStrategy:Yt.createAppAuth,auth:{...n,installationId:s}})}});return o.hook.before("request",n=>{n.headers["x-github-delivery"]=r.id}),{...r,octokit:o}}})}async function ho(e,t){return e.octokit.auth({type:"installation",installationId:t,factory(r){const s={...r.octokitOptions,authStrategy:Yt.createAppAuth,auth:{...r,installationId:t}};return new r.octokit.constructor(s)}})}function Ac(e){return Object.assign(Oc.bind(null,e),{iterator:go.bind(null,e)})}async function Oc(e,t){const r=go(e)[Symbol.asyncIterator]();let s=await r.next();for(;!s.done;)await t(s.value),s=await r.next()}function go(e){return{async*[Symbol.asyncIterator](){const t=po.iterator(e.octokit,"GET /app/installations");for await(const{data:r}of t)for(const s of r)yield{octokit:await ho(e,s.id),installation:s}}}}function Pc(e){return Object.assign(Rc.bind(null,e),{iterator:mo.bind(null,e)})}async function Rc(e,t,r){const s=mo(e,r?t:void 0)[Symbol.asyncIterator]();let o=await s.next();for(;!o.done;)r?await r(o.value):await t(o.value),o=await s.next()}function Gc(e,t){return{async*[Symbol.asyncIterator](){yield{octokit:await e.getInstallationOctokit(t)}}}}function mo(e,t){return{async*[Symbol.asyncIterator](){const r=t?Gc(e,t.installationId):e.eachInstallation.iterator();for await(const{octokit:s}of r){const o=po.iterator(s,"GET /installation/repositories");for await(const{data:n}of o)for(const a of n)yield{octokit:s,repository:a}}}}}function es(){}function Kc(e,t={}){const r=Object.assign({debug:es,info:es,warn:console.warn.bind(console),error:console.error.bind(console)},t.log),s={pathPrefix:"/api/github",...t,log:r},o=yc(e.webhooks,{path:s.pathPrefix+"/webhooks",log:r}),n=Xe.createNodeMiddleware(e.oauth,{pathPrefix:s.pathPrefix+"/oauth"});return Fc.bind(null,s.pathPrefix,o,n)}async function Fc(e,t,r,s,o,n){const{pathname:a}=new URL(s.url,"http://localhost");return a.startsWith(`${e}/`)?(a===`${e}/webhooks`?t(s,o):a.startsWith(`${e}/oauth/`)?r(s,o):Xe.sendNodeResponse(Xe.unknownRouteResponse(s),o),!0):(n==null||n(),!1)}var nt,Uc=(nt=class{static defaults(t){return class extends this{constructor(...s){super({...t,...s[0]})}}}constructor(t){const r=t.Octokit||Vt,s=Object.assign({appId:t.appId,privateKey:t.privateKey},t.oauth?{clientId:t.oauth.clientId,clientSecret:t.oauth.clientSecret}:{});this.octokit=new r({authStrategy:Yt.createAppAuth,auth:s,log:t.log}),this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},t.log),t.webhooks?this.webhooks=Sc(this.octokit,t.webhooks):Object.defineProperty(this,"webhooks",{get(){throw new Error("[@octokit/app] webhooks option not set")}}),t.oauth?this.oauth=new Xe.OAuthApp({...t.oauth,clientType:"github-app",Octokit:r}):Object.defineProperty(this,"oauth",{get(){throw new Error("[@octokit/app] oauth.clientId / oauth.clientSecret options are not set")}}),this.getInstallationOctokit=ho.bind(null,this),this.eachInstallation=Ac(this),this.eachRepository=Pc(this)}},nt.VERSION=kc,nt),Cc="3.2.1",fo=Vt.plugin(bs,_s,In,As,Jt).defaults({userAgent:`octokit.js/${Cc}`,throttle:{onRateLimit:Dc,onSecondaryRateLimit:Ic}});function Dc(e,t,r){if(r.log.warn(`Request quota exhausted for request ${t.method} ${t.url}`),t.request.retryCount===0)return r.log.info(`Retrying after ${e} seconds!`),!0}function Ic(e,t,r){if(r.log.warn(`SecondaryRateLimit detected for request ${t.method} ${t.url}`),t.request.retryCount===0)return r.log.info(`Retrying after ${e} seconds!`),!0}var Jc=Uc.defaults({Octokit:fo}),Qc=Xe.OAuthApp.defaults({Octokit:fo});export{Jc as App,Qc as OAuthApp,fo as Octokit,ke as RequestError,Kc as createNodeMiddleware};
