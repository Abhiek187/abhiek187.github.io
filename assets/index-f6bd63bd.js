var Oo=Object.defineProperty;var Ro=(e,t,r)=>t in e?Oo(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var H=(e,t,r)=>(Ro(e,typeof t!="symbol"?t+"":t,r),r),Ut=(e,t,r)=>{if(!t.has(e))throw TypeError("Cannot "+r)};var c=(e,t,r)=>(Ut(e,t,"read from private field"),r?r.call(e):t.get(e)),F=(e,t,r)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,r)},S=(e,t,r,s)=>(Ut(e,t,"write to private field"),s?s.call(e,r):t.set(e,r),r),ht=(e,t,r,s)=>({set _(o){S(e,t,o,r)},get _(){return c(e,t,s)}}),A=(e,t,r)=>(Ut(e,t,"access private method"),r);import{g as at,c as Dt,a as ke}from"./index-881f3c13.js";function ve(){return typeof navigator=="object"&&"userAgent"in navigator?navigator.userAgent:typeof process=="object"&&"version"in process?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}const Po=Object.freeze(Object.defineProperty({__proto__:null,getUserAgent:ve},Symbol.toStringTag,{value:"Module"}));var Et={exports:{}},Go=is;function is(e,t,r,s){if(typeof r!="function")throw new Error("method for before hook must be a function");return s||(s={}),Array.isArray(t)?t.reverse().reduce(function(o,n){return is.bind(null,e,n,o,s)},r)():Promise.resolve().then(function(){return e.registry[t]?e.registry[t].reduce(function(o,n){return n.hook.bind(null,o,s)},r)():r(s)})}var Fo=Uo;function Uo(e,t,r,s){var o=s;e.registry[r]||(e.registry[r]=[]),t==="before"&&(s=function(n,a){return Promise.resolve().then(o.bind(null,a)).then(n.bind(null,a))}),t==="after"&&(s=function(n,a){var l;return Promise.resolve().then(n.bind(null,a)).then(function(p){return l=p,o(l,a)}).then(function(){return l})}),t==="error"&&(s=function(n,a){return Promise.resolve().then(n.bind(null,a)).catch(function(l){return o(l,a)})}),e.registry[r].push({hook:s,orig:o})}var Do=Io;function Io(e,t,r){if(e.registry[t]){var s=e.registry[t].map(function(o){return o.orig}).indexOf(r);s!==-1&&e.registry[t].splice(s,1)}}var as=Go,Co=Fo,jo=Do,Ur=Function.bind,Dr=Ur.bind(Ur);function cs(e,t,r){var s=Dr(jo,null).apply(null,r?[t,r]:[t]);e.api={remove:s},e.remove=s,["before","error","after","wrap"].forEach(function(o){var n=r?[t,o,r]:[t,o];e[o]=e.api[o]=Dr(Co,null).apply(null,n)})}function qo(){var e="h",t={registry:{}},r=as.bind(null,t,e);return cs(r,t,e),r}function ls(){var e={registry:{}},t=as.bind(null,e);return cs(t,e),t}var Ir=!1;function Qe(){return Ir||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),Ir=!0),ls()}Qe.Singular=qo.bind();Qe.Collection=ls.bind();Et.exports=Qe;Et.exports.Hook=Qe;Et.exports.Singular=Qe.Singular;var $o=Et.exports.Collection=Qe.Collection;/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */function Cr(e){return Object.prototype.toString.call(e)==="[object Object]"}function us(e){var t,r;return Cr(e)===!1?!1:(t=e.constructor,t===void 0?!0:(r=t.prototype,!(Cr(r)===!1||r.hasOwnProperty("isPrototypeOf")===!1)))}function Lo(e){return e?Object.keys(e).reduce((t,r)=>(t[r.toLowerCase()]=e[r],t),{}):{}}function ps(e,t){const r=Object.assign({},e);return Object.keys(t).forEach(s=>{us(t[s])?s in e?r[s]=ps(e[s],t[s]):Object.assign(r,{[s]:t[s]}):Object.assign(r,{[s]:t[s]})}),r}function jr(e){for(const t in e)e[t]===void 0&&delete e[t];return e}function xt(e,t,r){if(typeof t=="string"){let[o,n]=t.split(" ");r=Object.assign(n?{method:o,url:n}:{url:o},r)}else r=Object.assign({},t);r.headers=Lo(r.headers),jr(r),jr(r.headers);const s=ps(e||{},r);return e&&e.mediaType.previews.length&&(s.mediaType.previews=e.mediaType.previews.filter(o=>!s.mediaType.previews.includes(o)).concat(s.mediaType.previews)),s.mediaType.previews=s.mediaType.previews.map(o=>o.replace(/-preview/,"")),s}function xo(e,t){const r=/\?/.test(e)?"&":"?",s=Object.keys(t);return s.length===0?e:e+r+s.map(o=>o==="q"?"q="+t.q.split("+").map(encodeURIComponent).join("+"):`${o}=${encodeURIComponent(t[o])}`).join("&")}const Wo=/\{[^}]+\}/g;function Bo(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function Ho(e){const t=e.match(Wo);return t?t.map(Bo).reduce((r,s)=>r.concat(s),[]):[]}function qr(e,t){return Object.keys(e).filter(r=>!t.includes(r)).reduce((r,s)=>(r[s]=e[s],r),{})}function ds(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(t){return/%[0-9A-Fa-f]/.test(t)||(t=encodeURI(t).replace(/%5B/g,"[").replace(/%5D/g,"]")),t}).join("")}function We(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()})}function Xe(e,t,r){return t=e==="+"||e==="#"?ds(t):We(t),r?We(r)+"="+t:t}function xe(e){return e!=null}function It(e){return e===";"||e==="&"||e==="?"}function zo(e,t,r,s){var o=e[r],n=[];if(xe(o)&&o!=="")if(typeof o=="string"||typeof o=="number"||typeof o=="boolean")o=o.toString(),s&&s!=="*"&&(o=o.substring(0,parseInt(s,10))),n.push(Xe(t,o,It(t)?r:""));else if(s==="*")Array.isArray(o)?o.filter(xe).forEach(function(a){n.push(Xe(t,a,It(t)?r:""))}):Object.keys(o).forEach(function(a){xe(o[a])&&n.push(Xe(t,o[a],a))});else{const a=[];Array.isArray(o)?o.filter(xe).forEach(function(l){a.push(Xe(t,l))}):Object.keys(o).forEach(function(l){xe(o[l])&&(a.push(We(l)),a.push(Xe(t,o[l].toString())))}),It(t)?n.push(We(r)+"="+a.join(",")):a.length!==0&&n.push(a.join(","))}else t===";"?xe(o)&&n.push(We(r)):o===""&&(t==="&"||t==="?")?n.push(We(r)+"="):o===""&&n.push("");return n}function No(e){return{expand:Mo.bind(null,e)}}function Mo(e,t){var r=["+","#",".","/",";","?","&"];return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(s,o,n){if(o){let l="";const p=[];if(r.indexOf(o.charAt(0))!==-1&&(l=o.charAt(0),o=o.substr(1)),o.split(/,/g).forEach(function(_){var y=/([^:\*]*)(?::(\d+)|(\*))?/.exec(_);p.push(zo(t,l,y[1],y[2]||y[3]))}),l&&l!=="+"){var a=",";return l==="?"?a="&":l!=="#"&&(a=l),(p.length!==0?l:"")+p.join(a)}else return p.join(",")}else return ds(n)})}function hs(e){let t=e.method.toUpperCase(),r=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),s=Object.assign({},e.headers),o,n=qr(e,["method","baseUrl","url","headers","request","mediaType"]);const a=Ho(r);r=No(r).expand(n),/^http/.test(r)||(r=e.baseUrl+r);const l=Object.keys(e).filter(y=>a.includes(y)).concat("baseUrl"),p=qr(n,l);if(!/application\/octet-stream/i.test(s.accept)&&(e.mediaType.format&&(s.accept=s.accept.split(/,/).map(y=>y.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")),e.mediaType.previews.length)){const y=s.accept.match(/[\w-]+(?=-preview)/g)||[];s.accept=y.concat(e.mediaType.previews).map(w=>{const I=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${w}-preview${I}`}).join(",")}return["GET","HEAD"].includes(t)?r=xo(r,p):"data"in p?o=p.data:Object.keys(p).length&&(o=p),!s["content-type"]&&typeof o<"u"&&(s["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(t)&&typeof o>"u"&&(o=""),Object.assign({method:t,url:r,headers:s},typeof o<"u"?{body:o}:null,e.request?{request:e.request}:null)}function Vo(e,t,r){return hs(xt(e,t,r))}function gs(e,t){const r=xt(e,t),s=Vo.bind(null,r);return Object.assign(s,{DEFAULTS:r,defaults:gs.bind(null,r),merge:xt.bind(null,r),parse:hs})}const Ko="7.0.5",Jo=`octokit-endpoint.js/${Ko} ${ve()}`,Qo={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":Jo},mediaType:{format:"",previews:[]}},Yo=gs(null,Qo);var X=typeof globalThis<"u"&&globalThis||typeof self<"u"&&self||typeof X<"u"&&X,re={searchParams:"URLSearchParams"in X,iterable:"Symbol"in X&&"iterator"in Symbol,blob:"FileReader"in X&&"Blob"in X&&function(){try{return new Blob,!0}catch{return!1}}(),formData:"FormData"in X,arrayBuffer:"ArrayBuffer"in X};function Xo(e){return e&&DataView.prototype.isPrototypeOf(e)}if(re.arrayBuffer)var Zo=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],en=ArrayBuffer.isView||function(e){return e&&Zo.indexOf(Object.prototype.toString.call(e))>-1};function ct(e){if(typeof e!="string"&&(e=String(e)),/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(e)||e==="")throw new TypeError('Invalid character in header field name: "'+e+'"');return e.toLowerCase()}function Qt(e){return typeof e!="string"&&(e=String(e)),e}function Yt(e){var t={next:function(){var r=e.shift();return{done:r===void 0,value:r}}};return re.iterable&&(t[Symbol.iterator]=function(){return t}),t}function M(e){this.map={},e instanceof M?e.forEach(function(t,r){this.append(r,t)},this):Array.isArray(e)?e.forEach(function(t){this.append(t[0],t[1])},this):e&&Object.getOwnPropertyNames(e).forEach(function(t){this.append(t,e[t])},this)}M.prototype.append=function(e,t){e=ct(e),t=Qt(t);var r=this.map[e];this.map[e]=r?r+", "+t:t};M.prototype.delete=function(e){delete this.map[ct(e)]};M.prototype.get=function(e){return e=ct(e),this.has(e)?this.map[e]:null};M.prototype.has=function(e){return this.map.hasOwnProperty(ct(e))};M.prototype.set=function(e,t){this.map[ct(e)]=Qt(t)};M.prototype.forEach=function(e,t){for(var r in this.map)this.map.hasOwnProperty(r)&&e.call(t,this.map[r],r,this)};M.prototype.keys=function(){var e=[];return this.forEach(function(t,r){e.push(r)}),Yt(e)};M.prototype.values=function(){var e=[];return this.forEach(function(t){e.push(t)}),Yt(e)};M.prototype.entries=function(){var e=[];return this.forEach(function(t,r){e.push([r,t])}),Yt(e)};re.iterable&&(M.prototype[Symbol.iterator]=M.prototype.entries);function Ct(e){if(e.bodyUsed)return Promise.reject(new TypeError("Already read"));e.bodyUsed=!0}function fs(e){return new Promise(function(t,r){e.onload=function(){t(e.result)},e.onerror=function(){r(e.error)}})}function tn(e){var t=new FileReader,r=fs(t);return t.readAsArrayBuffer(e),r}function rn(e){var t=new FileReader,r=fs(t);return t.readAsText(e),r}function sn(e){for(var t=new Uint8Array(e),r=new Array(t.length),s=0;s<t.length;s++)r[s]=String.fromCharCode(t[s]);return r.join("")}function $r(e){if(e.slice)return e.slice(0);var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e)),t.buffer}function ms(){return this.bodyUsed=!1,this._initBody=function(e){this.bodyUsed=this.bodyUsed,this._bodyInit=e,e?typeof e=="string"?this._bodyText=e:re.blob&&Blob.prototype.isPrototypeOf(e)?this._bodyBlob=e:re.formData&&FormData.prototype.isPrototypeOf(e)?this._bodyFormData=e:re.searchParams&&URLSearchParams.prototype.isPrototypeOf(e)?this._bodyText=e.toString():re.arrayBuffer&&re.blob&&Xo(e)?(this._bodyArrayBuffer=$r(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):re.arrayBuffer&&(ArrayBuffer.prototype.isPrototypeOf(e)||en(e))?this._bodyArrayBuffer=$r(e):this._bodyText=e=Object.prototype.toString.call(e):this._bodyText="",this.headers.get("content-type")||(typeof e=="string"?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):re.searchParams&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},re.blob&&(this.blob=function(){var e=Ct(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){if(this._bodyArrayBuffer){var e=Ct(this);return e||(ArrayBuffer.isView(this._bodyArrayBuffer)?Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset,this._bodyArrayBuffer.byteOffset+this._bodyArrayBuffer.byteLength)):Promise.resolve(this._bodyArrayBuffer))}else return this.blob().then(tn)}),this.text=function(){var e=Ct(this);if(e)return e;if(this._bodyBlob)return rn(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(sn(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},re.formData&&(this.formData=function(){return this.text().then(an)}),this.json=function(){return this.text().then(JSON.parse)},this}var on=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];function nn(e){var t=e.toUpperCase();return on.indexOf(t)>-1?t:e}function $e(e,t){if(!(this instanceof $e))throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');t=t||{};var r=t.body;if(e instanceof $e){if(e.bodyUsed)throw new TypeError("Already read");this.url=e.url,this.credentials=e.credentials,t.headers||(this.headers=new M(e.headers)),this.method=e.method,this.mode=e.mode,this.signal=e.signal,!r&&e._bodyInit!=null&&(r=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e);if(this.credentials=t.credentials||this.credentials||"same-origin",(t.headers||!this.headers)&&(this.headers=new M(t.headers)),this.method=nn(t.method||this.method||"GET"),this.mode=t.mode||this.mode||null,this.signal=t.signal||this.signal,this.referrer=null,(this.method==="GET"||this.method==="HEAD")&&r)throw new TypeError("Body not allowed for GET or HEAD requests");if(this._initBody(r),(this.method==="GET"||this.method==="HEAD")&&(t.cache==="no-store"||t.cache==="no-cache")){var s=/([?&])_=[^&]*/;if(s.test(this.url))this.url=this.url.replace(s,"$1_="+new Date().getTime());else{var o=/\?/;this.url+=(o.test(this.url)?"&":"?")+"_="+new Date().getTime()}}}$e.prototype.clone=function(){return new $e(this,{body:this._bodyInit})};function an(e){var t=new FormData;return e.trim().split("&").forEach(function(r){if(r){var s=r.split("="),o=s.shift().replace(/\+/g," "),n=s.join("=").replace(/\+/g," ");t.append(decodeURIComponent(o),decodeURIComponent(n))}}),t}function cn(e){var t=new M,r=e.replace(/\r?\n[\t ]+/g," ");return r.split("\r").map(function(s){return s.indexOf(`
`)===0?s.substr(1,s.length):s}).forEach(function(s){var o=s.split(":"),n=o.shift().trim();if(n){var a=o.join(":").trim();t.append(n,a)}}),t}ms.call($e.prototype);function _e(e,t){if(!(this instanceof _e))throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');t||(t={}),this.type="default",this.status=t.status===void 0?200:t.status,this.ok=this.status>=200&&this.status<300,this.statusText=t.statusText===void 0?"":""+t.statusText,this.headers=new M(t.headers),this.url=t.url||"",this._initBody(e)}ms.call(_e.prototype);_e.prototype.clone=function(){return new _e(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new M(this.headers),url:this.url})};_e.error=function(){var e=new _e(null,{status:0,statusText:""});return e.type="error",e};var ln=[301,302,303,307,308];_e.redirect=function(e,t){if(ln.indexOf(t)===-1)throw new RangeError("Invalid status code");return new _e(null,{status:t,headers:{location:e}})};var Ue=X.DOMException;try{new Ue}catch{Ue=function(t,r){this.message=t,this.name=r;var s=Error(t);this.stack=s.stack},Ue.prototype=Object.create(Error.prototype),Ue.prototype.constructor=Ue}function _s(e,t){return new Promise(function(r,s){var o=new $e(e,t);if(o.signal&&o.signal.aborted)return s(new Ue("Aborted","AbortError"));var n=new XMLHttpRequest;function a(){n.abort()}n.onload=function(){var p={status:n.status,statusText:n.statusText,headers:cn(n.getAllResponseHeaders()||"")};p.url="responseURL"in n?n.responseURL:p.headers.get("X-Request-URL");var _="response"in n?n.response:n.responseText;setTimeout(function(){r(new _e(_,p))},0)},n.onerror=function(){setTimeout(function(){s(new TypeError("Network request failed"))},0)},n.ontimeout=function(){setTimeout(function(){s(new TypeError("Network request failed"))},0)},n.onabort=function(){setTimeout(function(){s(new Ue("Aborted","AbortError"))},0)};function l(p){try{return p===""&&X.location.href?X.location.href:p}catch{return p}}n.open(o.method,l(o.url),!0),o.credentials==="include"?n.withCredentials=!0:o.credentials==="omit"&&(n.withCredentials=!1),"responseType"in n&&(re.blob?n.responseType="blob":re.arrayBuffer&&o.headers.get("Content-Type")&&o.headers.get("Content-Type").indexOf("application/octet-stream")!==-1&&(n.responseType="arraybuffer")),t&&typeof t.headers=="object"&&!(t.headers instanceof M)?Object.getOwnPropertyNames(t.headers).forEach(function(p){n.setRequestHeader(p,Qt(t.headers[p]))}):o.headers.forEach(function(p,_){n.setRequestHeader(_,p)}),o.signal&&(o.signal.addEventListener("abort",a),n.onreadystatechange=function(){n.readyState===4&&o.signal.removeEventListener("abort",a)}),n.send(typeof o._bodyInit>"u"?null:o._bodyInit)})}_s.polyfill=!0;X.fetch||(X.fetch=_s,X.Headers=M,X.Request=$e,X.Response=_e);var un=self.fetch.bind(self);const pn=at(un);class Wt extends Error{constructor(t){super(t),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="Deprecation"}}var Xt={exports:{}},dn=ws;function ws(e,t){if(e&&t)return ws(e)(t);if(typeof e!="function")throw new TypeError("need wrapper function");return Object.keys(e).forEach(function(s){r[s]=e[s]}),r;function r(){for(var s=new Array(arguments.length),o=0;o<s.length;o++)s[o]=arguments[o];var n=e.apply(this,s),a=s[s.length-1];return typeof n=="function"&&n!==a&&Object.keys(a).forEach(function(l){n[l]=a[l]}),n}}var ys=dn;Xt.exports=ys(gt);Xt.exports.strict=ys(bs);gt.proto=gt(function(){Object.defineProperty(Function.prototype,"once",{value:function(){return gt(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return bs(this)},configurable:!0})});function gt(e){var t=function(){return t.called?t.value:(t.called=!0,t.value=e.apply(this,arguments))};return t.called=!1,t}function bs(e){var t=function(){if(t.called)throw new Error(t.onceError);return t.called=!0,t.value=e.apply(this,arguments)},r=e.name||"Function wrapped with `once`";return t.onceError=r+" shouldn't be called more than once",t.called=!1,t}var hn=Xt.exports;const Ts=at(hn),gn=Ts(e=>console.warn(e)),fn=Ts(e=>console.warn(e));class De extends Error{constructor(t,r,s){super(t),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="HttpError",this.status=r;let o;"headers"in s&&typeof s.headers<"u"&&(o=s.headers),"response"in s&&(this.response=s.response,o=s.response.headers);const n=Object.assign({},s.request);s.request.headers.authorization&&(n.headers=Object.assign({},s.request.headers,{authorization:s.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),n.url=n.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=n,Object.defineProperty(this,"code",{get(){return gn(new Wt("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),r}}),Object.defineProperty(this,"headers",{get(){return fn(new Wt("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.")),o||{}}})}}const mn=Object.freeze(Object.defineProperty({__proto__:null,RequestError:De},Symbol.toStringTag,{value:"Module"}));var _n="6.2.5";function wn(e){return e.arrayBuffer()}function Lr(e){const t=e.request&&e.request.log?e.request.log:console;(us(e.body)||Array.isArray(e.body))&&(e.body=JSON.stringify(e.body));let r={},s,o;return(e.request&&e.request.fetch||globalThis.fetch||pn)(e.url,Object.assign({method:e.method,body:e.body,headers:e.headers,redirect:e.redirect,...e.body&&{duplex:"half"}},e.request)).then(async a=>{o=a.url,s=a.status;for(const l of a.headers)r[l[0]]=l[1];if("deprecation"in r){const l=r.link&&r.link.match(/<([^>]+)>; rel="deprecation"/),p=l&&l.pop();t.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${r.sunset}${p?`. See ${p}`:""}`)}if(!(s===204||s===205)){if(e.method==="HEAD"){if(s<400)return;throw new De(a.statusText,s,{response:{url:o,status:s,headers:r,data:void 0},request:e})}if(s===304)throw new De("Not modified",s,{response:{url:o,status:s,headers:r,data:await jt(a)},request:e});if(s>=400){const l=await jt(a);throw new De(yn(l),s,{response:{url:o,status:s,headers:r,data:l},request:e})}return jt(a)}}).then(a=>({status:s,url:o,headers:r,data:a})).catch(a=>{throw a instanceof De||a.name==="AbortError"?a:new De(a.message,500,{request:e})})}async function jt(e){const t=e.headers.get("content-type");return/application\/json/.test(t)?e.json():!t||/^text\/|charset=utf-8$/.test(t)?e.text():wn(e)}function yn(e){return typeof e=="string"?e:"message"in e?Array.isArray(e.errors)?`${e.message}: ${e.errors.map(JSON.stringify).join(", ")}`:e.message:`Unknown error: ${JSON.stringify(e)}`}function Bt(e,t){const r=e.defaults(t);return Object.assign(function(o,n){const a=r.merge(o,n);if(!a.request||!a.request.hook)return Lr(r.parse(a));const l=(p,_)=>Lr(r.parse(r.merge(p,_)));return Object.assign(l,{endpoint:r,defaults:Bt.bind(null,r)}),a.request.hook(l,a)},{endpoint:r,defaults:Bt.bind(null,r)})}var Ge=Bt(Yo,{headers:{"user-agent":`octokit-request.js/${_n} ${ve()}`}});const bn=Object.freeze(Object.defineProperty({__proto__:null,request:Ge},Symbol.toStringTag,{value:"Module"}));var Tn="5.0.6";function En(e){return`Request failed due to following response errors:
`+e.errors.map(t=>` - ${t.message}`).join(`
`)}var kn=class extends Error{constructor(e,t,r){super(En(r)),this.request=e,this.headers=t,this.response=r,this.name="GraphqlResponseError",this.errors=r.errors,this.data=r.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},vn=["method","baseUrl","url","headers","request","query","mediaType"],An=["query","method","url"],xr=/\/api\/v3\/?$/;function Sn(e,t,r){if(r){if(typeof t=="string"&&"query"in r)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(const a in r)if(An.includes(a))return Promise.reject(new Error(`[@octokit/graphql] "${a}" cannot be used as variable name`))}const s=typeof t=="string"?Object.assign({query:t},r):t,o=Object.keys(s).reduce((a,l)=>vn.includes(l)?(a[l]=s[l],a):(a.variables||(a.variables={}),a.variables[l]=s[l],a),{}),n=s.baseUrl||e.endpoint.DEFAULTS.baseUrl;return xr.test(n)&&(o.url=n.replace(xr,"/api/graphql")),e(o).then(a=>{if(a.data.errors){const l={};for(const p of Object.keys(a.headers))l[p]=a.headers[p];throw new kn(o,l,a.data)}return a.data.data})}function Zt(e,t){const r=e.defaults(t);return Object.assign((o,n)=>Sn(r,o,n),{defaults:Zt.bind(null,r),endpoint:r.endpoint})}Zt(Ge,{headers:{"user-agent":`octokit-graphql.js/${Tn} ${ve()}`},method:"POST",url:"/graphql"});function On(e){return Zt(e,{method:"POST",url:"/graphql"})}const Rn=/^v1\./,Pn=/^ghs_/,Gn=/^ghu_/;async function Fn(e){const t=e.split(/\./).length===3,r=Rn.test(e)||Pn.test(e),s=Gn.test(e);return{type:"token",token:e,tokenType:t?"app":r?"installation":s?"user-to-server":"oauth"}}function Un(e){return e.split(/\./).length===3?`bearer ${e}`:`token ${e}`}async function Dn(e,t,r,s){const o=t.endpoint.merge(r,s);return o.headers.authorization=Un(e),t(o)}const In=function(t){if(!t)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if(typeof t!="string")throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return t=t.replace(/^(token|bearer) +/i,""),Object.assign(Fn.bind(null,t),{hook:Dn.bind(null,t)})};var Es="4.2.1",lt=class{static defaults(t){return class extends this{constructor(...s){const o=s[0]||{};if(typeof t=="function"){super(t(o));return}super(Object.assign({},t,o,o.userAgent&&t.userAgent?{userAgent:`${o.userAgent} ${t.userAgent}`}:null))}}}static plugin(...t){var r;const s=this.plugins;return r=class extends this{},r.plugins=s.concat(t.filter(n=>!s.includes(n))),r}constructor(t={}){const r=new $o,s={baseUrl:Ge.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},t.request,{hook:r.bind(null,"request")}),mediaType:{previews:[],format:""}};if(s.headers["user-agent"]=[t.userAgent,`octokit-core.js/${Es} ${ve()}`].filter(Boolean).join(" "),t.baseUrl&&(s.baseUrl=t.baseUrl),t.previews&&(s.mediaType.previews=t.previews),t.timeZone&&(s.headers["time-zone"]=t.timeZone),this.request=Ge.defaults(s),this.graphql=On(this.request).defaults(s),this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},t.log),this.hook=r,t.authStrategy){const{authStrategy:n,...a}=t,l=n(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:a},t.auth));r.wrap("request",l.hook),this.auth=l}else if(!t.auth)this.auth=async()=>({type:"unauthenticated"});else{const n=In(t.auth);r.wrap("request",n.hook),this.auth=n}this.constructor.plugins.forEach(n=>{Object.assign(this,n(this,t))})}};lt.VERSION=Es;lt.plugins=[];const Cn=Object.freeze(Object.defineProperty({__proto__:null,Octokit:lt},Symbol.toStringTag,{value:"Module"}));var jn="6.1.2";function qn(e){if(!e.data)return{...e,data:[]};if(!("total_count"in e.data&&!("url"in e.data)))return e;const r=e.data.incomplete_results,s=e.data.repository_selection,o=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;const n=Object.keys(e.data)[0],a=e.data[n];return e.data=a,typeof r<"u"&&(e.data.incomplete_results=r),typeof s<"u"&&(e.data.repository_selection=s),e.data.total_count=o,e}function er(e,t,r){const s=typeof t=="function"?t.endpoint(r):e.request.endpoint(t,r),o=typeof t=="function"?t:e.request,n=s.method,a=s.headers;let l=s.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!l)return{done:!0};try{const p=await o({method:n,url:l,headers:a}),_=qn(p);return l=((_.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:_}}catch(p){if(p.status!==409)throw p;return l="",{value:{status:200,headers:{},data:[]}}}}})}}function ks(e,t,r,s){return typeof r=="function"&&(s=r,r=void 0),vs(e,[],er(e,t,r)[Symbol.asyncIterator](),s)}function vs(e,t,r,s){return r.next().then(o=>{if(o.done)return t;let n=!1;function a(){n=!0}return t=t.concat(s?s(o.value,a):o.value.data),n?t:vs(e,t,r,s)})}var As=Object.assign(ks,{iterator:er});function Ss(e){return{paginate:Object.assign(ks.bind(null,e),{iterator:er.bind(null,e)})}}Ss.VERSION=jn;const $n={actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],addSelectedRepoToRequiredWorkflow:["PUT /orgs/{org}/actions/required_workflows/{required_workflow_id}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repositories/{repository_id}/environments/{environment_name}/variables"],createOrUpdateEnvironmentSecret:["PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createRequiredWorkflow:["POST /orgs/{org}/actions/required_workflows"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repositories/{repository_id}/environments/{environment_name}/variables/{name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteRequiredWorkflow:["DELETE /orgs/{org}/actions/required_workflows/{required_workflow_id}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getEnvironmentPublicKey:["GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repositories/{repository_id}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoRequiredWorkflow:["GET /repos/{org}/{repo}/actions/required_workflows/{required_workflow_id_for_repo}"],getRepoRequiredWorkflowUsage:["GET /repos/{org}/{repo}/actions/required_workflows/{required_workflow_id_for_repo}/timing"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getRequiredWorkflow:["GET /orgs/{org}/actions/required_workflows/{required_workflow_id}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repositories/{repository_id}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repositories/{repository_id}/environments/{environment_name}/variables"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoOrganizationSecrets:["GET /repos/{owner}/{repo}/actions/organization-secrets"],listRepoOrganizationVariables:["GET /repos/{owner}/{repo}/actions/organization-variables"],listRepoRequiredWorkflows:["GET /repos/{org}/{repo}/actions/required_workflows"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRequiredWorkflowRuns:["GET /repos/{owner}/{repo}/actions/required_workflows/{required_workflow_id_for_repo}/runs"],listRequiredWorkflows:["GET /orgs/{org}/actions/required_workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelectedRepositoriesRequiredWorkflow:["GET /orgs/{org}/actions/required_workflows/{required_workflow_id}/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],removeSelectedRepoFromRequiredWorkflow:["DELETE /orgs/{org}/actions/required_workflows/{required_workflow_id}/repositories/{repository_id}"],reviewCustomGatesForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedReposToRequiredWorkflow:["PUT /orgs/{org}/actions/required_workflows/{required_workflow_id}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repositories/{repository_id}/environments/{environment_name}/variables/{name}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"],updateRequiredWorkflow:["PATCH /orgs/{org}/actions/required_workflows/{required_workflow_id}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallationRequestsForAuthenticatedApp:["GET /app/installation-requests"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getDefaultSetup:["GET /repos/{owner}/{repo}/code-scanning/default-setup"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],updateDefaultSetup:["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteCodespacesBillingUsers:["DELETE /orgs/{org}/codespaces/billing/selected_users"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setCodespacesBilling:["PUT /orgs/{org}/codespaces/billing"],setCodespacesBillingUsers:["POST /orgs/{org}/codespaces/billing/selected_users"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],exportSbom:["GET /repos/{owner}/{repo}/dependency-graph/sbom"]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import"],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors"],getImportStatus:["GET /repos/{owner}/{repo}/import"],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs"],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"],updateImport:["PATCH /repos/{owner}/{repo}/import"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createWebhook:["POST /orgs/{org}/hooks"],delete:["DELETE /orgs/{org}"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}"],get:["GET /orgs/{org}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPatGrantRepositories:["GET /organizations/{org}/personal-access-tokens/{pat_id}/repositories"],listPatGrantRequestRepositories:["GET /organizations/{org}/personal-access-token-requests/{pat_request_id}/repositories"],listPatGrantRequests:["GET /organizations/{org}/personal-access-token-requests"],listPatGrants:["GET /organizations/{org}/personal-access-tokens"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers"],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}"],reviewPatGrantRequest:["POST /organizations/{org}/personal-access-token-requests/{pat_request_id}"],reviewPatGrantRequestsInBulk:["POST /organizations/{org}/personal-access-token-requests"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updatePatAccess:["POST /organizations/{org}/personal-access-tokens/{pat_id}"],updatePatAccesses:["POST /organizations/{org}/personal-access-tokens"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listDockerMigrationConflictingPackagesForAuthenticatedUser:["GET /user/docker/conflicts"],listDockerMigrationConflictingPackagesForOrganization:["GET /orgs/{org}/docker/conflicts"],listDockerMigrationConflictingPackagesForUser:["GET /users/{username}/docker/conflicts"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}"],createCard:["POST /projects/columns/{column_id}/cards"],createColumn:["POST /projects/{project_id}/columns"],createForAuthenticatedUser:["POST /user/projects"],createForOrg:["POST /orgs/{org}/projects"],createForRepo:["POST /repos/{owner}/{repo}/projects"],delete:["DELETE /projects/{project_id}"],deleteCard:["DELETE /projects/columns/cards/{card_id}"],deleteColumn:["DELETE /projects/columns/{column_id}"],get:["GET /projects/{project_id}"],getCard:["GET /projects/columns/cards/{card_id}"],getColumn:["GET /projects/columns/{column_id}"],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission"],listCards:["GET /projects/columns/{column_id}/cards"],listCollaborators:["GET /projects/{project_id}/collaborators"],listColumns:["GET /projects/{project_id}/columns"],listForOrg:["GET /orgs/{org}/projects"],listForRepo:["GET /repos/{owner}/{repo}/projects"],listForUser:["GET /users/{username}/projects"],moveCard:["POST /projects/columns/cards/{card_id}/moves"],moveColumn:["POST /projects/columns/{column_id}/moves"],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}"],update:["PATCH /projects/{project_id}"],updateCard:["PATCH /projects/columns/cards/{card_id}"],updateColumn:["PATCH /projects/columns/{column_id}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentProtectionRule:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createOrgRuleset:["POST /orgs/{org}/rulesets"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployment"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createRepoRuleset:["POST /repos/{owner}/{repo}/rulesets"],createTagProtection:["POST /repos/{owner}/{repo}/tags/protection"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteOrgRuleset:["DELETE /orgs/{org}/rulesets/{ruleset_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteRepoRuleset:["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],deleteTagProtection:["DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableDeploymentProtectionRule:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],disableLfsForRepo:["DELETE /repos/{owner}/{repo}/lfs"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enableLfsForRepo:["PUT /repos/{owner}/{repo}/lfs"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllDeploymentProtectionRules:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getBranchRules:["GET /repos/{owner}/{repo}/rules/branches/{branch}"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getCustomDeploymentProtectionRule:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getOrgRuleset:["GET /orgs/{org}/rulesets/{ruleset_id}"],getOrgRulesets:["GET /orgs/{org}/rulesets"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getRepoRuleset:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],getRepoRulesets:["GET /repos/{owner}/{repo}/rulesets"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listCustomDeploymentRuleIntegrations:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTagProtection:["GET /repos/{owner}/{repo}/tags/protection"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateOrgRuleset:["PUT /orgs/{org}/rulesets/{ruleset_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateRepoRuleset:["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},securityAdvisories:{createPrivateVulnerabilityReport:["POST /repos/{owner}/{repo}/security-advisories/reports"],createRepositoryAdvisory:["POST /repos/{owner}/{repo}/security-advisories"],getRepositoryAdvisory:["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],listRepositoryAdvisories:["GET /repos/{owner}/{repo}/security-advisories"],updateRepositoryAdvisory:["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],addSocialAccountForAuthenticatedUser:["POST /user/social_accounts"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSocialAccountForAuthenticatedUser:["DELETE /user/social_accounts"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSocialAccountsForAuthenticatedUser:["GET /user/social_accounts"],listSocialAccountsForUser:["GET /users/{username}/social_accounts"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}},Ln="7.1.2";function xn(e,t){const r={};for(const[s,o]of Object.entries(t))for(const[n,a]of Object.entries(o)){const[l,p,_]=a,[y,w]=l.split(/ /),I=Object.assign({method:y,url:w},p);r[s]||(r[s]={});const C=r[s];if(_){C[n]=Wn(e,s,n,I,_);continue}C[n]=e.request.defaults(I)}return r}function Wn(e,t,r,s,o){const n=e.request.defaults(s);function a(...l){let p=n.endpoint.merge(...l);if(o.mapToData)return p=Object.assign({},p,{data:p[o.mapToData],[o.mapToData]:void 0}),n(p);if(o.renamed){const[_,y]=o.renamed;e.log.warn(`octokit.${t}.${r}() has been renamed to octokit.${_}.${y}()`)}if(o.deprecated&&e.log.warn(o.deprecated),o.renamedParameters){const _=n.endpoint.merge(...l);for(const[y,w]of Object.entries(o.renamedParameters))y in _&&(e.log.warn(`"${y}" parameter is deprecated for "octokit.${t}.${r}()". Use "${w}" instead`),w in _||(_[w]=_[y]),delete _[y]);return n(_)}return n(...l)}return Object.assign(a,n)}function Os(e){return{rest:xn(e,$n)}}Os.VERSION=Ln;var Rs={exports:{}};(function(e,t){(function(r,s){e.exports=s()})(Dt,function(){var r=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof Dt<"u"?Dt:typeof self<"u"?self:{};function s(v){return v&&v.default||v}var o=function(v,u,i={}){var d,h,f;for(d in u)f=u[d],i[d]=(h=v[d])!=null?h:f;return i},n=function(v,u,i={}){var d,h;for(d in v)h=v[d],u[d]!==void 0&&(i[d]=h);return i},a={load:o,overwrite:n},l;l=class{constructor(u,i){this.incr=u,this.decr=i,this._first=null,this._last=null,this.length=0}push(u){var i;this.length++,typeof this.incr=="function"&&this.incr(),i={value:u,prev:this._last,next:null},this._last!=null?(this._last.next=i,this._last=i):this._first=this._last=i}shift(){var u;if(this._first!=null)return this.length--,typeof this.decr=="function"&&this.decr(),u=this._first.value,(this._first=this._first.next)!=null?this._first.prev=null:this._last=null,u}first(){if(this._first!=null)return this._first.value}getArray(){var u,i,d;for(u=this._first,d=[];u!=null;)d.push((i=u,u=u.next,i.value));return d}forEachShift(u){var i;for(i=this.shift();i!=null;)u(i),i=this.shift()}debug(){var u,i,d,h,f;for(u=this._first,f=[];u!=null;)f.push((i=u,u=u.next,{value:i.value,prev:(d=i.prev)!=null?d.value:void 0,next:(h=i.next)!=null?h.value:void 0}));return f}};var p=l,_;_=class{constructor(u){if(this.instance=u,this._events={},this.instance.on!=null||this.instance.once!=null||this.instance.removeAllListeners!=null)throw new Error("An Emitter already exists for this object");this.instance.on=(i,d)=>this._addListener(i,"many",d),this.instance.once=(i,d)=>this._addListener(i,"once",d),this.instance.removeAllListeners=(i=null)=>i!=null?delete this._events[i]:this._events={}}_addListener(u,i,d){var h;return(h=this._events)[u]==null&&(h[u]=[]),this._events[u].push({cb:d,status:i}),this.instance}listenerCount(u){return this._events[u]!=null?this._events[u].length:0}async trigger(u,...i){var d,h;try{return u!=="debug"&&this.trigger("debug",`Event triggered: ${u}`,i),this._events[u]==null?void 0:(this._events[u]=this._events[u].filter(function(f){return f.status!=="none"}),h=this._events[u].map(async f=>{var m,b;if(f.status!=="none"){f.status==="once"&&(f.status="none");try{return b=typeof f.cb=="function"?f.cb(...i):void 0,typeof(b!=null?b.then:void 0)=="function"?await b:b}catch($){return m=$,this.trigger("error",m),null}}}),(await Promise.all(h)).find(function(f){return f!=null}))}catch(f){return d=f,this.trigger("error",d),null}}};var y=_,w,I,C;w=p,I=y,C=class{constructor(u){this.Events=new I(this),this._length=0,this._lists=function(){var i,d,h;for(h=[],i=1,d=u;1<=d?i<=d:i>=d;1<=d?++i:--i)h.push(new w(()=>this.incr(),()=>this.decr()));return h}.call(this)}incr(){if(this._length++===0)return this.Events.trigger("leftzero")}decr(){if(--this._length===0)return this.Events.trigger("zero")}push(u){return this._lists[u.options.priority].push(u)}queued(u){return u!=null?this._lists[u].length:this._length}shiftAll(u){return this._lists.forEach(function(i){return i.forEachShift(u)})}getFirst(u=this._lists){var i,d,h;for(i=0,d=u.length;i<d;i++)if(h=u[i],h.length>0)return h;return[]}shiftLastFrom(u){return this.getFirst(this._lists.slice(u).reverse()).shift()}};var U=C,k;k=class extends Error{};var P=k,T,R,q,L,g;L=10,R=5,g=a,T=P,q=class{constructor(u,i,d,h,f,m,b,$){this.task=u,this.args=i,this.rejectOnDrop=f,this.Events=m,this._states=b,this.Promise=$,this.options=g.load(d,h),this.options.priority=this._sanitizePriority(this.options.priority),this.options.id===h.id&&(this.options.id=`${this.options.id}-${this._randomIndex()}`),this.promise=new this.Promise((K,Q)=>{this._resolve=K,this._reject=Q}),this.retryCount=0}_sanitizePriority(u){var i;return i=~~u!==u?R:u,i<0?0:i>L-1?L-1:i}_randomIndex(){return Math.random().toString(36).slice(2)}doDrop({error:u,message:i="This job has been dropped by Bottleneck"}={}){return this._states.remove(this.options.id)?(this.rejectOnDrop&&this._reject(u??new T(i)),this.Events.trigger("dropped",{args:this.args,options:this.options,task:this.task,promise:this.promise}),!0):!1}_assertStatus(u){var i;if(i=this._states.jobStatus(this.options.id),!(i===u||u==="DONE"&&i===null))throw new T(`Invalid job status ${i}, expected ${u}. Please open an issue at https://github.com/SGrondin/bottleneck/issues`)}doReceive(){return this._states.start(this.options.id),this.Events.trigger("received",{args:this.args,options:this.options})}doQueue(u,i){return this._assertStatus("RECEIVED"),this._states.next(this.options.id),this.Events.trigger("queued",{args:this.args,options:this.options,reachedHWM:u,blocked:i})}doRun(){return this.retryCount===0?(this._assertStatus("QUEUED"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),this.Events.trigger("scheduled",{args:this.args,options:this.options})}async doExecute(u,i,d,h){var f,m,b;this.retryCount===0?(this._assertStatus("RUNNING"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),m={args:this.args,options:this.options,retryCount:this.retryCount},this.Events.trigger("executing",m);try{if(b=await(u!=null?u.schedule(this.options,this.task,...this.args):this.task(...this.args)),i())return this.doDone(m),await h(this.options,m),this._assertStatus("DONE"),this._resolve(b)}catch($){return f=$,this._onFailure(f,m,i,d,h)}}doExpire(u,i,d){var h,f;return this._states.jobStatus(this.options.id==="RUNNING")&&this._states.next(this.options.id),this._assertStatus("EXECUTING"),f={args:this.args,options:this.options,retryCount:this.retryCount},h=new T(`This job timed out after ${this.options.expiration} ms.`),this._onFailure(h,f,u,i,d)}async _onFailure(u,i,d,h,f){var m,b;if(d())return m=await this.Events.trigger("failed",u,i),m!=null?(b=~~m,this.Events.trigger("retry",`Retrying ${this.options.id} after ${b} ms`,i),this.retryCount++,h(b)):(this.doDone(i),await f(this.options,i),this._assertStatus("DONE"),this._reject(u))}doDone(u){return this._assertStatus("EXECUTING"),this._states.next(this.options.id),this.Events.trigger("done",u)}};var O=q,E,D,j;j=a,E=P,D=class{constructor(u,i,d){this.instance=u,this.storeOptions=i,this.clientId=this.instance._randomIndex(),j.load(d,d,this),this._nextRequest=this._lastReservoirRefresh=this._lastReservoirIncrease=Date.now(),this._running=0,this._done=0,this._unblockTime=0,this.ready=this.Promise.resolve(),this.clients={},this._startHeartbeat()}_startHeartbeat(){var u;return this.heartbeat==null&&(this.storeOptions.reservoirRefreshInterval!=null&&this.storeOptions.reservoirRefreshAmount!=null||this.storeOptions.reservoirIncreaseInterval!=null&&this.storeOptions.reservoirIncreaseAmount!=null)?typeof(u=this.heartbeat=setInterval(()=>{var i,d,h,f,m;if(f=Date.now(),this.storeOptions.reservoirRefreshInterval!=null&&f>=this._lastReservoirRefresh+this.storeOptions.reservoirRefreshInterval&&(this._lastReservoirRefresh=f,this.storeOptions.reservoir=this.storeOptions.reservoirRefreshAmount,this.instance._drainAll(this.computeCapacity())),this.storeOptions.reservoirIncreaseInterval!=null&&f>=this._lastReservoirIncrease+this.storeOptions.reservoirIncreaseInterval&&({reservoirIncreaseAmount:i,reservoirIncreaseMaximum:h,reservoir:m}=this.storeOptions,this._lastReservoirIncrease=f,d=h!=null?Math.min(i,h-m):i,d>0))return this.storeOptions.reservoir+=d,this.instance._drainAll(this.computeCapacity())},this.heartbeatInterval)).unref=="function"?u.unref():void 0:clearInterval(this.heartbeat)}async __publish__(u){return await this.yieldLoop(),this.instance.Events.trigger("message",u.toString())}async __disconnect__(u){return await this.yieldLoop(),clearInterval(this.heartbeat),this.Promise.resolve()}yieldLoop(u=0){return new this.Promise(function(i,d){return setTimeout(i,u)})}computePenalty(){var u;return(u=this.storeOptions.penalty)!=null?u:15*this.storeOptions.minTime||5e3}async __updateSettings__(u){return await this.yieldLoop(),j.overwrite(u,u,this.storeOptions),this._startHeartbeat(),this.instance._drainAll(this.computeCapacity()),!0}async __running__(){return await this.yieldLoop(),this._running}async __queued__(){return await this.yieldLoop(),this.instance.queued()}async __done__(){return await this.yieldLoop(),this._done}async __groupCheck__(u){return await this.yieldLoop(),this._nextRequest+this.timeout<u}computeCapacity(){var u,i;return{maxConcurrent:u,reservoir:i}=this.storeOptions,u!=null&&i!=null?Math.min(u-this._running,i):u!=null?u-this._running:i??null}conditionsCheck(u){var i;return i=this.computeCapacity(),i==null||u<=i}async __incrementReservoir__(u){var i;return await this.yieldLoop(),i=this.storeOptions.reservoir+=u,this.instance._drainAll(this.computeCapacity()),i}async __currentReservoir__(){return await this.yieldLoop(),this.storeOptions.reservoir}isBlocked(u){return this._unblockTime>=u}check(u,i){return this.conditionsCheck(u)&&this._nextRequest-i<=0}async __check__(u){var i;return await this.yieldLoop(),i=Date.now(),this.check(u,i)}async __register__(u,i,d){var h,f;return await this.yieldLoop(),h=Date.now(),this.conditionsCheck(i)?(this._running+=i,this.storeOptions.reservoir!=null&&(this.storeOptions.reservoir-=i),f=Math.max(this._nextRequest-h,0),this._nextRequest=h+f+this.storeOptions.minTime,{success:!0,wait:f,reservoir:this.storeOptions.reservoir}):{success:!1}}strategyIsBlock(){return this.storeOptions.strategy===3}async __submit__(u,i){var d,h,f;if(await this.yieldLoop(),this.storeOptions.maxConcurrent!=null&&i>this.storeOptions.maxConcurrent)throw new E(`Impossible to add a job having a weight of ${i} to a limiter having a maxConcurrent setting of ${this.storeOptions.maxConcurrent}`);return h=Date.now(),f=this.storeOptions.highWater!=null&&u===this.storeOptions.highWater&&!this.check(i,h),d=this.strategyIsBlock()&&(f||this.isBlocked(h)),d&&(this._unblockTime=h+this.computePenalty(),this._nextRequest=this._unblockTime+this.storeOptions.minTime,this.instance._dropAllQueued()),{reachedHWM:f,blocked:d,strategy:this.storeOptions.strategy}}async __free__(u,i){return await this.yieldLoop(),this._running-=i,this._done+=i,this.instance._drainAll(this.computeCapacity()),{running:this._running}}};var ie=D,ut,Ot;ut=P,Ot=class{constructor(u){this.status=u,this._jobs={},this.counts=this.status.map(function(){return 0})}next(u){var i,d;if(i=this._jobs[u],d=i+1,i!=null&&d<this.status.length)return this.counts[i]--,this.counts[d]++,this._jobs[u]++;if(i!=null)return this.counts[i]--,delete this._jobs[u]}start(u){var i;return i=0,this._jobs[u]=i,this.counts[i]++}remove(u){var i;return i=this._jobs[u],i!=null&&(this.counts[i]--,delete this._jobs[u]),i!=null}jobStatus(u){var i;return(i=this.status[this._jobs[u]])!=null?i:null}statusJobs(u){var i,d,h,f,m;if(u!=null){if(d=this.status.indexOf(u),d<0)throw new ut(`status must be one of ${this.status.join(", ")}`);h=this._jobs,f=[];for(i in h)m=h[i],m===d&&f.push(i);return f}else return Object.keys(this._jobs)}statusCounts(){return this.counts.reduce((u,i,d)=>(u[this.status[d]]=i,u),{})}};var Le=Ot,pt,pr;pt=p,pr=class{constructor(u,i){this.schedule=this.schedule.bind(this),this.name=u,this.Promise=i,this._running=0,this._queue=new pt}isEmpty(){return this._queue.length===0}async _tryToRun(){var u,i,d,h,f,m,b;if(this._running<1&&this._queue.length>0)return this._running++,{task:b,args:u,resolve:f,reject:h}=this._queue.shift(),i=await async function(){try{return m=await b(...u),function(){return f(m)}}catch($){return d=$,function(){return h(d)}}}(),this._running--,this._tryToRun(),i()}schedule(u,...i){var d,h,f;return f=h=null,d=new this.Promise(function(m,b){return f=m,h=b}),this._queue.push({task:u,args:i,resolve:f,reject:h}),this._tryToRun(),d}};var _o=pr,dr="2.19.5",wo={version:dr},yo=Object.freeze({version:dr,default:wo}),hr=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),gr=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),bo=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),fr,mr,_r,wr,yr,dt;dt=a,fr=y,wr=hr,_r=gr,yr=bo,mr=function(){class v{constructor(i={}){this.deleteKey=this.deleteKey.bind(this),this.limiterOptions=i,dt.load(this.limiterOptions,this.defaults,this),this.Events=new fr(this),this.instances={},this.Bottleneck=Gr,this._startAutoCleanup(),this.sharedConnection=this.connection!=null,this.connection==null&&(this.limiterOptions.datastore==="redis"?this.connection=new wr(Object.assign({},this.limiterOptions,{Events:this.Events})):this.limiterOptions.datastore==="ioredis"&&(this.connection=new _r(Object.assign({},this.limiterOptions,{Events:this.Events}))))}key(i=""){var d;return(d=this.instances[i])!=null?d:(()=>{var h;return h=this.instances[i]=new this.Bottleneck(Object.assign(this.limiterOptions,{id:`${this.id}-${i}`,timeout:this.timeout,connection:this.connection})),this.Events.trigger("created",h,i),h})()}async deleteKey(i=""){var d,h;return h=this.instances[i],this.connection&&(d=await this.connection.__runCommand__(["del",...yr.allKeys(`${this.id}-${i}`)])),h!=null&&(delete this.instances[i],await h.disconnect()),h!=null||d>0}limiters(){var i,d,h,f;d=this.instances,h=[];for(i in d)f=d[i],h.push({key:i,limiter:f});return h}keys(){return Object.keys(this.instances)}async clusterKeys(){var i,d,h,f,m,b,$,K,Q;if(this.connection==null)return this.Promise.resolve(this.keys());for(b=[],i=null,Q=`b_${this.id}-`.length,d=9;i!==0;)for([K,h]=await this.connection.__runCommand__(["scan",i??0,"match",`b_${this.id}-*_settings`,"count",1e4]),i=~~K,f=0,$=h.length;f<$;f++)m=h[f],b.push(m.slice(Q,-d));return b}_startAutoCleanup(){var i;return clearInterval(this.interval),typeof(i=this.interval=setInterval(async()=>{var d,h,f,m,b,$;b=Date.now(),f=this.instances,m=[];for(h in f){$=f[h];try{await $._store.__groupCheck__(b)?m.push(this.deleteKey(h)):m.push(void 0)}catch(K){d=K,m.push($.Events.trigger("error",d))}}return m},this.timeout/2)).unref=="function"?i.unref():void 0}updateSettings(i={}){if(dt.overwrite(i,this.defaults,this),dt.overwrite(i,i,this.limiterOptions),i.timeout!=null)return this._startAutoCleanup()}disconnect(i=!0){var d;if(!this.sharedConnection)return(d=this.connection)!=null?d.disconnect(i):void 0}}return v.prototype.defaults={timeout:1e3*60*5,connection:null,Promise,id:"group-key"},v}.call(r);var To=mr,br,Tr,Er;Er=a,Tr=y,br=function(){class v{constructor(i={}){this.options=i,Er.load(this.options,this.defaults,this),this.Events=new Tr(this),this._arr=[],this._resetPromise(),this._lastFlush=Date.now()}_resetPromise(){return this._promise=new this.Promise((i,d)=>this._resolve=i)}_flush(){return clearTimeout(this._timeout),this._lastFlush=Date.now(),this._resolve(),this.Events.trigger("batch",this._arr),this._arr=[],this._resetPromise()}add(i){var d;return this._arr.push(i),d=this._promise,this._arr.length===this.maxSize?this._flush():this.maxTime!=null&&this._arr.length===1&&(this._timeout=setTimeout(()=>this._flush(),this.maxTime)),d}}return v.prototype.defaults={maxTime:null,maxSize:null,Promise},v}.call(r);var Eo=br,ko=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),vo=s(yo),kr,vr,Rt,Pt,Ar,Gt,Sr,Or,Rr,Ft,de,Pr=[].splice;Gt=10,vr=5,de=a,Sr=U,Pt=O,Ar=ie,Or=ko,Rt=y,Rr=Le,Ft=_o,kr=function(){class v{constructor(i={},...d){var h,f;this._addToQueue=this._addToQueue.bind(this),this._validateOptions(i,d),de.load(i,this.instanceDefaults,this),this._queues=new Sr(Gt),this._scheduled={},this._states=new Rr(["RECEIVED","QUEUED","RUNNING","EXECUTING"].concat(this.trackDoneStatus?["DONE"]:[])),this._limiter=null,this.Events=new Rt(this),this._submitLock=new Ft("submit",this.Promise),this._registerLock=new Ft("register",this.Promise),f=de.load(i,this.storeDefaults,{}),this._store=function(){if(this.datastore==="redis"||this.datastore==="ioredis"||this.connection!=null)return h=de.load(i,this.redisStoreDefaults,{}),new Or(this,f,h);if(this.datastore==="local")return h=de.load(i,this.localStoreDefaults,{}),new Ar(this,f,h);throw new v.prototype.BottleneckError(`Invalid datastore type: ${this.datastore}`)}.call(this),this._queues.on("leftzero",()=>{var m;return(m=this._store.heartbeat)!=null&&typeof m.ref=="function"?m.ref():void 0}),this._queues.on("zero",()=>{var m;return(m=this._store.heartbeat)!=null&&typeof m.unref=="function"?m.unref():void 0})}_validateOptions(i,d){if(!(i!=null&&typeof i=="object"&&d.length===0))throw new v.prototype.BottleneckError("Bottleneck v2 takes a single object argument. Refer to https://github.com/SGrondin/bottleneck#upgrading-to-v2 if you're upgrading from Bottleneck v1.")}ready(){return this._store.ready}clients(){return this._store.clients}channel(){return`b_${this.id}`}channel_client(){return`b_${this.id}_${this._store.clientId}`}publish(i){return this._store.__publish__(i)}disconnect(i=!0){return this._store.__disconnect__(i)}chain(i){return this._limiter=i,this}queued(i){return this._queues.queued(i)}clusterQueued(){return this._store.__queued__()}empty(){return this.queued()===0&&this._submitLock.isEmpty()}running(){return this._store.__running__()}done(){return this._store.__done__()}jobStatus(i){return this._states.jobStatus(i)}jobs(i){return this._states.statusJobs(i)}counts(){return this._states.statusCounts()}_randomIndex(){return Math.random().toString(36).slice(2)}check(i=1){return this._store.__check__(i)}_clearGlobalState(i){return this._scheduled[i]!=null?(clearTimeout(this._scheduled[i].expiration),delete this._scheduled[i],!0):!1}async _free(i,d,h,f){var m,b;try{if({running:b}=await this._store.__free__(i,h.weight),this.Events.trigger("debug",`Freed ${h.id}`,f),b===0&&this.empty())return this.Events.trigger("idle")}catch($){return m=$,this.Events.trigger("error",m)}}_run(i,d,h){var f,m,b;return d.doRun(),f=this._clearGlobalState.bind(this,i),b=this._run.bind(this,i,d),m=this._free.bind(this,i,d),this._scheduled[i]={timeout:setTimeout(()=>d.doExecute(this._limiter,f,b,m),h),expiration:d.options.expiration!=null?setTimeout(function(){return d.doExpire(f,b,m)},h+d.options.expiration):void 0,job:d}}_drainOne(i){return this._registerLock.schedule(()=>{var d,h,f,m,b;return this.queued()===0?this.Promise.resolve(null):(b=this._queues.getFirst(),{options:m,args:d}=f=b.first(),i!=null&&m.weight>i?this.Promise.resolve(null):(this.Events.trigger("debug",`Draining ${m.id}`,{args:d,options:m}),h=this._randomIndex(),this._store.__register__(h,m.weight,m.expiration).then(({success:$,wait:K,reservoir:Q})=>{var Ye;return this.Events.trigger("debug",`Drained ${m.id}`,{success:$,args:d,options:m}),$?(b.shift(),Ye=this.empty(),Ye&&this.Events.trigger("empty"),Q===0&&this.Events.trigger("depleted",Ye),this._run(h,f,K),this.Promise.resolve(m.weight)):this.Promise.resolve(null)})))})}_drainAll(i,d=0){return this._drainOne(i).then(h=>{var f;return h!=null?(f=i!=null?i-h:i,this._drainAll(f,d+h)):this.Promise.resolve(d)}).catch(h=>this.Events.trigger("error",h))}_dropAllQueued(i){return this._queues.shiftAll(function(d){return d.doDrop({message:i})})}stop(i={}){var d,h;return i=de.load(i,this.stopDefaults),h=f=>{var m;return m=()=>{var b;return b=this._states.counts,b[0]+b[1]+b[2]+b[3]===f},new this.Promise((b,$)=>m()?b():this.on("done",()=>{if(m())return this.removeAllListeners("done"),b()}))},d=i.dropWaitingJobs?(this._run=function(f,m){return m.doDrop({message:i.dropErrorMessage})},this._drainOne=()=>this.Promise.resolve(null),this._registerLock.schedule(()=>this._submitLock.schedule(()=>{var f,m,b;m=this._scheduled;for(f in m)b=m[f],this.jobStatus(b.job.options.id)==="RUNNING"&&(clearTimeout(b.timeout),clearTimeout(b.expiration),b.job.doDrop({message:i.dropErrorMessage}));return this._dropAllQueued(i.dropErrorMessage),h(0)}))):this.schedule({priority:Gt-1,weight:0},()=>h(1)),this._receive=function(f){return f._reject(new v.prototype.BottleneckError(i.enqueueErrorMessage))},this.stop=()=>this.Promise.reject(new v.prototype.BottleneckError("stop() has already been called")),d}async _addToQueue(i){var d,h,f,m,b,$,K;({args:d,options:m}=i);try{({reachedHWM:b,blocked:h,strategy:K}=await this._store.__submit__(this.queued(),m.weight))}catch(Q){return f=Q,this.Events.trigger("debug",`Could not queue ${m.id}`,{args:d,options:m,error:f}),i.doDrop({error:f}),!1}return h?(i.doDrop(),!0):b&&($=K===v.prototype.strategy.LEAK?this._queues.shiftLastFrom(m.priority):K===v.prototype.strategy.OVERFLOW_PRIORITY?this._queues.shiftLastFrom(m.priority+1):K===v.prototype.strategy.OVERFLOW?i:void 0,$!=null&&$.doDrop(),$==null||K===v.prototype.strategy.OVERFLOW)?($==null&&i.doDrop(),b):(i.doQueue(b,h),this._queues.push(i),await this._drainAll(),b)}_receive(i){return this._states.jobStatus(i.options.id)!=null?(i._reject(new v.prototype.BottleneckError(`A job with the same id already exists (id=${i.options.id})`)),!1):(i.doReceive(),this._submitLock.schedule(this._addToQueue,i))}submit(...i){var d,h,f,m,b,$,K;return typeof i[0]=="function"?(b=i,[h,...i]=b,[d]=Pr.call(i,-1),m=de.load({},this.jobDefaults)):($=i,[m,h,...i]=$,[d]=Pr.call(i,-1),m=de.load(m,this.jobDefaults)),K=(...Q)=>new this.Promise(function(Ye,So){return h(...Q,function(...Fr){return(Fr[0]!=null?So:Ye)(Fr)})}),f=new Pt(K,i,m,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),f.promise.then(function(Q){return typeof d=="function"?d(...Q):void 0}).catch(function(Q){return Array.isArray(Q)?typeof d=="function"?d(...Q):void 0:typeof d=="function"?d(Q):void 0}),this._receive(f)}schedule(...i){var d,h,f;return typeof i[0]=="function"?([f,...i]=i,h={}):[h,f,...i]=i,d=new Pt(f,i,h,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),this._receive(d),d.promise}wrap(i){var d,h;return d=this.schedule.bind(this),h=function(...f){return d(i.bind(this),...f)},h.withOptions=function(f,...m){return d(f,i,...m)},h}async updateSettings(i={}){return await this._store.__updateSettings__(de.overwrite(i,this.storeDefaults)),de.overwrite(i,this.instanceDefaults,this),this}currentReservoir(){return this._store.__currentReservoir__()}incrementReservoir(i=0){return this._store.__incrementReservoir__(i)}}return v.default=v,v.Events=Rt,v.version=v.prototype.version=vo.version,v.strategy=v.prototype.strategy={LEAK:1,OVERFLOW:2,OVERFLOW_PRIORITY:4,BLOCK:3},v.BottleneckError=v.prototype.BottleneckError=P,v.Group=v.prototype.Group=To,v.RedisConnection=v.prototype.RedisConnection=hr,v.IORedisConnection=v.prototype.IORedisConnection=gr,v.Batcher=v.prototype.Batcher=Eo,v.prototype.jobDefaults={priority:vr,weight:1,expiration:null,id:"<no-id>"},v.prototype.storeDefaults={maxConcurrent:null,minTime:0,highWater:null,strategy:v.prototype.strategy.LEAK,penalty:null,reservoir:null,reservoirRefreshInterval:null,reservoirRefreshAmount:null,reservoirIncreaseInterval:null,reservoirIncreaseAmount:null,reservoirIncreaseMaximum:null},v.prototype.localStoreDefaults={Promise,timeout:null,heartbeatInterval:250},v.prototype.redisStoreDefaults={Promise,timeout:null,heartbeatInterval:5e3,clientTimeout:1e4,Redis:null,clientOptions:{},clusterNodes:null,clearDatastore:!1,connection:null},v.prototype.instanceDefaults={datastore:"local",connection:null,id:"<no-id>",rejectOnDrop:!0,trackDoneStatus:!1,Promise},v.prototype.stopDefaults={enqueueErrorMessage:"This limiter has been stopped and cannot accept new jobs.",dropWaitingJobs:!0,dropErrorMessage:"This limiter has been stopped."},v}.call(r);var Gr=kr,Ao=Gr;return Ao})})(Rs);var Bn=Rs.exports;const Ps=at(Bn);async function Gs(e,t,r,s){if(!r.request||!r.request.request)throw r;if(r.status>=400&&!e.doNotRetry.includes(r.status)){const o=s.request.retries!=null?s.request.retries:e.retries,n=Math.pow((s.request.retryCount||0)+1,2);throw t.retry.retryRequest(r,o,n)}throw r}async function Hn(e,t,r,s){const o=new Ps;return o.on("failed",function(n,a){const l=~~n.request.request.retries,p=~~n.request.request.retryAfter;if(s.request.retryCount=a.retryCount+1,l>a.retryCount)return p*e.retryAfterBaseValue}),o.schedule(zn.bind(null,e,t,r),s)}async function zn(e,t,r,s){const o=await r(r,s);if(o.data&&o.data.errors&&/Something went wrong while executing your query/.test(o.data.errors[0].message)){const n=new De(o.data.errors[0].message,500,{request:s,response:o});return Gs(e,t,n,s)}return o}const Nn="4.1.3";function Fs(e,t){const r=Object.assign({enabled:!0,retryAfterBaseValue:1e3,doNotRetry:[400,401,403,404,422],retries:3},t.retry);return r.enabled&&(e.hook.error("request",Gs.bind(null,r,e)),e.hook.wrap("request",Hn.bind(null,r,e))),{retry:{retryRequest:(s,o,n)=>(s.request.request=Object.assign({},s.request.request,{retries:o,retryAfter:n}),s)}}}Fs.VERSION=Nn;const Mn="5.2.3",qt=()=>Promise.resolve();function Vn(e,t,r){return e.retryLimiter.schedule(Kn,e,t,r)}async function Kn(e,t,r){const s=r.method!=="GET"&&r.method!=="HEAD",{pathname:o}=new URL(r.url,"http://github.test"),n=r.method==="GET"&&o.startsWith("/search/"),a=o.startsWith("/graphql"),p=~~t.retryCount>0?{priority:0,weight:0}:{};e.clustering&&(p.expiration=1e3*60),(s||a)&&await e.write.key(e.id).schedule(p,qt),s&&e.triggersNotification(o)&&await e.notifications.key(e.id).schedule(p,qt),n&&await e.search.key(e.id).schedule(p,qt);const _=e.global.key(e.id).schedule(p,t,r);if(a){const y=await _;if(y.data.errors!=null&&y.data.errors.some(w=>w.type==="RATE_LIMITED"))throw Object.assign(new Error("GraphQL Rate Limit Exceeded"),{response:y,data:y.data})}return _}var Jn=["/orgs/{org}/invitations","/orgs/{org}/invitations/{invitation_id}","/orgs/{org}/teams/{team_slug}/discussions","/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments","/repos/{owner}/{repo}/collaborators/{username}","/repos/{owner}/{repo}/commits/{commit_sha}/comments","/repos/{owner}/{repo}/issues","/repos/{owner}/{repo}/issues/{issue_number}/comments","/repos/{owner}/{repo}/pulls","/repos/{owner}/{repo}/pulls/{pull_number}/comments","/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies","/repos/{owner}/{repo}/pulls/{pull_number}/merge","/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers","/repos/{owner}/{repo}/pulls/{pull_number}/reviews","/repos/{owner}/{repo}/releases","/teams/{team_id}/discussions","/teams/{team_id}/discussions/{discussion_number}/comments"];function Qn(e){const r=`^(?:${e.map(s=>s.split("/").map(o=>o.startsWith("{")?"(?:.+?)":o).join("/")).map(s=>`(?:${s})`).join("|")})[^/]*$`;return new RegExp(r,"i")}const Wr=Qn(Jn),Us=Wr.test.bind(Wr),Be={},Yn=function(e,t){Be.global=new e.Group({id:"octokit-global",maxConcurrent:10,...t}),Be.search=new e.Group({id:"octokit-search",maxConcurrent:1,minTime:2e3,...t}),Be.write=new e.Group({id:"octokit-write",maxConcurrent:1,minTime:1e3,...t}),Be.notifications=new e.Group({id:"octokit-notifications",maxConcurrent:1,minTime:3e3,...t})};function tr(e,t){const{enabled:r=!0,Bottleneck:s=Ps,id:o="no-id",timeout:n=1e3*60*2,connection:a}=t.throttle||{};if(!r)return{};const l={connection:a,timeout:n};Be.global==null&&Yn(s,l),t.throttle&&t.throttle.minimalSecondaryRateRetryAfter&&(e.log.warn("[@octokit/plugin-throttling] `options.throttle.minimalSecondaryRateRetryAfter` is deprecated, please use `options.throttle.fallbackSecondaryRateRetryAfter` instead"),t.throttle.fallbackSecondaryRateRetryAfter=t.throttle.minimalSecondaryRateRetryAfter,delete t.throttle.minimalSecondaryRateRetryAfter),t.throttle&&t.throttle.onAbuseLimit&&(e.log.warn("[@octokit/plugin-throttling] `onAbuseLimit()` is deprecated and will be removed in a future release of `@octokit/plugin-throttling`, please use the `onSecondaryRateLimit` handler instead"),t.throttle.onSecondaryRateLimit=t.throttle.onAbuseLimit,delete t.throttle.onAbuseLimit);const p=Object.assign({clustering:a!=null,triggersNotification:Us,fallbackSecondaryRateRetryAfter:60,retryAfterBaseValue:1e3,retryLimiter:new s,id:o,...Be},t.throttle);if(typeof p.onSecondaryRateLimit!="function"||typeof p.onRateLimit!="function")throw new Error(`octokit/plugin-throttling error:
        You must pass the onSecondaryRateLimit and onRateLimit error handlers.
        See https://octokit.github.io/rest.js/#throttling

        const octokit = new Octokit({
          throttle: {
            onSecondaryRateLimit: (retryAfter, options) => {/* ... */},
            onRateLimit: (retryAfter, options) => {/* ... */}
          }
        })
    `);const _={},y=new s.Events(_);return _.on("secondary-limit",p.onSecondaryRateLimit),_.on("rate-limit",p.onRateLimit),_.on("error",w=>e.log.warn("Error in throttling-plugin limit handler",w)),p.retryLimiter.on("failed",async function(w,I){const[C,U,k]=I.args,{pathname:P}=new URL(k.url,"http://github.test");if(!(P.startsWith("/graphql")&&w.status!==401||w.status===403))return;const R=~~U.retryCount;U.retryCount=R,k.request.retryCount=R;const{wantRetry:q,retryAfter:L=0}=await async function(){if(/\bsecondary rate\b/i.test(w.message)){const g=Number(w.response.headers["retry-after"])||C.fallbackSecondaryRateRetryAfter;return{wantRetry:await y.trigger("secondary-limit",g,k,e,R),retryAfter:g}}if(w.response.headers!=null&&w.response.headers["x-ratelimit-remaining"]==="0"){const g=new Date(~~w.response.headers["x-ratelimit-reset"]*1e3).getTime(),O=Math.max(Math.ceil((g-Date.now())/1e3),0);return{wantRetry:await y.trigger("rate-limit",O,k,e,R),retryAfter:O}}return{}}();if(q)return U.retryCount++,L*C.retryAfterBaseValue}),e.hook.wrap("request",Vn.bind(null,p)),{}}tr.VERSION=Mn;tr.triggersNotification=Us;var $t,Br;function Ds(){return Br||(Br=1,$t=function(t){return btoa(t)}),$t}var Xn=Ds();const rr=at(Xn);var ee={};function Zn(e){const t=e.clientType||"oauth-app",r=e.baseUrl||"https://github.com",s={clientType:t,allowSignup:e.allowSignup!==!1,clientId:e.clientId,login:e.login||null,redirectUrl:e.redirectUrl||null,state:e.state||Math.random().toString(36).substr(2),url:""};if(t==="oauth-app"){const o="scopes"in e?e.scopes:[];s.scopes=typeof o=="string"?o.split(/[,\s]+/).filter(Boolean):o}return s.url=ei(`${r}/login/oauth/authorize`,s),s}function ei(e,t){const r={allowSignup:"allow_signup",clientId:"client_id",login:"login",redirectUrl:"redirect_uri",scopes:"scope",state:"state"};let s=e;return Object.keys(r).filter(o=>t[o]!==null).filter(o=>o!=="scopes"?!0:t.clientType==="github-app"?!1:!Array.isArray(t[o])||t[o].length>0).map(o=>[r[o],`${t[o]}`]).forEach(([o,n],a)=>{s+=a===0?"?":"&",s+=`${o}=${encodeURIComponent(n)}`}),s}const ti=Object.freeze(Object.defineProperty({__proto__:null,oauthAuthorizationUrl:Zn},Symbol.toStringTag,{value:"Module"})),ri=ke(ti),si=ke(bn),oi=ke(mn);var Hr;function Fe(){if(Hr)return ee;Hr=1,Object.defineProperty(ee,"__esModule",{value:!0});function e(g){return g&&typeof g=="object"&&"default"in g?g.default:g}var t=ri,r=si,s=oi,o=e(Ds());const n="2.0.5";function a(g){const O=g.endpoint.DEFAULTS;return/^https:\/\/(api\.)?github\.com$/.test(O.baseUrl)?"https://github.com":O.baseUrl.replace("/api/v3","")}async function l(g,O,E){const D={baseUrl:a(g),headers:{accept:"application/json"},...E},j=await g(O,D);if("error"in j.data){const ie=new s.RequestError(`${j.data.error_description} (${j.data.error}, ${j.data.error_uri})`,400,{request:g.endpoint.merge(O,D),headers:j.headers});throw ie.response=j,ie}return j}function p({request:g=r.request,...O}){const E=a(g);return t.oauthAuthorizationUrl({...O,baseUrl:E})}async function _(g){const O=g.request||r.request,E=await l(O,"POST /login/oauth/access_token",{client_id:g.clientId,client_secret:g.clientSecret,code:g.code,redirect_uri:g.redirectUrl}),D={clientType:g.clientType,clientId:g.clientId,clientSecret:g.clientSecret,token:E.data.access_token,scopes:E.data.scope.split(/\s+/).filter(Boolean)};if(g.clientType==="github-app"){if("refresh_token"in E.data){const j=new Date(E.headers.date).getTime();D.refreshToken=E.data.refresh_token,D.expiresAt=y(j,E.data.expires_in),D.refreshTokenExpiresAt=y(j,E.data.refresh_token_expires_in)}delete D.scopes}return{...E,authentication:D}}function y(g,O){return new Date(g+O*1e3).toISOString()}async function w(g){const O=g.request||r.request,E={client_id:g.clientId};return"scopes"in g&&Array.isArray(g.scopes)&&(E.scope=g.scopes.join(" ")),l(O,"POST /login/device/code",E)}async function I(g){const O=g.request||r.request,E=await l(O,"POST /login/oauth/access_token",{client_id:g.clientId,device_code:g.code,grant_type:"urn:ietf:params:oauth:grant-type:device_code"}),D={clientType:g.clientType,clientId:g.clientId,token:E.data.access_token,scopes:E.data.scope.split(/\s+/).filter(Boolean)};if("clientSecret"in g&&(D.clientSecret=g.clientSecret),g.clientType==="github-app"){if("refresh_token"in E.data){const j=new Date(E.headers.date).getTime();D.refreshToken=E.data.refresh_token,D.expiresAt=C(j,E.data.expires_in),D.refreshTokenExpiresAt=C(j,E.data.refresh_token_expires_in)}delete D.scopes}return{...E,authentication:D}}function C(g,O){return new Date(g+O*1e3).toISOString()}async function U(g){const E=await(g.request||r.request)("POST /applications/{client_id}/token",{headers:{authorization:`basic ${o(`${g.clientId}:${g.clientSecret}`)}`},client_id:g.clientId,access_token:g.token}),D={clientType:g.clientType,clientId:g.clientId,clientSecret:g.clientSecret,token:g.token,scopes:E.data.scopes};return E.data.expires_at&&(D.expiresAt=E.data.expires_at),g.clientType==="github-app"&&delete D.scopes,{...E,authentication:D}}async function k(g){const O=g.request||r.request,E=await l(O,"POST /login/oauth/access_token",{client_id:g.clientId,client_secret:g.clientSecret,grant_type:"refresh_token",refresh_token:g.refreshToken}),D=new Date(E.headers.date).getTime(),j={clientType:"github-app",clientId:g.clientId,clientSecret:g.clientSecret,token:E.data.access_token,refreshToken:E.data.refresh_token,expiresAt:P(D,E.data.expires_in),refreshTokenExpiresAt:P(D,E.data.refresh_token_expires_in)};return{...E,authentication:j}}function P(g,O){return new Date(g+O*1e3).toISOString()}async function T(g){const{request:O,clientType:E,clientId:D,clientSecret:j,token:ie,...ut}=g,Le=await(O||r.request)("POST /applications/{client_id}/token/scoped",{headers:{authorization:`basic ${o(`${D}:${j}`)}`},client_id:D,access_token:ie,...ut}),pt=Object.assign({clientType:E,clientId:D,clientSecret:j,token:Le.data.token},Le.data.expires_at?{expiresAt:Le.data.expires_at}:{});return{...Le,authentication:pt}}async function R(g){const O=g.request||r.request,E=o(`${g.clientId}:${g.clientSecret}`),D=await O("PATCH /applications/{client_id}/token",{headers:{authorization:`basic ${E}`},client_id:g.clientId,access_token:g.token}),j={clientType:g.clientType,clientId:g.clientId,clientSecret:g.clientSecret,token:D.data.token,scopes:D.data.scopes};return D.data.expires_at&&(j.expiresAt=D.data.expires_at),g.clientType==="github-app"&&delete j.scopes,{...D,authentication:j}}async function q(g){const O=g.request||r.request,E=o(`${g.clientId}:${g.clientSecret}`);return O("DELETE /applications/{client_id}/token",{headers:{authorization:`basic ${E}`},client_id:g.clientId,access_token:g.token})}async function L(g){const O=g.request||r.request,E=o(`${g.clientId}:${g.clientSecret}`);return O("DELETE /applications/{client_id}/grant",{headers:{authorization:`basic ${E}`},client_id:g.clientId,access_token:g.token})}return ee.VERSION=n,ee.checkToken=U,ee.createDeviceCode=w,ee.deleteAuthorization=L,ee.deleteToken=q,ee.exchangeDeviceCode=I,ee.exchangeWebFlowCode=_,ee.getWebFlowAuthorizationUrl=p,ee.refreshToken=k,ee.resetToken=R,ee.scopeToken=T,ee}var Te=Fe();async function Is(e,t){const r=ni(e,t.auth);if(r)return r;const{data:s}=await Te.createDeviceCode({clientType:e.clientType,clientId:e.clientId,request:t.request||e.request,scopes:t.auth.scopes||e.scopes});await e.onVerification(s);const o=await Ht(t.request||e.request,e.clientId,e.clientType,s);return e.authentication=o,o}function ni(e,t){if(t.refresh===!0||!e.authentication)return!1;if(e.clientType==="github-app")return e.authentication;const r=e.authentication,s=("scopes"in t&&t.scopes||e.scopes).join(" "),o=r.scopes.join(" ");return s===o?r:!1}async function zr(e){await new Promise(t=>setTimeout(t,e*1e3))}async function Ht(e,t,r,s){try{const o={clientId:t,request:e,code:s.device_code},{authentication:n}=r==="oauth-app"?await Te.exchangeDeviceCode({...o,clientType:"oauth-app"}):await Te.exchangeDeviceCode({...o,clientType:"github-app"});return{type:"token",tokenType:"oauth",...n}}catch(o){if(!o.response)throw o;const n=o.response.data.error;if(n==="authorization_pending")return await zr(s.interval),Ht(e,t,r,s);if(n==="slow_down")return await zr(s.interval+5),Ht(e,t,r,s);throw o}}async function ii(e,t){return Is(e,{auth:t})}async function ai(e,t,r,s){let o=t.endpoint.merge(r,s);if(/\/login\/(oauth\/access_token|device\/code)$/.test(o.url))return t(o);const{token:n}=await Is(e,{request:t,auth:{type:"oauth"}});return o.headers.authorization=`token ${n}`,t(o)}const ci="4.0.4";function li(e){const t=e.request||Ge.defaults({headers:{"user-agent":`octokit-auth-oauth-device.js/${ci} ${ve()}`}}),{request:r=t,...s}=e,o=e.clientType==="github-app"?{...s,clientType:"github-app",request:r}:{...s,clientType:"oauth-app",request:r,scopes:e.scopes||[]};if(!e.clientId)throw new Error('[@octokit/auth-oauth-device] "clientId" option must be set (https://github.com/octokit/auth-oauth-device.js#usage)');if(!e.onVerification)throw new Error('[@octokit/auth-oauth-device] "onVerification" option must be a function (https://github.com/octokit/auth-oauth-device.js#usage)');return Object.assign(ii.bind(null,o),{hook:ai.bind(null,o)})}const Cs="2.1.1";async function Nr(e){if("code"in e.strategyOptions){const{authentication:t}=await Te.exchangeWebFlowCode({clientId:e.clientId,clientSecret:e.clientSecret,clientType:e.clientType,onTokenCreated:e.onTokenCreated,...e.strategyOptions,request:e.request});return{type:"token",tokenType:"oauth",...t}}if("onVerification"in e.strategyOptions){const r=await li({clientType:e.clientType,clientId:e.clientId,onTokenCreated:e.onTokenCreated,...e.strategyOptions,request:e.request})({type:"oauth"});return{clientSecret:e.clientSecret,...r}}if("token"in e.strategyOptions)return{type:"token",tokenType:"oauth",clientId:e.clientId,clientSecret:e.clientSecret,clientType:e.clientType,onTokenCreated:e.onTokenCreated,...e.strategyOptions};throw new Error("[@octokit/auth-oauth-user] Invalid strategy options")}async function zt(e,t={}){var s,o;if(e.authentication||(e.authentication=e.clientType==="oauth-app"?await Nr(e):await Nr(e)),e.authentication.invalid)throw new Error("[@octokit/auth-oauth-user] Token is invalid");const r=e.authentication;if("expiresAt"in r&&(t.type==="refresh"||new Date(r.expiresAt)<new Date)){const{authentication:n}=await Te.refreshToken({clientType:"github-app",clientId:e.clientId,clientSecret:e.clientSecret,refreshToken:r.refreshToken,request:e.request});e.authentication={tokenType:"oauth",type:"token",...n}}if(t.type==="refresh"){if(e.clientType==="oauth-app")throw new Error("[@octokit/auth-oauth-user] OAuth Apps do not support expiring tokens");if(!r.hasOwnProperty("expiresAt"))throw new Error("[@octokit/auth-oauth-user] Refresh token missing");await((s=e.onTokenCreated)==null?void 0:s.call(e,e.authentication,{type:t.type}))}if(t.type==="check"||t.type==="reset"){const n=t.type==="check"?Te.checkToken:Te.resetToken;try{const{authentication:a}=await n({clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:e.authentication.token,request:e.request});return e.authentication={tokenType:"oauth",type:"token",...a},t.type==="reset"&&await((o=e.onTokenCreated)==null?void 0:o.call(e,e.authentication,{type:t.type})),e.authentication}catch(a){throw a.status===404&&(a.message="[@octokit/auth-oauth-user] Token is invalid",e.authentication.invalid=!0),a}}if(t.type==="delete"||t.type==="deleteAuthorization"){const n=t.type==="delete"?Te.deleteToken:Te.deleteAuthorization;try{await n({clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:e.authentication.token,request:e.request})}catch(a){if(a.status!==404)throw a}return e.authentication.invalid=!0,e.authentication}return e.authentication}const ui=/\/applications\/[^/]+\/(token|grant)s?/;function kt(e){return e&&ui.test(e)}async function pi(e,t,r,s={}){const o=t.endpoint.merge(r,s);if(/\/login\/(oauth\/access_token|device\/code)$/.test(o.url))return t(o);if(kt(o.url)){const a=rr(`${e.clientId}:${e.clientSecret}`);return o.headers.authorization=`basic ${a}`,t(o)}const{token:n}=e.clientType==="oauth-app"?await zt({...e,request:t}):await zt({...e,request:t});return o.headers.authorization="token "+n,t(o)}function tt({clientId:e,clientSecret:t,clientType:r="oauth-app",request:s=Ge.defaults({headers:{"user-agent":`octokit-auth-oauth-app.js/${Cs} ${ve()}`}}),onTokenCreated:o,...n}){const a=Object.assign({clientType:r,clientId:e,clientSecret:t,onTokenCreated:o,strategyOptions:n,request:s});return Object.assign(zt.bind(null,a),{hook:pi.bind(null,a)})}tt.VERSION=Cs;const di=Object.freeze(Object.defineProperty({__proto__:null,createOAuthUserAuth:tt,requiresBasicAuth:kt},Symbol.toStringTag,{value:"Module"}));async function hi(e,t){if(t.type==="oauth-app")return{type:"oauth-app",clientId:e.clientId,clientSecret:e.clientSecret,clientType:e.clientType,headers:{authorization:`basic ${rr(`${e.clientId}:${e.clientSecret}`)}`}};if("factory"in t){const{type:o,...n}={...t,...e};return t.factory(n)}const r={clientId:e.clientId,clientSecret:e.clientSecret,request:e.request,...t};return(e.clientType==="oauth-app"?await tt({...r,clientType:e.clientType}):await tt({...r,clientType:e.clientType}))()}async function gi(e,t,r,s){let o=t.endpoint.merge(r,s);if(/\/login\/(oauth\/access_token|device\/code)$/.test(o.url))return t(o);if(e.clientType==="github-app"&&!kt(o.url))throw new Error(`[@octokit/auth-oauth-app] GitHub Apps cannot use their client ID/secret for basic authentication for endpoints other than "/applications/{client_id}/**". "${o.method} ${o.url}" is not supported.`);const n=rr(`${e.clientId}:${e.clientSecret}`);o.headers.authorization=`basic ${n}`;try{return await t(o)}catch(a){throw a.status!==401||(a.message=`[@octokit/auth-oauth-app] "${o.method} ${o.url}" does not support clientId/clientSecret basic authentication.`),a}}const fi="5.0.5";function js(e){const t=Object.assign({request:Ge.defaults({headers:{"user-agent":`octokit-auth-oauth-app.js/${fi} ${ve()}`}}),clientType:"oauth-app"},e);return Object.assign(hi.bind(null,t),{hook:gi.bind(null,t)})}const mi=Object.freeze(Object.defineProperty({__proto__:null,createOAuthAppAuth:js,createOAuthUserAuth:tt},Symbol.toStringTag,{value:"Module"}));function qs(e){const t=new ArrayBuffer(e.length),r=new Uint8Array(t);for(let s=0,o=e.length;s<o;s++)r[s]=e.charCodeAt(s);return t}function _i(e){const t=e.trim().split(`
`).slice(1,-1).join(""),r=atob(t);return qs(r)}function wi(e,t){return`${Mr(e)}.${Mr(t)}`}function yi(e){for(var t="",r=new Uint8Array(e),s=r.byteLength,o=0;o<s;o++)t+=String.fromCharCode(r[o]);return $s(btoa(t))}function $s(e){return e.replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function Mr(e){return $s(btoa(JSON.stringify(e)))}const bi=async({privateKey:e,payload:t})=>{if(/BEGIN RSA PRIVATE KEY/.test(e))throw new Error("[universal-github-app-jwt] Private Key is in PKCS#1 format, but only PKCS#8 is supported. See https://github.com/gr2m/universal-github-app-jwt#readme");const r={name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},s={alg:"RS256",typ:"JWT"},o=_i(e),n=await crypto.subtle.importKey("pkcs8",o,r,!1,["sign"]),a=wi(s,t),l=qs(a),p=await crypto.subtle.sign(r.name,n,l),_=yi(p);return`${a}.${_}`};async function Ti({id:e,privateKey:t,now:r=Math.floor(Date.now()/1e3)}){const s=r-30,o=s+60*10,a=await bi({privateKey:t,payload:{iat:s,exp:o,iss:e}});return{appId:e,expiration:o,token:a}}const Ze=typeof performance=="object"&&performance&&typeof performance.now=="function"?performance:Date,Ls=new Set,Nt=typeof process=="object"&&process?process:{},xs=(e,t,r,s)=>{typeof Nt.emitWarning=="function"?Nt.emitWarning(e,t,r,s):console.error(`[${r}] ${t}: ${e}`)};let yt=globalThis.AbortController,Vr=globalThis.AbortSignal;var ns;if(typeof yt>"u"){Vr=class{constructor(){H(this,"onabort");H(this,"_onabort",[]);H(this,"reason");H(this,"aborted",!1)}addEventListener(s,o){this._onabort.push(o)}},yt=class{constructor(){H(this,"signal",new Vr);t()}abort(s){var o,n;if(!this.signal.aborted){this.signal.reason=s,this.signal.aborted=!0;for(const a of this.signal._onabort)a(s);(n=(o=this.signal).onabort)==null||n.call(o,s)}}};let e=((ns=Nt.env)==null?void 0:ns.LRU_CACHE_IGNORE_AC_WARNING)!=="1";const t=()=>{e&&(e=!1,xs("AbortController is not defined. If using lru-cache in node 14, load an AbortController polyfill from the `node-abort-controller` package. A minimal polyfill is provided for use by LRUCache.fetch(), but it should not be relied upon in other contexts (eg, passing it to other APIs that use AbortController/AbortSignal might have undesirable effects). You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.","NO_ABORT_CONTROLLER","ENOTSUP",t))}}const Ei=e=>!Ls.has(e),Se=e=>e&&e===Math.floor(e)&&e>0&&isFinite(e),Ws=e=>Se(e)?e<=Math.pow(2,8)?Uint8Array:e<=Math.pow(2,16)?Uint16Array:e<=Math.pow(2,32)?Uint32Array:e<=Number.MAX_SAFE_INTEGER?ft:null:null;class ft extends Array{constructor(t){super(t),this.fill(0)}}var Ne;const ze=class{constructor(t,r){H(this,"heap");H(this,"length");if(!c(ze,Ne))throw new TypeError("instantiate Stack using Stack.create(n)");this.heap=new r(t),this.length=0}static create(t){const r=Ws(t);if(!r)return[];S(ze,Ne,!0);const s=new ze(t,r);return S(ze,Ne,!1),s}push(t){this.heap[this.length++]=t}pop(){return this.heap[--this.length]}};let mt=ze;Ne=new WeakMap,F(mt,Ne,!1);var ae,se,he,ce,Me,z,le,N,W,G,Z,oe,Y,V,ue,J,we,ye,pe,ge,Pe,te,rt,Vt,Ie,be,st,ne,Tt,Bs,Ce,Ve,ot,fe,Oe,me,Re,nt,Kt,Ke,_t,Je,wt,x,B,it,Jt,je,et;const ur=class{constructor(t){F(this,rt);F(this,Tt);F(this,fe);F(this,me);F(this,nt);F(this,Ke);F(this,Je);F(this,x);F(this,it);F(this,je);F(this,ae,void 0);F(this,se,void 0);F(this,he,void 0);F(this,ce,void 0);F(this,Me,void 0);H(this,"ttl");H(this,"ttlResolution");H(this,"ttlAutopurge");H(this,"updateAgeOnGet");H(this,"updateAgeOnHas");H(this,"allowStale");H(this,"noDisposeOnSet");H(this,"noUpdateTTL");H(this,"maxEntrySize");H(this,"sizeCalculation");H(this,"noDeleteOnFetchRejection");H(this,"noDeleteOnStaleGet");H(this,"allowStaleOnFetchAbort");H(this,"allowStaleOnFetchRejection");H(this,"ignoreFetchAbort");F(this,z,void 0);F(this,le,void 0);F(this,N,void 0);F(this,W,void 0);F(this,G,void 0);F(this,Z,void 0);F(this,oe,void 0);F(this,Y,void 0);F(this,V,void 0);F(this,ue,void 0);F(this,J,void 0);F(this,we,void 0);F(this,ye,void 0);F(this,pe,void 0);F(this,ge,void 0);F(this,Pe,void 0);F(this,te,void 0);F(this,Ie,()=>{});F(this,be,()=>{});F(this,st,()=>{});F(this,ne,()=>!1);F(this,Ce,t=>{});F(this,Ve,(t,r,s)=>{});F(this,ot,(t,r,s,o)=>{if(s||o)throw new TypeError("cannot set size without setting maxSize or maxEntrySize on cache");return 0});const{max:r=0,ttl:s,ttlResolution:o=1,ttlAutopurge:n,updateAgeOnGet:a,updateAgeOnHas:l,allowStale:p,dispose:_,disposeAfter:y,noDisposeOnSet:w,noUpdateTTL:I,maxSize:C=0,maxEntrySize:U=0,sizeCalculation:k,fetchMethod:P,noDeleteOnFetchRejection:T,noDeleteOnStaleGet:R,allowStaleOnFetchRejection:q,allowStaleOnFetchAbort:L,ignoreFetchAbort:g}=t;if(r!==0&&!Se(r))throw new TypeError("max option must be a nonnegative integer");const O=r?Ws(r):Array;if(!O)throw new Error("invalid max value: "+r);if(S(this,ae,r),S(this,se,C),this.maxEntrySize=U||c(this,se),this.sizeCalculation=k,this.sizeCalculation){if(!c(this,se)&&!this.maxEntrySize)throw new TypeError("cannot set sizeCalculation without setting maxSize or maxEntrySize");if(typeof this.sizeCalculation!="function")throw new TypeError("sizeCalculation set to non-function")}if(P!==void 0&&typeof P!="function")throw new TypeError("fetchMethod must be a function if specified");if(S(this,Me,P),S(this,Pe,!!P),S(this,N,new Map),S(this,W,new Array(r).fill(void 0)),S(this,G,new Array(r).fill(void 0)),S(this,Z,new O(r)),S(this,oe,new O(r)),S(this,Y,0),S(this,V,0),S(this,ue,mt.create(r)),S(this,z,0),S(this,le,0),typeof _=="function"&&S(this,he,_),typeof y=="function"?(S(this,ce,y),S(this,J,[])):(S(this,ce,void 0),S(this,J,void 0)),S(this,ge,!!c(this,he)),S(this,te,!!c(this,ce)),this.noDisposeOnSet=!!w,this.noUpdateTTL=!!I,this.noDeleteOnFetchRejection=!!T,this.allowStaleOnFetchRejection=!!q,this.allowStaleOnFetchAbort=!!L,this.ignoreFetchAbort=!!g,this.maxEntrySize!==0){if(c(this,se)!==0&&!Se(c(this,se)))throw new TypeError("maxSize must be a positive integer if specified");if(!Se(this.maxEntrySize))throw new TypeError("maxEntrySize must be a positive integer if specified");A(this,Tt,Bs).call(this)}if(this.allowStale=!!p,this.noDeleteOnStaleGet=!!R,this.updateAgeOnGet=!!a,this.updateAgeOnHas=!!l,this.ttlResolution=Se(o)||o===0?o:1,this.ttlAutopurge=!!n,this.ttl=s||0,this.ttl){if(!Se(this.ttl))throw new TypeError("ttl must be a positive integer if specified");A(this,rt,Vt).call(this)}if(c(this,ae)===0&&this.ttl===0&&c(this,se)===0)throw new TypeError("At least one of max, maxSize, or ttl is required");if(!this.ttlAutopurge&&!c(this,ae)&&!c(this,se)){const E="LRU_CACHE_UNBOUNDED";Ei(E)&&(Ls.add(E),xs("TTL caching without ttlAutopurge, max, or maxSize can result in unbounded memory consumption.","UnboundedCacheWarning",E,ur))}}static unsafeExposeInternals(t){return{starts:c(t,ye),ttls:c(t,pe),sizes:c(t,we),keyMap:c(t,N),keyList:c(t,W),valList:c(t,G),next:c(t,Z),prev:c(t,oe),get head(){return c(t,Y)},get tail(){return c(t,V)},free:c(t,ue),isBackgroundFetch:r=>{var s;return A(s=t,x,B).call(s,r)},backgroundFetch:(r,s,o,n)=>{var a;return A(a=t,Je,wt).call(a,r,s,o,n)},moveToTail:r=>{var s;return A(s=t,je,et).call(s,r)},indexes:r=>{var s;return A(s=t,fe,Oe).call(s,r)},rindexes:r=>{var s;return A(s=t,me,Re).call(s,r)},isStale:r=>{var s;return c(s=t,ne).call(s,r)}}}get max(){return c(this,ae)}get maxSize(){return c(this,se)}get calculatedSize(){return c(this,le)}get size(){return c(this,z)}get fetchMethod(){return c(this,Me)}get dispose(){return c(this,he)}get disposeAfter(){return c(this,ce)}getRemainingTTL(t){return c(this,N).has(t)?1/0:0}*entries(){for(const t of A(this,fe,Oe).call(this))c(this,G)[t]!==void 0&&c(this,W)[t]!==void 0&&!A(this,x,B).call(this,c(this,G)[t])&&(yield[c(this,W)[t],c(this,G)[t]])}*rentries(){for(const t of A(this,me,Re).call(this))c(this,G)[t]!==void 0&&c(this,W)[t]!==void 0&&!A(this,x,B).call(this,c(this,G)[t])&&(yield[c(this,W)[t],c(this,G)[t]])}*keys(){for(const t of A(this,fe,Oe).call(this)){const r=c(this,W)[t];r!==void 0&&!A(this,x,B).call(this,c(this,G)[t])&&(yield r)}}*rkeys(){for(const t of A(this,me,Re).call(this)){const r=c(this,W)[t];r!==void 0&&!A(this,x,B).call(this,c(this,G)[t])&&(yield r)}}*values(){for(const t of A(this,fe,Oe).call(this))c(this,G)[t]!==void 0&&!A(this,x,B).call(this,c(this,G)[t])&&(yield c(this,G)[t])}*rvalues(){for(const t of A(this,me,Re).call(this))c(this,G)[t]!==void 0&&!A(this,x,B).call(this,c(this,G)[t])&&(yield c(this,G)[t])}[Symbol.iterator](){return this.entries()}find(t,r={}){for(const s of A(this,fe,Oe).call(this)){const o=c(this,G)[s],n=A(this,x,B).call(this,o)?o.__staleWhileFetching:o;if(n!==void 0&&t(n,c(this,W)[s],this))return this.get(c(this,W)[s],r)}}forEach(t,r=this){for(const s of A(this,fe,Oe).call(this)){const o=c(this,G)[s],n=A(this,x,B).call(this,o)?o.__staleWhileFetching:o;n!==void 0&&t.call(r,n,c(this,W)[s],this)}}rforEach(t,r=this){for(const s of A(this,me,Re).call(this)){const o=c(this,G)[s],n=A(this,x,B).call(this,o)?o.__staleWhileFetching:o;n!==void 0&&t.call(r,n,c(this,W)[s],this)}}purgeStale(){let t=!1;for(const r of A(this,me,Re).call(this,{allowStale:!0}))c(this,ne).call(this,r)&&(this.delete(c(this,W)[r]),t=!0);return t}dump(){const t=[];for(const r of A(this,fe,Oe).call(this,{allowStale:!0})){const s=c(this,W)[r],o=c(this,G)[r],n=A(this,x,B).call(this,o)?o.__staleWhileFetching:o;if(n===void 0||s===void 0)continue;const a={value:n};if(c(this,pe)&&c(this,ye)){a.ttl=c(this,pe)[r];const l=Ze.now()-c(this,ye)[r];a.start=Math.floor(Date.now()-l)}c(this,we)&&(a.size=c(this,we)[r]),t.unshift([s,a])}return t}load(t){this.clear();for(const[r,s]of t){if(s.start){const o=Date.now()-s.start;s.start=Ze.now()-o}this.set(r,s.value,s)}}set(t,r,s={}){var I,C,U;if(r===void 0)return this.delete(t),this;const{ttl:o=this.ttl,start:n,noDisposeOnSet:a=this.noDisposeOnSet,sizeCalculation:l=this.sizeCalculation,status:p}=s;let{noUpdateTTL:_=this.noUpdateTTL}=s;const y=c(this,ot).call(this,t,r,s.size||0,l);if(this.maxEntrySize&&y>this.maxEntrySize)return p&&(p.set="miss",p.maxEntrySizeExceeded=!0),this.delete(t),this;let w=c(this,z)===0?void 0:c(this,N).get(t);if(w===void 0)w=c(this,z)===0?c(this,V):c(this,ue).length!==0?c(this,ue).pop():c(this,z)===c(this,ae)?A(this,Ke,_t).call(this,!1):c(this,z),c(this,W)[w]=t,c(this,G)[w]=r,c(this,N).set(t,w),c(this,Z)[c(this,V)]=w,c(this,oe)[w]=c(this,V),S(this,V,w),ht(this,z)._++,c(this,Ve).call(this,w,y,p),p&&(p.set="add"),_=!1;else{A(this,je,et).call(this,w);const k=c(this,G)[w];if(r!==k){if(c(this,Pe)&&A(this,x,B).call(this,k)?k.__abortController.abort(new Error("replaced")):a||(c(this,ge)&&((I=c(this,he))==null||I.call(this,k,t,"set")),c(this,te)&&((C=c(this,J))==null||C.push([k,t,"set"]))),c(this,Ce).call(this,w),c(this,Ve).call(this,w,y,p),c(this,G)[w]=r,p){p.set="replace";const P=k&&A(this,x,B).call(this,k)?k.__staleWhileFetching:k;P!==void 0&&(p.oldValue=P)}}else p&&(p.set="update")}if(o!==0&&!c(this,pe)&&A(this,rt,Vt).call(this),c(this,pe)&&(_||c(this,st).call(this,w,o,n),p&&c(this,be).call(this,p,w)),!a&&c(this,te)&&c(this,J)){const k=c(this,J);let P;for(;P=k==null?void 0:k.shift();)(U=c(this,ce))==null||U.call(this,...P)}return this}pop(){var t;try{for(;c(this,z);){const r=c(this,G)[c(this,Y)];if(A(this,Ke,_t).call(this,!0),A(this,x,B).call(this,r)){if(r.__staleWhileFetching)return r.__staleWhileFetching}else if(r!==void 0)return r}}finally{if(c(this,te)&&c(this,J)){const r=c(this,J);let s;for(;s=r==null?void 0:r.shift();)(t=c(this,ce))==null||t.call(this,...s)}}}has(t,r={}){const{updateAgeOnHas:s=this.updateAgeOnHas,status:o}=r,n=c(this,N).get(t);if(n!==void 0){const a=c(this,G)[n];if(A(this,x,B).call(this,a)&&a.__staleWhileFetching===void 0)return!1;if(c(this,ne).call(this,n))o&&(o.has="stale",c(this,be).call(this,o,n));else return s&&c(this,Ie).call(this,n),o&&(o.has="hit",c(this,be).call(this,o,n)),!0}else o&&(o.has="miss");return!1}peek(t,r={}){const{allowStale:s=this.allowStale}=r,o=c(this,N).get(t);if(o!==void 0&&(s||!c(this,ne).call(this,o))){const n=c(this,G)[o];return A(this,x,B).call(this,n)?n.__staleWhileFetching:n}}async fetch(t,r={}){const{allowStale:s=this.allowStale,updateAgeOnGet:o=this.updateAgeOnGet,noDeleteOnStaleGet:n=this.noDeleteOnStaleGet,ttl:a=this.ttl,noDisposeOnSet:l=this.noDisposeOnSet,size:p=0,sizeCalculation:_=this.sizeCalculation,noUpdateTTL:y=this.noUpdateTTL,noDeleteOnFetchRejection:w=this.noDeleteOnFetchRejection,allowStaleOnFetchRejection:I=this.allowStaleOnFetchRejection,ignoreFetchAbort:C=this.ignoreFetchAbort,allowStaleOnFetchAbort:U=this.allowStaleOnFetchAbort,context:k,forceRefresh:P=!1,status:T,signal:R}=r;if(!c(this,Pe))return T&&(T.fetch="get"),this.get(t,{allowStale:s,updateAgeOnGet:o,noDeleteOnStaleGet:n,status:T});const q={allowStale:s,updateAgeOnGet:o,noDeleteOnStaleGet:n,ttl:a,noDisposeOnSet:l,size:p,sizeCalculation:_,noUpdateTTL:y,noDeleteOnFetchRejection:w,allowStaleOnFetchRejection:I,allowStaleOnFetchAbort:U,ignoreFetchAbort:C,status:T,signal:R};let L=c(this,N).get(t);if(L===void 0){T&&(T.fetch="miss");const g=A(this,Je,wt).call(this,t,L,q,k);return g.__returned=g}else{const g=c(this,G)[L];if(A(this,x,B).call(this,g)){const ie=s&&g.__staleWhileFetching!==void 0;return T&&(T.fetch="inflight",ie&&(T.returnedStale=!0)),ie?g.__staleWhileFetching:g.__returned=g}const O=c(this,ne).call(this,L);if(!P&&!O)return T&&(T.fetch="hit"),A(this,je,et).call(this,L),o&&c(this,Ie).call(this,L),T&&c(this,be).call(this,T,L),g;const E=A(this,Je,wt).call(this,t,L,q,k),j=E.__staleWhileFetching!==void 0&&s;return T&&(T.fetch=O?"stale":"refresh",j&&O&&(T.returnedStale=!0)),j?E.__staleWhileFetching:E.__returned=E}}get(t,r={}){const{allowStale:s=this.allowStale,updateAgeOnGet:o=this.updateAgeOnGet,noDeleteOnStaleGet:n=this.noDeleteOnStaleGet,status:a}=r,l=c(this,N).get(t);if(l!==void 0){const p=c(this,G)[l],_=A(this,x,B).call(this,p);return a&&c(this,be).call(this,a,l),c(this,ne).call(this,l)?(a&&(a.get="stale"),_?(a&&s&&p.__staleWhileFetching!==void 0&&(a.returnedStale=!0),s?p.__staleWhileFetching:void 0):(n||this.delete(t),a&&s&&(a.returnedStale=!0),s?p:void 0)):(a&&(a.get="hit"),_?p.__staleWhileFetching:(A(this,je,et).call(this,l),o&&c(this,Ie).call(this,l),p))}else a&&(a.get="miss")}delete(t){var s,o,n,a;let r=!1;if(c(this,z)!==0){const l=c(this,N).get(t);if(l!==void 0)if(r=!0,c(this,z)===1)this.clear();else{c(this,Ce).call(this,l);const p=c(this,G)[l];A(this,x,B).call(this,p)?p.__abortController.abort(new Error("deleted")):(c(this,ge)||c(this,te))&&(c(this,ge)&&((s=c(this,he))==null||s.call(this,p,t,"delete")),c(this,te)&&((o=c(this,J))==null||o.push([p,t,"delete"]))),c(this,N).delete(t),c(this,W)[l]=void 0,c(this,G)[l]=void 0,l===c(this,V)?S(this,V,c(this,oe)[l]):l===c(this,Y)?S(this,Y,c(this,Z)[l]):(c(this,Z)[c(this,oe)[l]]=c(this,Z)[l],c(this,oe)[c(this,Z)[l]]=c(this,oe)[l]),ht(this,z)._--,c(this,ue).push(l)}}if(c(this,te)&&((n=c(this,J))!=null&&n.length)){const l=c(this,J);let p;for(;p=l==null?void 0:l.shift();)(a=c(this,ce))==null||a.call(this,...p)}return r}clear(){var t,r,s;for(const o of A(this,me,Re).call(this,{allowStale:!0})){const n=c(this,G)[o];if(A(this,x,B).call(this,n))n.__abortController.abort(new Error("deleted"));else{const a=c(this,W)[o];c(this,ge)&&((t=c(this,he))==null||t.call(this,n,a,"delete")),c(this,te)&&((r=c(this,J))==null||r.push([n,a,"delete"]))}}if(c(this,N).clear(),c(this,G).fill(void 0),c(this,W).fill(void 0),c(this,pe)&&c(this,ye)&&(c(this,pe).fill(0),c(this,ye).fill(0)),c(this,we)&&c(this,we).fill(0),S(this,Y,0),S(this,V,0),c(this,ue).length=0,S(this,le,0),S(this,z,0),c(this,te)&&c(this,J)){const o=c(this,J);let n;for(;n=o==null?void 0:o.shift();)(s=c(this,ce))==null||s.call(this,...n)}}};let Mt=ur;ae=new WeakMap,se=new WeakMap,he=new WeakMap,ce=new WeakMap,Me=new WeakMap,z=new WeakMap,le=new WeakMap,N=new WeakMap,W=new WeakMap,G=new WeakMap,Z=new WeakMap,oe=new WeakMap,Y=new WeakMap,V=new WeakMap,ue=new WeakMap,J=new WeakMap,we=new WeakMap,ye=new WeakMap,pe=new WeakMap,ge=new WeakMap,Pe=new WeakMap,te=new WeakMap,rt=new WeakSet,Vt=function(){const t=new ft(c(this,ae)),r=new ft(c(this,ae));S(this,pe,t),S(this,ye,r),S(this,st,(n,a,l=Ze.now())=>{if(r[n]=a!==0?l:0,t[n]=a,a!==0&&this.ttlAutopurge){const p=setTimeout(()=>{c(this,ne).call(this,n)&&this.delete(c(this,W)[n])},a+1);p.unref&&p.unref()}}),S(this,Ie,n=>{r[n]=t[n]!==0?Ze.now():0}),S(this,be,(n,a)=>{if(t[a]){const l=t[a],p=r[a];n.ttl=l,n.start=p,n.now=s||o();const _=n.now-p;n.remainingTTL=l-_}});let s=0;const o=()=>{const n=Ze.now();if(this.ttlResolution>0){s=n;const a=setTimeout(()=>s=0,this.ttlResolution);a.unref&&a.unref()}return n};this.getRemainingTTL=n=>{const a=c(this,N).get(n);if(a===void 0)return 0;const l=t[a],p=r[a];if(l===0||p===0)return 1/0;const _=(s||o())-p;return l-_},S(this,ne,n=>t[n]!==0&&r[n]!==0&&(s||o())-r[n]>t[n])},Ie=new WeakMap,be=new WeakMap,st=new WeakMap,ne=new WeakMap,Tt=new WeakSet,Bs=function(){const t=new ft(c(this,ae));S(this,le,0),S(this,we,t),S(this,Ce,r=>{S(this,le,c(this,le)-t[r]),t[r]=0}),S(this,ot,(r,s,o,n)=>{if(A(this,x,B).call(this,s))return 0;if(!Se(o))if(n){if(typeof n!="function")throw new TypeError("sizeCalculation must be a function");if(o=n(s,r),!Se(o))throw new TypeError("sizeCalculation return invalid (expect positive integer)")}else throw new TypeError("invalid size value (must be positive integer). When maxSize or maxEntrySize is used, sizeCalculation or size must be set.");return o}),S(this,Ve,(r,s,o)=>{if(t[r]=s,c(this,se)){const n=c(this,se)-t[r];for(;c(this,le)>n;)A(this,Ke,_t).call(this,!0)}S(this,le,c(this,le)+t[r]),o&&(o.entrySize=s,o.totalCalculatedSize=c(this,le))})},Ce=new WeakMap,Ve=new WeakMap,ot=new WeakMap,fe=new WeakSet,Oe=function*({allowStale:t=this.allowStale}={}){if(c(this,z))for(let r=c(this,V);!(!A(this,nt,Kt).call(this,r)||((t||!c(this,ne).call(this,r))&&(yield r),r===c(this,Y)));)r=c(this,oe)[r]},me=new WeakSet,Re=function*({allowStale:t=this.allowStale}={}){if(c(this,z))for(let r=c(this,Y);!(!A(this,nt,Kt).call(this,r)||((t||!c(this,ne).call(this,r))&&(yield r),r===c(this,V)));)r=c(this,Z)[r]},nt=new WeakSet,Kt=function(t){return t!==void 0&&c(this,N).get(c(this,W)[t])===t},Ke=new WeakSet,_t=function(t){var n,a;const r=c(this,Y),s=c(this,W)[r],o=c(this,G)[r];return c(this,Pe)&&A(this,x,B).call(this,o)?o.__abortController.abort(new Error("evicted")):(c(this,ge)||c(this,te))&&(c(this,ge)&&((n=c(this,he))==null||n.call(this,o,s,"evict")),c(this,te)&&((a=c(this,J))==null||a.push([o,s,"evict"]))),c(this,Ce).call(this,r),t&&(c(this,W)[r]=void 0,c(this,G)[r]=void 0,c(this,ue).push(r)),c(this,z)===1?(S(this,Y,S(this,V,0)),c(this,ue).length=0):S(this,Y,c(this,Z)[r]),c(this,N).delete(s),ht(this,z)._--,r},Je=new WeakSet,wt=function(t,r,s,o){const n=r===void 0?void 0:c(this,G)[r];if(A(this,x,B).call(this,n))return n;const a=new yt,{signal:l}=s;l==null||l.addEventListener("abort",()=>a.abort(l.reason),{signal:a.signal});const p={signal:a.signal,options:s,context:o},_=(k,P=!1)=>{const{aborted:T}=a.signal,R=s.ignoreFetchAbort&&k!==void 0;if(s.status&&(T&&!P?(s.status.fetchAborted=!0,s.status.fetchError=a.signal.reason,R&&(s.status.fetchAbortIgnored=!0)):s.status.fetchResolved=!0),T&&!R&&!P)return w(a.signal.reason);const q=C;return c(this,G)[r]===C&&(k===void 0?q.__staleWhileFetching?c(this,G)[r]=q.__staleWhileFetching:this.delete(t):(s.status&&(s.status.fetchUpdated=!0),this.set(t,k,p.options))),k},y=k=>(s.status&&(s.status.fetchRejected=!0,s.status.fetchError=k),w(k)),w=k=>{const{aborted:P}=a.signal,T=P&&s.allowStaleOnFetchAbort,R=T||s.allowStaleOnFetchRejection,q=R||s.noDeleteOnFetchRejection,L=C;if(c(this,G)[r]===C&&(!q||L.__staleWhileFetching===void 0?this.delete(t):T||(c(this,G)[r]=L.__staleWhileFetching)),R)return s.status&&L.__staleWhileFetching!==void 0&&(s.status.returnedStale=!0),L.__staleWhileFetching;if(L.__returned===L)throw k},I=(k,P)=>{var R;const T=(R=c(this,Me))==null?void 0:R.call(this,t,n,p);T&&T instanceof Promise&&T.then(q=>k(q),P),a.signal.addEventListener("abort",()=>{(!s.ignoreFetchAbort||s.allowStaleOnFetchAbort)&&(k(),s.allowStaleOnFetchAbort&&(k=q=>_(q,!0)))})};s.status&&(s.status.fetchDispatched=!0);const C=new Promise(I).then(_,y),U=Object.assign(C,{__abortController:a,__staleWhileFetching:n,__returned:void 0});return r===void 0?(this.set(t,U,{...p.options,status:void 0}),r=c(this,N).get(t)):c(this,G)[r]=U,U},x=new WeakSet,B=function(t){if(!c(this,Pe))return!1;const r=t;return!!r&&r instanceof Promise&&r.hasOwnProperty("__staleWhileFetching")&&r.__abortController instanceof yt},it=new WeakSet,Jt=function(t,r){c(this,oe)[r]=t,c(this,Z)[t]=r},je=new WeakSet,et=function(t){t!==c(this,V)&&(t===c(this,Y)?S(this,Y,c(this,Z)[t]):A(this,it,Jt).call(this,c(this,oe)[t],c(this,Z)[t]),A(this,it,Jt).call(this,c(this,V),t),S(this,V,t))};async function bt({appId:e,privateKey:t,timeDifference:r}){try{const s=await Ti({id:+e,privateKey:t,now:r&&Math.floor(Date.now()/1e3)+r});return{type:"app",token:s.token,appId:s.appId,expiresAt:new Date(s.expiration*1e3).toISOString()}}catch(s){throw t==="-----BEGIN RSA PRIVATE KEY-----"?new Error("The 'privateKey` option contains only the first line '-----BEGIN RSA PRIVATE KEY-----'. If you are setting it using a `.env` file, make sure it is set on a single line with newlines replaced by '\n'"):s}}function ki(){return new Mt({max:15e3,ttl:1e3*60*59})}async function vi(e,t){const r=Hs(t),s=await e.get(r);if(!s)return;const[o,n,a,l,p,_]=s.split("|"),y=t.permissions||p.split(/,/).reduce((w,I)=>(/!$/.test(I)?w[I.slice(0,-1)]="write":w[I]="read",w),{});return{token:o,createdAt:n,expiresAt:a,permissions:y,repositoryIds:t.repositoryIds,repositoryNames:t.repositoryNames,singleFileName:_,repositorySelection:l}}async function Ai(e,t,r){const s=Hs(t),o=t.permissions?"":Object.keys(r.permissions).map(a=>`${a}${r.permissions[a]==="write"?"!":""}`).join(","),n=[r.token,r.createdAt,r.expiresAt,r.repositorySelection,o,r.singleFileName].join("|");await e.set(s,n)}function Hs({installationId:e,permissions:t={},repositoryIds:r=[],repositoryNames:s=[]}){const o=Object.keys(t).sort().map(l=>t[l]==="read"?l:`${l}!`).join(","),n=r.sort().join(","),a=s.join(",");return[e,n,a,o].filter(Boolean).join("|")}function Kr({installationId:e,token:t,createdAt:r,expiresAt:s,repositorySelection:o,permissions:n,repositoryIds:a,repositoryNames:l,singleFileName:p}){return Object.assign({type:"token",tokenType:"installation",token:t,installationId:e,permissions:n,createdAt:r,expiresAt:s,repositorySelection:o},a?{repositoryIds:a}:null,l?{repositoryNames:l}:null,p?{singleFileName:p}:null)}async function zs(e,t,r){const s=Number(t.installationId||e.installationId);if(!s)throw new Error("[@octokit/auth-app] installationId option is required for installation authentication.");if(t.factory){const{type:R,factory:q,oauthApp:L,...g}={...e,...t};return q(g)}const o=Object.assign({installationId:s},t);if(!t.refresh){const R=await vi(e.cache,o);if(R){const{token:q,createdAt:L,expiresAt:g,permissions:O,repositoryIds:E,repositoryNames:D,singleFileName:j,repositorySelection:ie}=R;return Kr({installationId:s,token:q,createdAt:L,expiresAt:g,permissions:O,repositorySelection:ie,repositoryIds:E,repositoryNames:D,singleFileName:j})}}const n=await bt(e),a=r||e.request,{data:{token:l,expires_at:p,repositories:_,permissions:y,repository_selection:w,single_file:I}}=await a("POST /app/installations/{installation_id}/access_tokens",{installation_id:s,repository_ids:t.repositoryIds,repositories:t.repositoryNames,permissions:t.permissions,mediaType:{previews:["machine-man"]},headers:{authorization:`bearer ${n.token}`}}),C=y||{},U=w||"all",k=_?_.map(R=>R.id):void 0,P=_?_.map(R=>R.name):void 0,T=new Date().toISOString();return await Ai(e.cache,o,{token:l,createdAt:T,expiresAt:p,repositorySelection:U,permissions:C,repositoryIds:k,repositoryNames:P,singleFileName:I}),Kr({installationId:s,token:l,createdAt:T,expiresAt:p,repositorySelection:U,permissions:C,repositoryIds:k,repositoryNames:P,singleFileName:I})}async function Si(e,t){switch(t.type){case"app":return bt(e);case"oauth":e.log.warn(new Wt('[@octokit/auth-app] {type: "oauth"} is deprecated. Use {type: "oauth-app"} instead'));case"oauth-app":return e.oauthApp({type:"oauth-app"});case"installation":return zs(e,{...t,type:"installation"});case"oauth-user":return e.oauthApp(t);default:throw new Error(`Invalid auth type: ${t.type}`)}}var Oi=["/app","/app/hook/config","/app/hook/deliveries","/app/hook/deliveries/{delivery_id}","/app/hook/deliveries/{delivery_id}/attempts","/app/installations","/app/installations/{installation_id}","/app/installations/{installation_id}/access_tokens","/app/installations/{installation_id}/suspended","/marketplace_listing/accounts/{account_id}","/marketplace_listing/plan","/marketplace_listing/plans","/marketplace_listing/plans/{plan_id}/accounts","/marketplace_listing/stubbed/accounts/{account_id}","/marketplace_listing/stubbed/plan","/marketplace_listing/stubbed/plans","/marketplace_listing/stubbed/plans/{plan_id}/accounts","/orgs/{org}/installation","/repos/{owner}/{repo}/installation","/users/{username}/installation"];function Ri(e){const r=`^(?:${e.map(s=>s.split("/").map(o=>o.startsWith("{")?"(?:.+?)":o).join("/")).map(s=>`(?:${s})`).join("|")})$`;return new RegExp(r,"i")}var Pi=Ri(Oi);function Gi(e){return!!e&&Pi.test(e.split("?")[0])}var Fi=5*1e3;function Ui(e){return!(e.message.match(/'Expiration time' claim \('exp'\) must be a numeric value representing the future time at which the assertion expires/)||e.message.match(/'Issued at' claim \('iat'\) must be an Integer representing the time that the assertion was issued/))}async function Di(e,t,r,s){const o=t.endpoint.merge(r,s),n=o.url;if(/\/login\/oauth\/access_token$/.test(n))return t(o);if(Gi(n.replace(t.endpoint.DEFAULTS.baseUrl,""))){const{token:p}=await bt(e);o.headers.authorization=`bearer ${p}`;let _;try{_=await t(o)}catch(y){if(Ui(y)||typeof y.response.headers.date>"u")throw y;const w=Math.floor((Date.parse(y.response.headers.date)-Date.parse(new Date().toString()))/1e3);e.log.warn(y.message),e.log.warn(`[@octokit/auth-app] GitHub API time and system time are different by ${w} seconds. Retrying request with the difference accounted for.`);const{token:I}=await bt({...e,timeDifference:w});return o.headers.authorization=`bearer ${I}`,t(o)}return _}if(kt(n)){const p=await e.oauthApp({type:"oauth-app"});return o.headers.authorization=p.headers.authorization,t(o)}const{token:a,createdAt:l}=await zs(e,{},t);return o.headers.authorization=`token ${a}`,Ns(e,t,o,l)}async function Ns(e,t,r,s,o=0){const n=+new Date-+new Date(s);try{return await t(r)}catch(a){if(a.status!==401)throw a;if(n>=Fi)throw o>0&&(a.message=`After ${o} retries within ${n/1e3}s of creating the installation access token, the response remains 401. At this point, the cause may be an authentication problem or a system outage. Please check https://www.githubstatus.com for status information`),a;++o;const l=o*1e3;return e.log.warn(`[@octokit/auth-app] Retrying after 401 response to account for token replication delay (retry: ${o}, wait: ${l/1e3}s)`),await new Promise(p=>setTimeout(p,l)),Ns(e,t,r,s,o)}}var Ii="4.0.13";function sr(e){if(!e.appId)throw new Error("[@octokit/auth-app] appId option is required");if(!Number.isFinite(+e.appId))throw new Error("[@octokit/auth-app] appId option must be a number or numeric string");if(!e.privateKey)throw new Error("[@octokit/auth-app] privateKey option is required");if("installationId"in e&&!e.installationId)throw new Error("[@octokit/auth-app] installationId is set to a falsy value");const t=Object.assign({warn:console.warn.bind(console)},e.log),r=e.request||Ge.defaults({headers:{"user-agent":`octokit-auth-app.js/${Ii} ${ve()}`}}),s=Object.assign({request:r,cache:ki()},e,e.installationId?{installationId:Number(e.installationId)}:{},{log:t,oauthApp:js({clientType:"github-app",clientId:e.clientId||"",clientSecret:e.clientSecret||"",request:r})});return Object.assign(Si.bind(null,s),{hook:Di.bind(null,s)})}const Ms=ke(mi),Ci=ke(Cn),ji=ke(Po),vt=ke(di);async function qi(e){return{type:"unauthenticated",reason:e}}function $i(e){return e.status!==403||!e.response?!1:e.response.headers["x-ratelimit-remaining"]==="0"}var Li=/\babuse\b/i;function xi(e){return e.status!==403?!1:Li.test(e.message)}async function Wi(e,t,r,s){const o=t.endpoint.merge(r,s);return t(o).catch(n=>{throw n.status===404?(n.message=`Not found. May be due to lack of authentication. Reason: ${e}`,n):$i(n)?(n.message=`API rate limit exceeded. This maybe caused by the lack of authentication. Reason: ${e}`,n):xi(n)?(n.message=`You have triggered an abuse detection mechanism. This maybe caused by the lack of authentication. Reason: ${e}`,n):n.status===401?(n.message=`Unauthorized. "${o.method} ${o.url}" failed most likely due to lack of authentication. Reason: ${e}`,n):(n.status>=400&&n.status<500&&(n.message=n.message.replace(/\.?$/,`. May be caused by lack of authentication (${e}).`)),n)})}var Vs=function(t){if(!t||!t.reason)throw new Error("[@octokit/auth-unauthenticated] No reason passed to createUnauthenticatedAuth");return Object.assign(qi.bind(null,t.reason),{hook:Wi.bind(null,t.reason)})};const Bi=Object.freeze(Object.defineProperty({__proto__:null,createUnauthenticatedAuth:Vs},Symbol.toStringTag,{value:"Module"})),Ks=ke(Bi);/*! fromentries. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */var Lt,Jr;function Hi(){return Jr||(Jr=1,Lt=function(t){return[...t].reduce((r,[s,o])=>(r[s]=o,r),{})}),Lt}var zi=Object.create,At=Object.defineProperty,Ni=Object.getOwnPropertyDescriptor,Mi=Object.getOwnPropertyNames,Vi=Object.getPrototypeOf,Ki=Object.prototype.hasOwnProperty,Ji=(e,t)=>{for(var r in t)At(e,r,{get:t[r],enumerable:!0})},Js=(e,t,r,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of Mi(t))!Ki.call(e,o)&&o!==r&&At(e,o,{get:()=>t[o],enumerable:!(s=Ni(t,o))||s.enumerable});return e},Ae=(e,t,r)=>(r=e!=null?zi(Vi(e)):{},Js(t||!e||!e.__esModule?At(r,"default",{value:e,enumerable:!0}):r,e)),Qi=e=>Js(At({},"__esModule",{value:!0}),e),Qs={};Ji(Qs,{OAuthApp:()=>io,createAWSLambdaAPIGatewayV2Handler:()=>Aa,createCloudflareHandler:()=>ka,createNodeMiddleware:()=>Ta,createWebWorkerHandler:()=>so,handleRequest:()=>St});var or=Qi(Qs),Yi=Ms,Ys="4.2.2";function Xs(e,t,r){if(Array.isArray(t)){for(const s of t)Xs(e,s,r);return}e.eventHandlers[t]||(e.eventHandlers[t]=[]),e.eventHandlers[t].push(r)}var Xi=Ci,Zi=ji,ea=Xi.Octokit.defaults({userAgent:`octokit-oauth-app.js/${Ys} ${(0,Zi.getUserAgent)()}`}),ta=vt;async function Ee(e,t){const{name:r,action:s}=t;if(e.eventHandlers[`${r}.${s}`])for(const o of e.eventHandlers[`${r}.${s}`])await o(t);if(e.eventHandlers[r])for(const o of e.eventHandlers[r])await o(t)}async function ra(e,t){return e.octokit.auth({type:"oauth-user",...t,async factory(r){const s=new e.Octokit({authStrategy:ta.createOAuthUserAuth,auth:r}),o=await s.auth({type:"get"});return await Ee(e,{name:"token",action:"created",token:o.token,scopes:o.scopes,authentication:o,octokit:s}),s}})}var sa=Ae(Fe());function oa(e,t){const r={clientId:e.clientId,request:e.octokit.request,...t,allowSignup:e.allowSignup??t.allowSignup,redirectUrl:t.redirectUrl??e.redirectUrl,scopes:t.scopes??e.defaultScopes};return sa.getWebFlowAuthorizationUrl({clientType:e.clientType,...r})}var na=Ae(Ms);async function ia(e,t){const r=await e.octokit.auth({type:"oauth-user",...t});return await Ee(e,{name:"token",action:"created",token:r.token,scopes:r.scopes,authentication:r,octokit:new e.Octokit({authStrategy:na.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:r.token,scopes:r.scopes,refreshToken:r.refreshToken,expiresAt:r.expiresAt,refreshTokenExpiresAt:r.refreshTokenExpiresAt}})}),{authentication:r}}var aa=Ae(Fe());async function ca(e,t){const r=await aa.checkToken({clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t});return Object.assign(r.authentication,{type:"token",tokenType:"oauth"}),r}var Qr=Ae(Fe()),Yr=vt;async function la(e,t){const r={clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t};if(e.clientType==="oauth-app"){const n=await Qr.resetToken({clientType:"oauth-app",...r}),a=Object.assign(n.authentication,{type:"token",tokenType:"oauth"});return await Ee(e,{name:"token",action:"reset",token:n.authentication.token,scopes:n.authentication.scopes||void 0,authentication:a,octokit:new e.Octokit({authStrategy:Yr.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:n.authentication.token,scopes:n.authentication.scopes}})}),{...n,authentication:a}}const s=await Qr.resetToken({clientType:"github-app",...r}),o=Object.assign(s.authentication,{type:"token",tokenType:"oauth"});return await Ee(e,{name:"token",action:"reset",token:s.authentication.token,authentication:o,octokit:new e.Octokit({authStrategy:Yr.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:s.authentication.token}})}),{...s,authentication:o}}var ua=Ae(Fe()),pa=vt;async function da(e,t){if(e.clientType==="oauth-app")throw new Error("[@octokit/oauth-app] app.refreshToken() is not supported for OAuth Apps");const r=await ua.refreshToken({clientType:"github-app",clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,refreshToken:t.refreshToken}),s=Object.assign(r.authentication,{type:"token",tokenType:"oauth"});return await Ee(e,{name:"token",action:"refreshed",token:r.authentication.token,authentication:s,octokit:new e.Octokit({authStrategy:pa.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:r.authentication.token}})}),{...r,authentication:s}}var ha=Ae(Fe()),ga=vt;async function fa(e,t){if(e.clientType==="oauth-app")throw new Error("[@octokit/oauth-app] app.scopeToken() is not supported for OAuth Apps");const r=await ha.scopeToken({clientType:"github-app",clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t}),s=Object.assign(r.authentication,{type:"token",tokenType:"oauth"});return await Ee(e,{name:"token",action:"scoped",token:r.authentication.token,authentication:s,octokit:new e.Octokit({authStrategy:ga.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:r.authentication.token}})}),{...r,authentication:s}}var Xr=Ae(Fe()),ma=Ks;async function _a(e,t){const r={clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t},s=e.clientType==="oauth-app"?await Xr.deleteToken({clientType:"oauth-app",...r}):await Xr.deleteToken({clientType:"github-app",...r});return await Ee(e,{name:"token",action:"deleted",token:t.token,octokit:new e.Octokit({authStrategy:ma.createUnauthenticatedAuth,auth:{reason:'Handling "token.deleted" event. The access for the token has been revoked.'}})}),s}var Zr=Ae(Fe()),es=Ks;async function wa(e,t){const r={clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t},s=e.clientType==="oauth-app"?await Zr.deleteAuthorization({clientType:"oauth-app",...r}):await Zr.deleteAuthorization({clientType:"github-app",...r});return await Ee(e,{name:"token",action:"deleted",token:t.token,octokit:new e.Octokit({authStrategy:es.createUnauthenticatedAuth,auth:{reason:'Handling "token.deleted" event. The access for the token has been revoked.'}})}),await Ee(e,{name:"authorization",action:"deleted",token:t.token,octokit:new e.Octokit({authStrategy:es.createUnauthenticatedAuth,auth:{reason:'Handling "authorization.deleted" event. The access for the app has been revoked.'}})}),s}var ya=Ae(Hi());async function St(e,{pathPrefix:t="/api/github/oauth"},r){var s,o,n,a,l,p;if(r.method==="OPTIONS")return{status:200,headers:{"access-control-allow-origin":"*","access-control-allow-methods":"*","access-control-allow-headers":"Content-Type, User-Agent, Authorization"}};const{pathname:_}=new URL(r.url,"http://localhost"),y=[r.method,_].join(" "),w={getLogin:`GET ${t}/login`,getCallback:`GET ${t}/callback`,createToken:`POST ${t}/token`,getToken:`GET ${t}/token`,patchToken:`PATCH ${t}/token`,patchRefreshToken:`PATCH ${t}/refresh-token`,scopeToken:`POST ${t}/token/scoped`,deleteToken:`DELETE ${t}/token`,deleteGrant:`DELETE ${t}/grant`};if(!Object.values(w).includes(y))return null;let I;try{const P=await r.text();I=P?JSON.parse(P):{}}catch{return{status:400,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify({error:"[@octokit/oauth-app] request error"})}}const{searchParams:C}=new URL(r.url,"http://localhost"),U=(0,ya.default)(C),k=r.headers;try{if(y===w.getLogin){const{url:T}=e.getWebFlowAuthorizationUrl({state:U.state,scopes:U.scopes?U.scopes.split(","):void 0,allowSignup:U.allowSignup?U.allowSignup==="true":void 0,redirectUrl:U.redirectUrl});return{status:302,headers:{location:T}}}if(y===w.getCallback){if(U.error)throw new Error(`[@octokit/oauth-app] ${U.error} ${U.error_description}`);if(!U.code)throw new Error('[@octokit/oauth-app] "code" parameter is required');const{authentication:{token:T}}=await e.createToken({code:U.code});return{status:200,headers:{"content-type":"text/html"},text:`<h1>Token created successfully</h1>
    
<p>Your token is: <strong>${T}</strong>. Copy it now as it cannot be shown again.</p>`}}if(y===w.createToken){const{code:T,redirectUrl:R}=I;if(!T)throw new Error('[@octokit/oauth-app] "code" parameter is required');const q=await e.createToken({code:T,redirectUrl:R});return delete q.authentication.clientSecret,{status:201,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(q)}}if(y===w.getToken){const T=(s=k.authorization)==null?void 0:s.substr(6);if(!T)throw new Error('[@octokit/oauth-app] "Authorization" header is required');const R=await e.checkToken({token:T});return delete R.authentication.clientSecret,{status:200,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(R)}}if(y===w.patchToken){const T=(o=k.authorization)==null?void 0:o.substr(6);if(!T)throw new Error('[@octokit/oauth-app] "Authorization" header is required');const R=await e.resetToken({token:T});return delete R.authentication.clientSecret,{status:200,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(R)}}if(y===w.patchRefreshToken){if(!((n=k.authorization)==null?void 0:n.substr(6)))throw new Error('[@octokit/oauth-app] "Authorization" header is required');const{refreshToken:R}=I;if(!R)throw new Error("[@octokit/oauth-app] refreshToken must be sent in request body");const q=await e.refreshToken({refreshToken:R});return delete q.authentication.clientSecret,{status:200,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(q)}}if(y===w.scopeToken){const T=(a=k.authorization)==null?void 0:a.substr(6);if(!T)throw new Error('[@octokit/oauth-app] "Authorization" header is required');const R=await e.scopeToken({token:T,...I});return delete R.authentication.clientSecret,{status:200,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(R)}}if(y===w.deleteToken){const T=(l=k.authorization)==null?void 0:l.substr(6);if(!T)throw new Error('[@octokit/oauth-app] "Authorization" header is required');return await e.deleteToken({token:T}),{status:204,headers:{"access-control-allow-origin":"*"}}}const P=(p=k.authorization)==null?void 0:p.substr(6);if(!P)throw new Error('[@octokit/oauth-app] "Authorization" header is required');return await e.deleteAuthorization({token:P}),{status:204,headers:{"access-control-allow-origin":"*"}}}catch(P){return{status:400,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify({error:P.message})}}}function Zs(e){const{method:t,url:r,headers:s}=e;async function o(){return await new Promise((a,l)=>{let p=[];e.on("error",l).on("data",_=>p.push(_)).on("end",()=>a(Buffer.concat(p).toString()))})}return{method:t,url:r,headers:s,text:o}}function eo(e,t){t.writeHead(e.status,e.headers),t.end(e.text)}function nr(e){return{status:404,headers:{"content-type":"application/json"},text:JSON.stringify({error:`Unknown route: ${e.method} ${e.url}`})}}function ba(e,t){const r=Zs(e),s=nr(r);eo(s,t)}function Ta(e,{pathPrefix:t,onUnhandledRequest:r}={}){return r&&e.octokit.log.warn("[@octokit/oauth-app] `onUnhandledRequest` is deprecated and will be removed from the next major version."),r??(r=ba),async function(s,o,n){const a=Zs(s),l=await St(e,{pathPrefix:t},a);l?eo(l,o):typeof n=="function"?n():r(s,o)}}function to(e){const t=Object.fromEntries(e.headers.entries());return{method:e.method,url:e.url,headers:t,text:()=>e.text()}}function ro(e){return new Response(e.text,{status:e.status,headers:e.headers})}async function Ea(e){const t=to(e),r=nr(t);return ro(r)}function so(e,{pathPrefix:t,onUnhandledRequest:r}={}){return r&&e.octokit.log.warn("[@octokit/oauth-app] `onUnhandledRequest` is deprecated and will be removed from the next major version."),r??(r=Ea),async function(s){const o=to(s),n=await St(e,{pathPrefix:t},o);return n?ro(n):await r(s)}}function ka(...e){return e[0].octokit.log.warn("[@octokit/oauth-app] `createCloudflareHandler` is deprecated, use `createWebWorkerHandler` instead"),so(...e)}function oo(e){const{method:t}=e.requestContext.http;let r=e.rawPath;const{stage:s}=e.requestContext;r.startsWith("/"+s)&&(r=r.substring(s.length+1)),e.rawQueryString&&(r+="?"+e.rawQueryString);const o=e.headers;return{method:t,url:r,headers:o,text:async()=>e.body||""}}function no(e){return{statusCode:e.status,headers:e.headers,body:e.text}}async function va(e){const t=oo(e),r=nr(t);return no(r)}function Aa(e,{pathPrefix:t,onUnhandledRequest:r}={}){return r&&e.octokit.log.warn("[@octokit/oauth-app] `onUnhandledRequest` is deprecated and will be removed from the next major version."),r??(r=va),async function(s){const o=oo(s),n=await St(e,{pathPrefix:t},o);return n?no(n):r(s)}}var io=class{static defaults(t){return class extends this{constructor(...s){super({...t,...s[0]})}}}constructor(t){const r=t.Octokit||ea;this.type=t.clientType||"oauth-app";const s=new r({authStrategy:Yi.createOAuthAppAuth,auth:{clientType:this.type,clientId:t.clientId,clientSecret:t.clientSecret}}),o={clientType:this.type,clientId:t.clientId,clientSecret:t.clientSecret,defaultScopes:t.defaultScopes||[],allowSignup:t.allowSignup,baseUrl:t.baseUrl,redirectUrl:t.redirectUrl,log:t.log,Octokit:r,octokit:s,eventHandlers:{}};this.on=Xs.bind(null,o),this.octokit=s,this.getUserOctokit=ra.bind(null,o),this.getWebFlowAuthorizationUrl=oa.bind(null,o),this.createToken=ia.bind(null,o),this.checkToken=ca.bind(null,o),this.resetToken=la.bind(null,o),this.refreshToken=da.bind(null,o),this.scopeToken=fa.bind(null,o),this.deleteToken=_a.bind(null,o),this.deleteAuthorization=wa.bind(null,o)}};io.VERSION=Ys;var Sa=(e,t=1,r)=>{if(r={indent:" ",includeEmptyLines:!1,...r},typeof e!="string")throw new TypeError(`Expected \`input\` to be a \`string\`, got \`${typeof e}\``);if(typeof t!="number")throw new TypeError(`Expected \`count\` to be a \`number\`, got \`${typeof t}\``);if(typeof r.indent!="string")throw new TypeError(`Expected \`options.indent\` to be a \`string\`, got \`${typeof r.indent}\``);if(t===0)return e;const s=r.includeEmptyLines?/^/gm:/^(?!\s*$)/gm;return e.replace(s,r.indent.repeat(t))};const Oa={},Ra=Object.freeze(Object.defineProperty({__proto__:null,default:Oa},Symbol.toStringTag,{value:"Module"})),Pa=ke(Ra),ts=Pa,rs=/\s+at.*(?:\(|\s)(.*)\)?/,Ga=/^(?:(?:(?:node|(?:internal\/[\w/]*|.*node_modules\/(?:babel-polyfill|pirates)\/.*)?\w+)\.js:\d+:\d+)|native)/,Fa=typeof ts.homedir>"u"?"":ts.homedir();var Ua=(e,t)=>(t=Object.assign({pretty:!1},t),e.replace(/\\/g,"/").split(`
`).filter(r=>{const s=r.match(rs);if(s===null||!s[1])return!0;const o=s[1];return o.includes(".app/Contents/Resources/electron.asar")||o.includes(".app/Contents/Resources/default_app.asar")?!1:!Ga.test(o)}).filter(r=>r.trim()!=="").map(r=>t.pretty?r.replace(rs,(s,o)=>s.replace(o,o.replace(Fa,"~"))):r).join(`
`));const Da=Sa,Ia=Ua,Ca=e=>e.replace(/\s+at .*aggregate-error\/index.js:\d+:\d+\)?/g,"");class ja extends Error{constructor(t){if(!Array.isArray(t))throw new TypeError(`Expected input to be an Array, got ${typeof t}`);t=[...t].map(s=>s instanceof Error?s:s!==null&&typeof s=="object"?Object.assign(new Error(s.message),s):new Error(s));let r=t.map(s=>typeof s.stack=="string"?Ca(Ia(s.stack)):String(s)).join(`
`);r=`
`+Da(r,4),super(r),this.name="AggregateError",Object.defineProperty(this,"_errors",{value:t})}*[Symbol.iterator](){for(const t of this._errors)yield t}}var qa=ja;const He=at(qa);var qe;(function(e){e.SHA1="sha1",e.SHA256="sha256"})(qe||(qe={}));const $a=e=>e.startsWith("sha256=")?"sha256":"sha1",ir=new TextEncoder;function La(e){const r=e.match(/[\dA-F]{2}/gi).map(function(s){return parseInt(s,16)});return new Uint8Array(r)}function xa(e){return Array.prototype.map.call(new Uint8Array(e),t=>t.toString(16).padStart(2,"0")).join("")}function Wa(e){return{[qe.SHA1]:"SHA-1",[qe.SHA256]:"SHA-256"}[e]}async function ao(e,t){return crypto.subtle.importKey("raw",ir.encode(e),{name:"HMAC",hash:{name:Wa(t)}},!1,["sign","verify"])}async function Ba(e,t){const{secret:r,algorithm:s}=typeof e=="object"?{secret:e.secret,algorithm:e.algorithm||qe.SHA256}:{secret:e,algorithm:qe.SHA256};if(!r||!t)throw new TypeError("[@octokit/webhooks-methods] secret & payload required for sign()");if(!Object.values(qe).includes(s))throw new TypeError(`[@octokit/webhooks] Algorithm ${s} is not supported. Must be  'sha1' or 'sha256'`);const o=await crypto.subtle.sign("HMAC",await ao(r,s),ir.encode(t));return`${s}=${xa(o)}`}async function co(e,t,r){if(!e||!t||!r)throw new TypeError("[@octokit/webhooks-methods] secret, eventPayload & signature required");const s=$a(r);return await crypto.subtle.verify("HMAC",await ao(e,s),La(r.replace(`${s}=`,"")),ir.encode(t))}var ar=e=>({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console),...e}),Ha=["branch_protection_rule","branch_protection_rule.created","branch_protection_rule.deleted","branch_protection_rule.edited","check_run","check_run.completed","check_run.created","check_run.requested_action","check_run.rerequested","check_suite","check_suite.completed","check_suite.requested","check_suite.rerequested","code_scanning_alert","code_scanning_alert.appeared_in_branch","code_scanning_alert.closed_by_user","code_scanning_alert.created","code_scanning_alert.fixed","code_scanning_alert.reopened","code_scanning_alert.reopened_by_user","commit_comment","commit_comment.created","create","delete","dependabot_alert","dependabot_alert.created","dependabot_alert.dismissed","dependabot_alert.fixed","dependabot_alert.reintroduced","dependabot_alert.reopened","deploy_key","deploy_key.created","deploy_key.deleted","deployment","deployment.created","deployment_status","deployment_status.created","discussion","discussion.answered","discussion.category_changed","discussion.created","discussion.deleted","discussion.edited","discussion.labeled","discussion.locked","discussion.pinned","discussion.transferred","discussion.unanswered","discussion.unlabeled","discussion.unlocked","discussion.unpinned","discussion_comment","discussion_comment.created","discussion_comment.deleted","discussion_comment.edited","fork","github_app_authorization","github_app_authorization.revoked","gollum","installation","installation.created","installation.deleted","installation.new_permissions_accepted","installation.suspend","installation.unsuspend","installation_repositories","installation_repositories.added","installation_repositories.removed","installation_target","installation_target.renamed","issue_comment","issue_comment.created","issue_comment.deleted","issue_comment.edited","issues","issues.assigned","issues.closed","issues.deleted","issues.demilestoned","issues.edited","issues.labeled","issues.locked","issues.milestoned","issues.opened","issues.pinned","issues.reopened","issues.transferred","issues.unassigned","issues.unlabeled","issues.unlocked","issues.unpinned","label","label.created","label.deleted","label.edited","marketplace_purchase","marketplace_purchase.cancelled","marketplace_purchase.changed","marketplace_purchase.pending_change","marketplace_purchase.pending_change_cancelled","marketplace_purchase.purchased","member","member.added","member.edited","member.removed","membership","membership.added","membership.removed","merge_group","merge_group.checks_requested","meta","meta.deleted","milestone","milestone.closed","milestone.created","milestone.deleted","milestone.edited","milestone.opened","org_block","org_block.blocked","org_block.unblocked","organization","organization.deleted","organization.member_added","organization.member_invited","organization.member_removed","organization.renamed","package","package.published","package.updated","page_build","ping","project","project.closed","project.created","project.deleted","project.edited","project.reopened","project_card","project_card.converted","project_card.created","project_card.deleted","project_card.edited","project_card.moved","project_column","project_column.created","project_column.deleted","project_column.edited","project_column.moved","projects_v2_item","projects_v2_item.archived","projects_v2_item.converted","projects_v2_item.created","projects_v2_item.deleted","projects_v2_item.edited","projects_v2_item.reordered","projects_v2_item.restored","public","pull_request","pull_request.assigned","pull_request.auto_merge_disabled","pull_request.auto_merge_enabled","pull_request.closed","pull_request.converted_to_draft","pull_request.demilestoned","pull_request.dequeued","pull_request.edited","pull_request.labeled","pull_request.locked","pull_request.milestoned","pull_request.opened","pull_request.queued","pull_request.ready_for_review","pull_request.reopened","pull_request.review_request_removed","pull_request.review_requested","pull_request.synchronize","pull_request.unassigned","pull_request.unlabeled","pull_request.unlocked","pull_request_review","pull_request_review.dismissed","pull_request_review.edited","pull_request_review.submitted","pull_request_review_comment","pull_request_review_comment.created","pull_request_review_comment.deleted","pull_request_review_comment.edited","pull_request_review_thread","pull_request_review_thread.resolved","pull_request_review_thread.unresolved","push","registry_package","registry_package.published","registry_package.updated","release","release.created","release.deleted","release.edited","release.prereleased","release.published","release.released","release.unpublished","repository","repository.archived","repository.created","repository.deleted","repository.edited","repository.privatized","repository.publicized","repository.renamed","repository.transferred","repository.unarchived","repository_dispatch","repository_import","repository_vulnerability_alert","repository_vulnerability_alert.create","repository_vulnerability_alert.dismiss","repository_vulnerability_alert.reopen","repository_vulnerability_alert.resolve","secret_scanning_alert","secret_scanning_alert.created","secret_scanning_alert.reopened","secret_scanning_alert.resolved","security_advisory","security_advisory.performed","security_advisory.published","security_advisory.updated","security_advisory.withdrawn","sponsorship","sponsorship.cancelled","sponsorship.created","sponsorship.edited","sponsorship.pending_cancellation","sponsorship.pending_tier_change","sponsorship.tier_changed","star","star.created","star.deleted","status","team","team.added_to_repository","team.created","team.deleted","team.edited","team.removed_from_repository","team_add","watch","watch.started","workflow_dispatch","workflow_job","workflow_job.completed","workflow_job.in_progress","workflow_job.queued","workflow_run","workflow_run.completed","workflow_run.in_progress","workflow_run.requested"];function cr(e,t,r){e.hooks[t]||(e.hooks[t]=[]),e.hooks[t].push(r)}function lo(e,t,r){if(Array.isArray(t)){t.forEach(s=>lo(e,s,r));return}if(["*","error"].includes(t)){const s=t==="*"?"any":t,o=`Using the "${t}" event with the regular Webhooks.on() function is not supported. Please use the Webhooks.on${s.charAt(0).toUpperCase()+s.slice(1)}() method instead`;throw new Error(o)}Ha.includes(t)||e.log.warn(`"${t}" is not a known webhook name (https://developer.github.com/v3/activity/events/types/)`),cr(e,t,r)}function za(e,t){cr(e,"*",t)}function Na(e,t){cr(e,"error",t)}function ss(e,t){let r;try{r=e(t)}catch(s){console.log('FATAL: Error occurred in "error" event handler'),console.log(s)}r&&r.catch&&r.catch(s=>{console.log('FATAL: Error occurred in "error" event handler'),console.log(s)})}function Ma(e,t,r){const s=[e.hooks[r],e.hooks["*"]];return t&&s.unshift(e.hooks[`${r}.${t}`]),[].concat(...s.filter(Boolean))}function Va(e,t){const r=e.hooks.error||[];if(t instanceof Error){const a=Object.assign(new He([t]),{event:t,errors:[t]});return r.forEach(l=>ss(l,a)),Promise.reject(a)}if(!t||!t.name)throw new He(["Event name not passed"]);if(!t.payload)throw new He(["Event payload not passed"]);const s=Ma(e,"action"in t.payload?t.payload.action:null,t.name);if(s.length===0)return Promise.resolve();const o=[],n=s.map(a=>{let l=Promise.resolve(t);return e.transform&&(l=l.then(e.transform)),l.then(p=>a(p)).catch(p=>o.push(Object.assign(p,{event:t})))});return Promise.all(n).then(()=>{if(o.length===0)return;const a=new He(o);throw Object.assign(a,{event:t,errors:o}),r.forEach(l=>ss(l,a)),a})}function uo(e,t,r){if(Array.isArray(t)){t.forEach(s=>uo(e,s,r));return}if(e.hooks[t]){for(let s=e.hooks[t].length-1;s>=0;s--)if(e.hooks[t][s]===r){e.hooks[t].splice(s,1);return}}}function Ka(e){const t={hooks:{},log:ar(e&&e.log)};return e&&e.transform&&(t.transform=e.transform),{on:lo.bind(null,t),onAny:za.bind(null,t),onError:Na.bind(null,t),removeListener:uo.bind(null,t),receive:Va.bind(null,t)}}function lr(e){return JSON.stringify(e).replace(/[^\\]\\u[\da-f]{4}/g,r=>r.substr(0,3)+r.substr(3).toUpperCase())}async function Ja(e,t){return Ba(e,typeof t=="string"?t:lr(t))}async function Qa(e,t,r){return co(e,typeof t=="string"?t:lr(t),r)}async function Ya(e,t){if(!await co(e.secret,typeof t.payload=="object"?lr(t.payload):t.payload,t.signature)){const s=new Error("[@octokit/webhooks] signature does not match event payload and secret");return e.eventHandler.receive(Object.assign(s,{event:t,status:400}))}return e.eventHandler.receive({id:t.id,name:t.name,payload:typeof t.payload=="string"?JSON.parse(t.payload):t.payload})}var Xa=["x-github-event","x-hub-signature-256","x-github-delivery"];function Za(e){return Xa.filter(t=>!(t in e.headers))}function ec(e){return e.body?(typeof e.body!="string"&&console.warn("[@octokit/webhooks] Passing the payload as a JSON object in `request.body` is deprecated and will be removed in a future release of `@octokit/webhooks`, please pass it as a a `string` instead."),Promise.resolve(e.body)):new Promise((t,r)=>{let s="";e.setEncoding("utf8"),e.on("error",o=>r(new He([o]))),e.on("data",o=>s+=o),e.on("end",()=>{try{JSON.parse(s),t(s)}catch(o){o.message="Invalid JSON",o.status=400,r(new He([o]))}})})}async function tc(e,t,r,s,o){let n;try{n=new URL(r.url,"http://localhost").pathname}catch{s.writeHead(422,{"content-type":"application/json"}),s.end(JSON.stringify({error:`Request URL could not be parsed: ${r.url}`}));return}const a=r.method!=="POST"||n!==t.path,l=typeof o=="function";if(a)return l?o():t.onUnhandledRequest(r,s);if(!r.headers["content-type"]||!r.headers["content-type"].startsWith("application/json")){s.writeHead(415,{"content-type":"application/json",accept:"application/json"}),s.end(JSON.stringify({error:'Unsupported "Content-Type" header value. Must be "application/json"'}));return}const p=Za(r).join(", ");if(p){s.writeHead(400,{"content-type":"application/json"}),s.end(JSON.stringify({error:`Required headers missing: ${p}`}));return}const _=r.headers["x-github-event"],y=r.headers["x-hub-signature-256"],w=r.headers["x-github-delivery"];t.log.debug(`${_} event received (id: ${w})`);let I=!1;const C=setTimeout(()=>{I=!0,s.statusCode=202,s.end(`still processing
`)},9e3).unref();try{const U=await ec(r);if(await e.verifyAndReceive({id:w,name:_,payload:U,signature:y}),clearTimeout(C),I)return;s.end(`ok
`)}catch(U){if(clearTimeout(C),I)return;const k=Array.from(U)[0],P=k.message?`${k.name}: ${k.message}`:"Error: An Unspecified error occurred";s.statusCode=typeof k.status<"u"?k.status:500,t.log.error(U),s.end(JSON.stringify({error:P}))}}function rc(e,t){t.writeHead(404,{"content-type":"application/json"}),t.end(JSON.stringify({error:`Unknown route: ${e.method} ${e.url}`}))}function sc(e,{path:t="/api/github/webhooks",onUnhandledRequest:r=rc,log:s=ar()}={}){const o=(n,a)=>(console.warn("[@octokit/webhooks] `onUnhandledRequest()` is deprecated and will be removed in a future release of `@octokit/webhooks`"),r(n,a));return tc.bind(null,e,{path:t,onUnhandledRequest:o,log:s})}var oc=class{constructor(e){if(!e||!e.secret)throw new Error("[@octokit/webhooks] options.secret required");const t={eventHandler:Ka(e),secret:e.secret,hooks:{},log:ar(e.log)};this.sign=Ja.bind(null,e.secret),this.verify=(r,s)=>(typeof r=="object"&&console.warn("[@octokit/webhooks] Passing a JSON payload object to `verify()` is deprecated and the functionality will be removed in a future release of `@octokit/webhooks`"),Qa(e.secret,r,s)),this.on=t.eventHandler.on,this.onAny=t.eventHandler.onAny,this.onError=t.eventHandler.onError,this.removeListener=t.eventHandler.removeListener,this.receive=t.eventHandler.receive,this.verifyAndReceive=r=>(typeof r.payload=="object"&&console.warn("[@octokit/webhooks] Passing a JSON payload object to `verifyAndReceive()` is deprecated and the functionality will be removed in a future release of `@octokit/webhooks`"),Ya(t,r))}},nc="13.1.5";function ic(e,t){return new oc({secret:t.secret,transform:async r=>{if(!("installation"in r.payload)||typeof r.payload.installation!="object"){const n=new e.constructor({authStrategy:Vs,auth:{reason:'"installation" key missing in webhook event payload'}});return{...r,octokit:n}}const s=r.payload.installation.id,o=await e.auth({type:"installation",installationId:s,factory(n){return new n.octokit.constructor({...n.octokitOptions,authStrategy:sr,auth:{...n,installationId:s}})}});return o.hook.before("request",n=>{n.headers["x-github-delivery"]=r.id}),{...r,octokit:o}}})}async function po(e,t){return e.octokit.auth({type:"installation",installationId:t,factory(r){const s={...r.octokitOptions,authStrategy:sr,auth:{...r,installationId:t}};return new r.octokit.constructor(s)}})}function ac(e){return Object.assign(cc.bind(null,e),{iterator:ho.bind(null,e)})}async function cc(e,t){const r=ho(e)[Symbol.asyncIterator]();let s=await r.next();for(;!s.done;)await t(s.value),s=await r.next()}function ho(e){return{async*[Symbol.asyncIterator](){const t=As.iterator(e.octokit,"GET /app/installations");for await(const{data:r}of t)for(const s of r)yield{octokit:await po(e,s.id),installation:s}}}}function lc(e){return Object.assign(uc.bind(null,e),{iterator:go.bind(null,e)})}async function uc(e,t,r){const s=go(e,r?t:void 0)[Symbol.asyncIterator]();let o=await s.next();for(;!o.done;)r?await r(o.value):await t(o.value),o=await s.next()}function pc(e,t){return{async*[Symbol.asyncIterator](){yield{octokit:await e.getInstallationOctokit(t)}}}}function go(e,t){return{async*[Symbol.asyncIterator](){const r=t?pc(e,t.installationId):e.eachInstallation.iterator();for await(const{octokit:s}of r){const o=As.iterator(s,"GET /installation/repositories");for await(const{data:n}of o)for(const a of n)yield{octokit:s,repository:a}}}}}function dc(e,t){t.writeHead(404,{"content-type":"application/json"}),t.end(JSON.stringify({error:`Unknown route: ${e.method} ${e.url}`}))}function os(){}function Fc(e,t={}){const r=Object.assign({debug:os,info:os,warn:console.warn.bind(console),error:console.error.bind(console)},t.log),s={onUnhandledRequest:dc,pathPrefix:"/api/github",...t,log:r},o=sc(e.webhooks,{path:s.pathPrefix+"/webhooks",log:r,onUnhandledRequest:s.onUnhandledRequest}),n=or.createNodeMiddleware(e.oauth,{pathPrefix:s.pathPrefix+"/oauth",onUnhandledRequest:s.onUnhandledRequest});return hc.bind(null,s,{webhooksMiddleware:o,oauthMiddleware:n})}async function hc(e,{webhooksMiddleware:t,oauthMiddleware:r},s,o,n){const{pathname:a}=new URL(s.url,"http://localhost");return a===`${e.pathPrefix}/webhooks`?t(s,o,n):a.startsWith(`${e.pathPrefix}/oauth/`)?r(s,o,n):typeof n=="function"?n():e.onUnhandledRequest(s,o)}var fo=class{static defaults(t){return class extends this{constructor(...s){super({...t,...s[0]})}}}constructor(t){const r=t.Octokit||lt,s=Object.assign({appId:t.appId,privateKey:t.privateKey},t.oauth?{clientId:t.oauth.clientId,clientSecret:t.oauth.clientSecret}:{});this.octokit=new r({authStrategy:sr,auth:s,log:t.log}),this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},t.log),t.webhooks?this.webhooks=ic(this.octokit,t.webhooks):Object.defineProperty(this,"webhooks",{get(){throw new Error("[@octokit/app] webhooks option not set")}}),t.oauth?this.oauth=new or.OAuthApp({...t.oauth,clientType:"github-app",Octokit:r}):Object.defineProperty(this,"oauth",{get(){throw new Error("[@octokit/app] oauth.clientId / oauth.clientSecret options are not set")}}),this.getInstallationOctokit=po.bind(null,this),this.eachInstallation=ac(this),this.eachRepository=lc(this)}};fo.VERSION=nc;var gc="2.0.19",mo=lt.plugin(Os,Ss,Fs,tr).defaults({userAgent:`octokit.js/${gc}`,throttle:{onRateLimit:fc,onSecondaryRateLimit:mc}});function fc(e,t,r){if(r.log.warn(`Request quota exhausted for request ${t.method} ${t.url}`),t.request.retryCount===0)return r.log.info(`Retrying after ${e} seconds!`),!0}function mc(e,t,r){if(r.log.warn(`SecondaryRateLimit detected for request ${t.method} ${t.url}`),t.request.retryCount===0)return r.log.info(`Retrying after ${e} seconds!`),!0}var Dc=fo.defaults({Octokit:mo}),Ic=or.OAuthApp.defaults({Octokit:mo});export{Dc as App,Ic as OAuthApp,mo as Octokit,Fc as createNodeMiddleware};
